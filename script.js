`use strict`;

// ================================
// What page is this?
// ================================

// Important later, so we know which html file we are using
let page = `index`; // Name of page, default index
if (window.location.href.includes(`relation`)) {
    page = `relation`;
} else if (window.location.href.includes(`index`)) {
    page = `index`;
} else if (window.location.href.includes(`game`)) {
    page = `game`;
}
else {
    page = `index`; // Default
};

// ================================
// Functions u d to upload/download data from localStorage()
// ================================

const u = function (key, value) {
    localStorage.setItem(`${key}`,`${value}`);
};
const uArray = function (key, array) {
    let toUp = JSON.stringify(array);
    localStorage.setItem(`${key}`, toUp)
}
const dArray = function (key) {
    let toD = JSON.parse(localStorage.getItem(`${key}`));
    return toD;
}
const d = function(item) {
    return localStorage.getItem(`${item}`);
};
const dnum = function(item) {
    return Number(localStorage.getItem(`${item}`));
};

// ================================
// Language init
// ================================

// Intialize lang from localStorage
let lang = `eng`; // Default
if (d(`lang`) === `ru` || d(`lang`) === `eng`) {
    lang = localStorage.getItem(`lang`);
} else {
    localStorage.lang = `eng`;
    lang = localStorage.lang;
};

// Function which changes look of lang option
function changeNadpisLang(lang) {
    document.querySelector(`#setLanguage`).textContent = `${lang}`;   
};
// Get the right look in the setting, if we need it
function setVisualLang(lang) {
    if (page === `index`) {
        switch (lang) {
            case `ru`:
                changeNadpisLang(`Язык: RUS`);
                break;
            case `eng`:
                changeNadpisLang(`Language: ENG`);
                break;
            default:
                changeNadpisLang(`Language: ENG`);
                break;
        };
    };
};
setVisualLang(lang);

// ================================
// Redir to index if game not started
// ================================
if (page !== `index`) {
    if (!parseInt(d(`gameStarted`))) {
        window.location.href = `./index.html`;
        resetGame();
    };
};

// ================================
// If mobile, give body class body.mobile
// ================================

const mobile = function (on) {
    const body = document.querySelector(`body`);
    if (on == 1) {
        body.classList.add(`mobile`);
    } else {
        body.classList.remove(`mobile`);
    };
};

const judgeMobileOrNot = function () {
    const screenWidth = window.innerWidth;
    const screenHeight = window.innerHeight;
    if (screenHeight >= screenWidth) {
        mobile(1);  
    } else {
        mobile(0);
    };
}

// Activate when screen change or rotate, or just load
judgeMobileOrNot();
// window.addEventListener('resize', judgeMobileOrNot);
const interval = setInterval(judgeMobileOrNot, 200);

// ================================
// loc - object which stores all localization data (texts)
// ================================
let loc = {

    // ================================
    // loc.question
    // ================================
    question : {
        // Stencil to copy w/ defaults
       example: {
            characters: [`richard`, `ofleet`, `sam`],
            baseChnc: [100],
            decksNeed: [`sample`],
            decksPlusChnc: [`deckPlusChance`, 9900],
            decksRemove: [``],
            decksAdd: [``],
            quartersPassed: 1,
            eng: {
                text: "Hello! I am an example question which will appear only once.",
                answers: {
                1: "Ok *opens wallet* -treasury +patriotism",
                2: "*Sigh* I'll pay -treasury +patriotism",
                3: "You're cool +dem -patriotic",
                4: "*That's horrible!* Let me help -treasury",
                },
            },
            ru: {
                text: "Наш министр финансов рекомендует повысить ключевую ставку. Таким образом, мы сможем сдержать инфляцию. С другой стороны, экономический рост в стране может сократиться.",
                answers: {
                1: "Ты молодец +дем +патриотичность",
                2: "*Вздох* Я заплачу -сокровищница +патриотичность",
                3: "Ладно *открывает кошелек* -сокровищница +патриотичность",
                4: "*Ужасно!* Позвольте мне помочь -сокровищница +патриотичность",
                },
            },
            1: {
                democratic: 2,
                patriotic: -5,
                diplomaticWest: -5,
                decksAdd: [`added`],
                decksRemove: [`removed1`],
                warHonti: `War`,
                nextQuestion: `exampleTwo`,
            },
            2: {
                treasury: -2,
                democratic: 2,
                patriotic: 5,
                decksRemove: [`removed2`],
                decksAdd: [`added`, `added2`]
            },
            3: {
                treasury: -2,
                democractic: 2,
                patriotic: 5,
            },
            4: {
                treasury: -2,
                democractic: 2,
                patriotic: 5,
            },
        },
        welcome: {
            characters: [`sam`],
            baseChnc: [1],
            decksNeed: [`welcome`],
            decksPlusChnc: [],
            eng: {
                text: "Welcome!",
                answers: {
                1: `Continue...`
                },
            },
            ru : {
                text: "Добро пожаловать в игру!",
                answers: {
                1: "Продолжить...",
                },
            },
            1: {
            },
        },
        exampleStartingWar: {
            characters: [`descent`],
            baseChnc: [0],
            decksNeed: [`example`],
            decksPlusChnc: [``],
            decksRemove: [``],
            decksAdd: [``],
            quartersPassed: 0,
            status: 0,
            war: 1,
            eng: {
                text: "Our soldiers are crossing the Khontese border.",
                answers: {
                1: "Epic.",
                2: "",
                3: "",
                4: "",
                },
            },
            ru: {
                text: "Наш морской десант высаживается в Хонти.",
                answers: {
                1: `Покой нам только снится.`,
                2: "",
                3: "",
                4: "",
                },
            },
            1: {
            },
        },
        exampleStatus: {
            characters: [`richard`, `sam`, `ofleet`],
            baseChnc: [100],
            decksNeed: [`example`],
            decksPlusChnc: [``],
            decksRemove: [``],
            decksAdd: [``],
            quartersPassed: 0,
            status: 1,
            war: 0,
            eng: {
                text: "This is just an example of a peaceful notification.",
                answers: {
                    1: `Ok.`,
                },
            },
            ru: {
                text: "Лорем ипсум долор си амет хай или как там инаугурация.",
                answers: {
                    1: `Ладно.`
                },
            },
            1: {
            },
        },
        exampleWarMaybe: {
            characters: [`sam`, `richard`, `ofleet`],
            baseChnc: [100],
            decksNeed: [`example`],
            decksPlusChnc: [``],
            decksRemove: [``],
            decksAdd: [``],
            quartersPassed: 1,
            status: 0,
            war: 0,
            eng: {
                text: "Khonti should be destroyed.",
                answers: {
                    1: `Ok. [-10 influence in Khonti]`,
                    2: `Let's not. [+5 influence in Khonti]`,
                },
            },
            ru: {
                text: "Хонти должна быть уничтожена.",
                answers: {
                    1: `Правильно. [-10 влияния в Хонти]`,
                    2: `Может не надо? [+5 влияния в Хонти]`,
                },
            },
            1: {
                warHonti: `War`,
                patriotic: 10,
                democratic: -20,
                nextQuestion: `exampleStartingWar`,
                diplomaticHonti: -10,
                manpower: -0.2,
            },
            2: {
                patriotic: -1,
                diplomaticHonti: 5,
            }
        },
    },

    //Characters
    character: {
        ofleet: {
            eng: {
                name: "O'Fleet",
                title: ", Officer",
            },
            ru: {
                name: "Офлит",
                title: ", Офицер",
            },
            contourD: "m 250.74,297.25c -0.11,-0.27 -0.61,-0.8 -0.74,-1.06 -0.03,-0.06 0.02,-0.14 0,-0.21 -0.05,-0.2 -0.26,-0.36 -0.32,-0.53 -0.08,-0.25 -0.09,-0.4 -0.21,-0.64 -0.03,-0.06 0.03,-0.15 0,-0.21 -0.13,-0.26 -0.29,-0.48 -0.42,-0.74 -0.05,-0.11 -0.05,-0.32 -0.11,-0.42 -0.02,-0.04 -0.09,-0.06 -0.11,-0.11 -0.02,-0.07 0.02,-0.14 0,-0.21 -0.03,-0.1 -0.18,-0.12 -0.21,-0.21 -0.02,-0.07 0.02,-0.14 0,-0.21 -0.06,-0.17 -0.23,-0.36 -0.32,-0.53 -0.14,-0.28 -0.19,-0.58 -0.32,-0.85 -0.05,-0.1 0.03,-0.21 0,-0.32 -0.05,-0.18 -0.17,-0.34 -0.21,-0.53 -0.05,-0.21 -0.05,-0.42 -0.11,-0.64 -0.07,-0.27 0.05,-0.58 0,-0.85 -0.01,-0.08 -0.09,-0.14 -0.11,-0.21 -0.09,-0.36 0.12,-0.81 0,-1.17 -0.03,-0.07 -0.09,-0.14 -0.11,-0.21 -0.07,-0.26 0.08,-0.59 0,-0.85 -0.02,-0.05 -0.09,-0.06 -0.11,-0.11 -0.03,-0.1 0.03,-0.22 0,-0.32 -0.08,-0.25 -0.15,-0.48 -0.21,-0.74 -0.06,-0.23 0.06,-0.51 0,-0.74 -0.25,-1.01 -0.11,-2.22 -0.11,-3.28 0,-0.55 -0.12,-1.64 0,-2.12 0.02,-0.08 0.09,-0.13 0.11,-0.21 0.1,-0.48 -0.08,-1 0,-1.48 0.11,-0.68 0.15,-1.36 0.32,-2.01 0.07,-0.27 -0.07,-0.58 0,-0.85 0.02,-0.08 0.09,-0.14 0.11,-0.21 0.07,-0.26 -0.09,-0.59 0,-0.85 0.1,-0.3 0.03,-0.55 0.11,-0.85 0.07,-0.28 0.16,-0.57 0.21,-0.85 0.04,-0.17 -0.04,-0.36 0,-0.53 0.12,-0.48 0.19,-0.99 0.32,-1.48 0.05,-0.18 0.17,-0.34 0.21,-0.53 0.02,-0.1 -0.02,-0.21 0,-0.32 0.07,-0.43 0.25,-0.85 0.32,-1.27 0.07,-0.45 0.1,-0.93 0.21,-1.38 0.02,-0.08 0.07,-0.14 0.11,-0.21 0.04,-0.11 0.08,-0.21 0.11,-0.32 0.02,-0.1 -0.03,-0.22 0,-0.32 0.25,-0.75 0.63,-1.45 0.85,-2.23 0.21,-0.74 -0.11,0.11 0,-0.32 -0.02,-0.21 0.17,-0.34 0.21,-0.53 0.02,-0.07 -0.02,-0.14 0,-0.21 0.02,-0.05 0.09,-0.06 0.11,-0.11 0.03,-0.1 -0.02,-0.21 0,-0.32 0.04,-0.21 0.15,-0.65 0.21,-0.85 0.02,-0.05 0.09,-0.06 0.11,-0.11 0.02,-0.07 -0.02,-0.14 0,-0.21 0.02,-0.05 0.09,-0.06 0.11,-0.11 0.14,-0.44 0.17,-0.94 0.32,-1.38 0.02,-0.05 0.09,-0.06 0.11,-0.11 0.06,-0.18 0.04,-0.34 0.11,-0.53 0.02,-0.05 0.08,-0.06 0.11,-0.11 0.13,-0.27 0.22,-0.67 0.32,-0.95 0.16,-0.48 0.45,-0.91 0.64,-1.38 0.11,-0.27 0.12,-0.58 0.21,-0.85 0.07,-0.22 0.26,-0.41 0.32,-0.64 0.07,-0.28 0.14,-0.57 0.21,-0.85 0.04,-0.15 0.17,-0.27 0.21,-0.42 0.06,-0.24 0.05,-0.5 0.11,-0.74 0.06,-0.22 0.27,-0.41 0.32,-0.64 0.02,-0.1 -0.03,-0.21 0,-0.32 0.01,-0.05 0.07,-0.07 0.11,-0.11 0.04,-0.11 0.08,-0.21 0.11,-0.32 0.09,-0.47 0.33,-0.9 0.42,-1.38 0.05,-0.23 0.04,-0.75 0.11,-0.95 0.08,-0.23 0.11,-0.29 0.11,-0.53 -0.16,-0.31 -0.34,-0.61 -0.48,-0.92 -0,-0.01 0.12,-3.19 0.15,-3.3 0.02,-0.07 0.12,-0.09 0.15,-0.15 0.12,-0.24 -0.12,-0.66 0,-0.9 0.03,-0.06 0.12,-0.09 0.15,-0.15 0.2,-0.4 -0.2,-1.1 0,-1.5 0.17,-0.34 0.13,-0.71 0.3,-1.05 0.12,-0.23 0.03,-1.68 0.15,-1.8 0.04,-0.04 0.12,0.04 0.15,0 0.02,-0.02 0.09,-1.08 0.15,-1.2 0.03,-0.06 0.12,-0.09 0.15,-0.15 0.04,-0.09 -0.07,-0.38 0,-0.45 0.04,-0.04 0.12,0.04 0.15,0 0.1,-0.1 -0.1,-0.5 0,-0.6 0.04,-0.04 0.12,0.04 0.15,0 0.1,-0.1 -0.1,-0.5 0,-0.6 0.07,-0.07 0.23,-0.07 0.3,-0.15 0.1,-0.1 -0.1,-0.2 0,-0.3 0.07,-0.07 0.23,-0.07 0.3,-0.15 0.04,-0.04 -0.04,-0.12 0,-0.15 0.09,-0.09 1.27,0.11 1.35,0.15 0.15,0.07 0.88,0.62 1.05,0.75 0.42,0.32 1.16,0.93 1.35,1.5 0.05,0.15 0.03,0.48 0.15,0.6 0.31,0.31 -0.01,-0.47 0.3,0.15 0.04,0.09 0.09,0.39 0.15,0.45 0.04,0.04 0.12,-0.04 0.15,0 0.04,0.04 -0.02,0.1 0,0.15 0.31,0.62 -0.01,-0.16 0.3,0.15 0.04,0.04 0,0.1 0,0.15 0.05,0.05 0.09,0.11 0.15,0.15 0.52,0.35 1.09,0.56 1.65,0.75 0.19,0.06 0.36,0.27 0.6,0.15 0.04,-0.02 -0.04,-0.12 0,-0.15 0.07,-0.07 0.36,0.04 0.45,0 0.2,-0.1 0.41,-0.2 0.6,-0.3 0.3,-0.15 0.72,-0.79 1.05,-0.9 0.1,-0.03 0.2,0.03 0.3,0 0.19,-0.06 0.23,-0.37 0.3,-0.45 0.04,-0.04 0.1,0.02 0.15,0 0.34,-0.17 0.57,-0.59 0.9,-0.75 0.2,-0.1 0.38,-0.08 0.6,-0.15 0.09,-0.03 0.36,-0.27 0.45,-0.3 0.56,-0.19 2,0.12 2.55,0.3 0.3,0.1 1.21,0.1 1.5,0 0.07,-0.02 0.08,-0.13 0.15,-0.15 0.32,-0.1 0.73,0.1 1.05,0 0.07,-0.02 0.08,-0.13 0.15,-0.15 0.21,-0.07 0.55,0.1 0.75,0 0.06,-0.03 0.08,-0.13 0.15,-0.15 0.54,-0.18 1.26,0.18 1.8,0 0.07,-0.02 0.08,-0.13 0.15,-0.15 0.19,-0.06 0.41,0.05 0.6,0 0.11,-0.03 0.19,-0.12 0.3,-0.15 0.21,-0.05 0.56,0.1 0.75,0 0.06,-0.03 0.08,-0.13 0.15,-0.15 0.3,-0.1 0.76,-0.01 1.05,-0.15 0.06,-0.03 0.08,-0.13 0.15,-0.15 0.26,-0.09 0.65,-0.03 0.9,-0.15 0.22,-0.11 0.64,-0.47 0.9,-0.6 0.09,-0.04 0.23,0.07 0.3,0 0.04,-0.04 -0.04,-0.12 0,-0.15 0.14,-0.14 0.61,-0.16 0.75,-0.3 0.04,-0.04 -0.04,-0.12 0,-0.15 0.09,-0.09 1.01,-0.51 1.2,-0.6 0.13,-0.06 0.17,-0.24 0.3,-0.3 0.04,-0.02 0.12,0.04 0.15,0 0.04,-0.04 -0.04,-0.12 0,-0.15 0.04,-0.04 0.12,0.04 0.15,0 0.31,-0.31 -0.47,0.01 0.15,-0.3 0.04,-0.02 0.12,0.04 0.15,0 0.04,-0.04 -0.04,-0.12 0,-0.15 0.02,-0.02 0.98,-0.26 1.2,-0.15 0.25,0.12 0.51,0.18 0.75,0.3 0.13,0.06 0.17,0.24 0.3,0.3 0.04,0.02 0.12,-0.04 0.15,0 0.01,0.01 0.59,0.89 0.6,0.9 0.04,0.04 0.12,-0.04 0.15,0 0.1,0.1 -0.06,0.47 0,0.6 0.03,0.06 0.12,0.09 0.15,0.15 0.04,0.08 -0.24,1.44 -0.3,1.5 -0.09,0.09 -0.51,0.21 -0.6,0.3 -0.04,0.04 0.04,0.12 0,0.15 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.04,0.04 0.04,0.12 0,0.15 -0.04,0.04 -0.1,-0.02 -0.15,0 -0.18,0.09 -0.27,0.36 -0.45,0.45 -0.04,0.02 -0.12,-0.04 -0.15,0 -0.03,0.03 -0.19,0.34 -0.3,0.45 -1.27,1.27 -1.93,2.81 -2.7,4.34 -0.18,0.35 -0.12,0.84 -0.3,1.2 -0.11,0.23 -0.21,0.32 -0.3,0.6 -0.18,0.55 -0.2,1 -0.45,1.5 -0.06,0.12 0.06,0.33 0,0.45 -0.14,0.28 -0.35,0.61 -0.45,0.9 -0.03,0.1 0.03,0.2 0,0.3 -0.05,0.15 -0.25,0.3 -0.3,0.45 -0.03,0.1 0.03,0.2 0,0.3 -0.05,0.15 -0.23,0.3 -0.3,0.45 -0.33,0.67 -0.61,1.14 -1.05,1.8 -0.16,0.24 -0.42,0.27 -0.6,0.45 -0.32,0.32 -0.44,0.89 -0.75,1.2 -0.08,0.08 -0.22,0.07 -0.3,0.15 -0.14,0.14 -0.94,1.43 -1.05,1.65 -0.18,0.37 0.43,-0.14 -0.15,0.45 -0.04,0.04 -0.13,-0.04 -0.15,0 -0.04,0.09 0.03,0.2 0,0.3 -0.05,0.15 -0.25,0.3 -0.3,0.45 -0.03,0.1 0.03,0.2 0,0.3 -0.05,0.15 -0.25,0.3 -0.3,0.45 -0.09,0.26 -0.06,0.49 -0.15,0.75 -0.02,0.07 -0.1,0.1 -0.15,0.15 -0.05,0.15 -0.12,0.29 -0.15,0.45 -0.02,0.1 0.03,0.2 0,0.3 -0.16,0.48 -0.61,1.09 -0.75,1.5 -0.03,0.1 0.03,0.2 0,0.3 -0.09,0.27 -0.45,0.91 -0.6,1.2 -0.13,0.26 -0.44,0.51 -0.6,0.75 -0.28,-0.02 -0.1,0.35 -0.15,0.45 -0.09,0.18 -0.36,0.27 -0.45,0.45 -0.31,0.62 -0.67,1.08 -1.05,1.65 -0.19,0.28 -0.11,0.47 -0.3,0.75 -0.12,0.18 -0.18,0.12 -0.3,0.3 -0.16,0.24 -0.19,0.52 -0.3,0.75 -0.06,0.13 -0.24,0.17 -0.3,0.3 -0.54,1.08 -1.12,2.23 -1.5,3 -0.24,0.48 -1.2,1.71 -1.2,2.25 0,0.2 0.05,0.15 -0.15,0.15 0.43,1.14 0.54,2.28 1.05,3.3 0.1,0.2 0.06,0.56 0.15,0.75 0.13,0.27 0.32,0.48 0.45,0.75 0.04,0.09 -0.04,0.21 0,0.3 0.15,0.31 0.29,0.59 0.45,0.9 0.04,0.09 -0.04,0.21 0,0.3 0.06,0.13 0.24,0.17 0.3,0.3 0.04,0.09 -0.04,0.21 0,0.3 0.23,0.46 0.51,0.86 0.75,1.35 0.04,0.09 -0.07,0.23 0,0.3 0.04,0.04 0.12,-0.04 0.15,0 0.01,0.01 0.13,0.57 0.15,0.6 0.16,0.24 0.5,0.61 0.6,0.9 0.03,0.1 -0.03,0.2 0,0.3 0.12,0.37 0.43,0.7 0.6,1.05 0.1,0.2 0.06,0.56 0.15,0.75 0.06,0.13 0.24,0.17 0.3,0.3 0.08,0.15 0.07,0.45 0.15,0.6 0.15,0.3 0.3,0.6 0.45,0.9 0.06,0.13 0.26,0.17 0.3,0.3 0.03,0.1 -0.03,0.2 0,0.3 0.09,0.26 0.32,0.5 0.45,0.75 0.04,0.09 -0.04,0.21 0,0.3 0.14,0.28 0.35,0.61 0.45,0.9 0.03,0.1 -0.03,0.2 0,0.3 0.01,0.03 0.45,0.9 0.45,0.9 0.04,0.04 0.12,-0.04 0.15,0 0.11,0.11 0.07,0.59 0.15,0.75 0.17,0.35 0.31,0.64 0.45,1.05 0.03,0.09 0.27,0.36 0.3,0.45 0.12,0.37 0.18,0.83 0.3,1.2 0.1,0.31 0.37,0.52 0.45,0.9 0.02,0.1 -0.03,0.2 0,0.3 0.02,0.07 0.1,0.1 0.15,0.15 0.05,0.1 0.12,0.19 0.15,0.3 0.08,0.24 0.07,0.66 0.15,0.9 0.03,0.09 0.27,0.36 0.3,0.45 0.05,0.14 -0.04,0.3 0,0.45 0.03,0.11 0.1,0.2 0.15,0.3 0.05,0.15 0.12,0.29 0.15,0.45 0.07,0.34 0.07,0.72 0.15,1.05 0.09,0.35 0.36,0.69 0.45,1.05 0.1,0.42 0.16,0.94 0.3,1.35 0.02,0.07 0.1,0.1 0.15,0.15 0.05,0.1 0.12,0.19 0.15,0.3 0.14,0.58 0.32,1.4 0.6,1.95 0.07,0.15 0.25,0.29 0.3,0.45 0.09,0.27 0.08,0.47 0.15,0.75 0.05,0.22 0.24,0.38 0.3,0.6 0.02,0.1 -0.03,0.2 0,0.3 0.02,0.07 0.1,0.1 0.15,0.15 0.05,0.1 0.12,0.19 0.15,0.3 0.07,0.29 0.08,0.46 0.15,0.75 0.08,0.33 0.37,0.42 0.45,0.75 0.1,0.39 0.18,0.83 0.3,1.2 0.18,0.53 0.72,1.11 0.9,1.65 0.12,0.37 0.18,0.83 0.3,1.2 0.18,0.55 0.71,1.07 0.9,1.65 0.27,0.81 0.72,1.59 1.05,2.4 0.25,0.63 0.5,1.72 0.9,2.25 0.09,0.11 0.23,0.18 0.3,0.3 0.44,0.74 0.67,1.74 0.9,2.55 0.11,0.38 0.39,0.73 0.6,1.05 0.34,0.51 0.02,0.08 0.15,0.6 -0.09,0.27 0.24,0.28 0.3,0.45 0.03,0.1 -0.02,0.2 0,0.3 -0.09,0.27 0.24,0.28 0.3,0.45 0.03,0.1 -0.02,0.2 0,0.3 0.13,0.53 0.62,0.97 0.75,1.5 0.15,0.61 0.45,1.19 0.6,1.8 0.08,0.33 0.37,0.42 0.45,0.75 0.02,0.1 -0.03,0.2 0,0.3 0.08,0.23 0.37,0.52 0.45,0.75 0.03,0.1 -0.02,0.2 0,0.3 0.12,0.47 0.42,1.04 0.6,1.5 0.12,0.3 0.33,0.45 0.45,0.75 0.6,1.51 -0.12,-0.32 0.15,0.75 0.21,0.83 0.88,1.6 1.2,2.4 0.36,0.91 0.76,1.81 1.2,2.7 0.14,0.28 0.5,0.61 0.6,0.9 0.03,0.1 -0.03,0.2 0,0.3 0.07,0.22 0.36,0.34 0.45,0.6 0.12,0.35 0.27,0.55 0.45,0.9 0.09,0.18 0.06,0.41 0.15,0.6 0.25,0.49 0.59,1.04 0.9,1.5 0.15,0.23 0.19,0.53 0.3,0.75 0.1,0.2 0.35,0.4 0.45,0.6 0.02,0.04 -0.04,0.12 0,0.15 0.07,0.07 0.51,0.21 0.6,0.3 0.09,0.09 0.1,0.35 0.3,0.45 0.21,0.1 0.13,-0.18 0.3,0.15 0.02,0.04 0,0.1 0,0.15 0.05,0.1 0.09,0.21 0.15,0.3 0.32,0.48 0.62,0.65 0.9,1.2 0.09,0.18 0.36,0.27 0.45,0.45 0.02,0.04 -0.04,0.12 0,0.15 0.07,0.07 0.23,-0.07 0.3,0 0.04,0.04 -0.02,0.1 0,0.15 0.15,0.3 0.6,0.45 0.75,0.75 0.04,0.09 0.25,0.55 0.3,0.6 0.04,0.04 0.12,-0.04 0.15,0 0.05,0.05 0.1,0.49 0.15,0.6 0.09,0.18 0.36,0.27 0.45,0.45 0.06,0.13 0.09,0.32 0.15,0.45 0.06,0.13 0.24,0.17 0.3,0.3 0.02,0.04 -0.04,0.12 0,0.15 0.04,0.04 0.12,-0.04 0.15,0 0.04,0.04 -0.04,0.12 0,0.15 0.04,0.04 0.12,-0.04 0.15,0 0.07,0.07 -0.07,0.23 0,0.3 0.04,0.04 0.12,-0.04 0.15,0 0.09,0.09 0.21,0.51 0.3,0.6 0.11,0.11 0.3,0.07 0.3,0.3 0,0.35 -0.05,0.7 0,1.05 0.01,0.05 0.12,-0.04 0.15,0 0.07,0.07 -0.07,0.38 0,0.45 0.04,0.04 0.12,-0.04 0.15,0 0.14,0.14 0.21,0.57 0.3,0.75 0.06,0.13 0.26,0.17 0.3,0.3 0.03,0.1 -0.03,0.2 0,0.3 0.06,0.17 0.17,0.32 0.3,0.45 0.04,0.04 0.12,-0.04 0.15,0 0.06,0.06 0.1,0.36 0.15,0.45 0.17,0.34 0.57,0.55 0.75,0.9 0.02,0.04 0,0.1 0,0.15 0.05,0.1 0.09,0.21 0.15,0.3 0.1,0.15 0.4,0.28 0.45,0.45 0.03,0.1 -0.03,0.2 0,0.3 0.07,0.19 0.33,0.42 0.45,0.6 0.18,0.28 0.27,0.62 0.45,0.9 0.6,0.9 1.12,1.85 1.8,2.7 0.3,0.37 0.49,0.81 0.75,1.2 0.12,0.17 0.33,0.28 0.45,0.45 0.09,0.13 0.04,0.34 0.15,0.45 0.18,0.18 0.34,0.07 0.45,0.3 0.11,0.23 0.69,1.06 0.9,1.2 0.22,0.15 0.44,0.22 0.6,0.45 0.3,0.45 0.57,0.92 0.9,1.35 0.13,0.17 0.33,0.27 0.45,0.45 0.13,0.2 0.28,0.58 0.45,0.75 0.08,0.08 0.22,0.07 0.3,0.15 0.11,0.11 0.39,0.83 0.45,0.9 0.08,0.08 0.24,0.06 0.3,0.15 0.06,0.08 -0.06,0.22 0,0.3 0.18,0.09 0.34,0.13 0.45,0.3 0.26,0.38 0.42,0.87 0.75,1.2 0.08,0.08 0.22,0.07 0.3,0.15 0.27,0.27 0.33,0.78 0.6,1.05 0.04,0.04 0.12,-0.04 0.15,0 0.36,0.36 0.76,1.06 1.05,1.5 0.26,0.39 0.42,1.02 0.75,1.35 0.08,0.08 0.22,0.07 0.3,0.15 0.32,0.32 0.73,1.38 1.05,1.8 1.06,1.41 1.87,2.89 2.85,4.34 0.21,0.32 0.38,0.38 0.6,0.6 0.34,0.34 0.46,0.97 0.75,1.35 0.09,0.11 0.21,0.19 0.3,0.3 0.26,0.35 0.34,0.85 0.6,1.2 0.5,0.67 0.85,1.43 1.35,2.1 0.33,0.44 0.42,1.06 0.75,1.5 0.29,0.39 1.22,1.41 1.35,1.8 0.03,0.1 -0.06,0.22 0,0.3 0.06,0.09 0.22,0.07 0.3,0.15 0.1,0.1 0.43,1.03 0.6,1.2 0.08,0.08 0.22,0.07 0.3,0.15 0.27,0.27 0.37,0.74 0.6,1.05 0.19,0.26 0.42,0.48 0.6,0.75 0.12,0.19 0.17,0.42 0.3,0.6 0.18,0.24 0.78,0.96 0.9,1.2 0.04,0.09 -0.04,0.21 0,0.3 0.15,0.3 0.3,0.23 0.45,0.45 0.41,0.61 0.64,1.33 1.05,1.95 0.18,0.27 0.41,0.49 0.6,0.75 0.26,0.35 0.36,0.83 0.6,1.2 0.35,0.53 0.63,1.11 0.9,1.65 0.1,0.21 0.32,0.4 0.45,0.6 0.21,0.31 0.29,0.72 0.45,1.05 0.06,0.13 0.24,0.17 0.3,0.3 0.04,0.09 -0.04,0.21 0,0.3 0.06,0.13 0.24,0.17 0.3,0.3 0.13,0.26 0.2,0.6 0.3,0.9 0.18,0.54 1.02,1.55 0.75,2.1 -0.03,0.06 -0.12,0.09 -0.15,0.15 -0.04,0.09 0.07,0.23 0,0.3 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.07,0.07 0.07,0.23 0,0.3 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.07,0.07 0.07,0.23 0,0.3 -0.07,0.07 -0.23,0.07 -0.3,0.15 -0.1,0.1 -0.07,0.52 -0.15,0.6 -0.07,0.07 -0.23,0.07 -0.3,0.15 -0.05,0.05 -0.1,0.4 -0.15,0.45 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.05,0.05 -0.1,0.4 -0.15,0.45 -0.07,0.07 -0.23,-0.07 -0.3,0 -0.01,0.01 -0.29,0.44 -0.3,0.45 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.09,0.09 -0.21,0.51 -0.3,0.6 -0.07,0.07 -0.23,0.07 -0.3,0.15 -0.31,0.31 0.47,-0.01 -0.15,0.3 -0.04,0.02 -0.12,-0.04 -0.15,0 -0.05,0.05 -0.1,0.4 -0.15,0.45 -0.01,0.01 -0.44,0.29 -0.45,0.3 -0.04,0.04 0.04,0.12 0,0.15 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.31,0.31 0.47,-0.01 -0.15,0.3 -0.04,0.02 -0.12,-0.04 -0.15,0 -0.04,0.04 0.04,0.12 0,0.15 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.07,0.07 -0.07,0.23 -0.15,0.3 -0.07,0.07 -0.62,0.32 -0.75,0.45 -0.98,0.34 -0.65,-1.23 -1.24,-1.53 -0.06,-0.03 -0.16,0.05 -0.21,0 -0.05,-0.05 0.05,-0.16 0,-0.21 -0.05,-0.05 -0.16,0.05 -0.21,0 -0.44,-0.44 0.67,0.02 -0.21,-0.42 -0.06,-0.03 -0.16,0.05 -0.21,0 -0.05,-0.05 0.05,-0.16 0,-0.21 -0.07,-0.07 -1.31,-0.76 -1.48,-0.85 -0.63,-0.32 -1.06,-0.96 -1.7,-1.27 -1.45,-0.72 -2.95,-1.58 -4.45,-2.33 -0.23,-0.11 -0.2,-0.31 -0.42,-0.42 -0.83,-0.42 -1.62,-0.96 -2.54,-1.27 -0.13,-0.04 -0.51,-0.38 -0.64,-0.42 -0.13,-0.04 -0.29,0.04 -0.42,0 -0.27,-0.09 -0.57,-0.55 -0.85,-0.64 -0.13,-0.04 -0.29,0.04 -0.42,0 -0.19,-0.07 -0.99,-0.76 -1.27,-0.85 -0.31,-0.1 -0.57,-0.07 -0.85,-0.21 -0.25,-0.12 -1.31,-1 -1.48,-1.06 -0.13,-0.04 -0.3,0.06 -0.42,0 -0.06,-0.03 0.06,-0.18 0,-0.21 -0.13,-0.06 -0.3,0.06 -0.42,0 -0.06,-0.03 0.05,-0.16 0,-0.21 -0.18,-0.18 -1.04,-0.4 -1.27,-0.64 -0.05,-0.05 0.06,-0.18 0,-0.21 -0.13,-0.06 -0.29,0.04 -0.42,0 -0.16,-0.05 -0.48,-0.35 -0.64,-0.42 -0.88,-0.44 0.23,0.01 -0.21,-0.42 -0.07,-0.07 -0.56,-0.14 -0.64,-0.21 -0.44,-0.44 0.67,0.02 -0.21,-0.42 -0.13,-0.06 -0.55,-0.12 -0.64,-0.21 -0.44,-0.44 0.67,0.02 -0.21,-0.42 -0.34,-0.17 -0.71,-0.46 -1.06,-0.64 -0.34,-0.17 -0.51,-0.68 -0.85,-0.85 -0.06,-0.03 -0.16,0.05 -0.21,0 -0.05,-0.05 0.05,-0.16 0,-0.21 -0.05,-0.05 -0.15,0.03 -0.21,0 -0.32,-0.16 -0.17,-0.38 -0.42,-0.64 -0.05,-0.05 -0.15,0.03 -0.21,0 -0.28,-0.14 -0.29,-0.51 -0.42,-0.64 -0.05,-0.05 -0.16,0.05 -0.21,0 -0.05,-0.05 0.03,-0.15 0,-0.21 -0.06,-0.12 -0.58,-0.79 -0.64,-0.85 -0.05,-0.05 -0.16,0.05 -0.21,0 -0.09,-0.09 -0.15,-0.51 -0.21,-0.64 -0.09,-0.18 -0.33,-0.24 -0.42,-0.42 -0.06,-0.13 -0.12,-0.55 -0.21,-0.64 -0.05,-0.05 -0.16,0.05 -0.21,0 -0.1,-0.1 0.06,-0.3 0,-0.42 -0.12,-0.25 -0.3,-0.39 -0.42,-0.64 -0.1,-0.2 0,-0.61 0,-0.85 0,-0.54 -0.2,-2.77 0,-3.18 0.17,-0.33 0.21,-0.24 0.21,-0.64 0,-0.14 0.1,-0.32 0,-0.42 -0.05,-0.05 -0.16,0.05 -0.21,0 -0.07,-0.07 -0.14,-0.56 -0.21,-0.64 -0.13,-0.13 -1.63,-0.92 -1.91,-1.06 -0.13,-0.06 -0.3,0.06 -0.42,0 -0.31,-0.15 -0.34,-0.34 -0.42,-0.42 -0.12,-0.12 -1.03,-0.47 -1.27,-0.64 -0.63,-0.42 -2.52,-2.18 -2.97,-2.33 -0.13,-0.04 -0.29,0.04 -0.42,0 -0.23,-0.08 -0.43,-0.5 -0.64,-0.64 -0.44,-0.29 -0.85,-0.35 -1.27,-0.64 -0.17,-0.11 -0.23,-0.36 -0.42,-0.42 -0.13,-0.04 -0.29,0.04 -0.42,0 -0.25,-0.09 -0.38,-0.55 -0.64,-0.64 -0.13,-0.04 -0.29,0.04 -0.42,0 -0.52,-0.17 -0.97,-0.89 -1.48,-1.06 -0.92,-0.31 0.08,0.41 -0.85,-0.21 -0.29,-0.19 -0.74,-0.74 -1.06,-0.85 -0.13,-0.04 -0.29,0.04 -0.42,0 -0.21,-0.07 -0.64,-0.32 -0.85,-0.42 -0.18,-0.09 -0.26,-0.31 -0.42,-0.42 -0.4,-0.27 -0.66,-0.16 -1.06,-0.42 -0.76,-0.51 -1.56,-0.97 -2.33,-1.48 -1.35,-0.9 -2.52,-2 -3.81,-2.97 -0.98,-0.74 -2.2,-1.17 -3.18,-1.91 -0.52,-0.39 -0.94,-0.91 -1.48,-1.27 -0.4,-0.27 -0.66,-0.16 -1.06,-0.42 -0.29,-0.19 -0.74,-0.74 -1.06,-0.85 -0.13,-0.04 -0.29,0.04 -0.42,0 -0.19,-0.06 -0.26,-0.31 -0.42,-0.42 -0.4,-0.27 -0.66,-0.16 -1.06,-0.42 -0.81,-0.54 -1.73,-0.94 -2.54,-1.48 -0.68,-0.45 -1.25,-0.99 -1.91,-1.48 -0.35,-0.27 -0.96,-0.33 -1.27,-0.64 -0.11,-0.11 -0.1,-0.31 -0.21,-0.42 -0.25,-0.25 -0.56,-0.42 -0.85,-0.64 -0.25,-0.19 -0.62,-0.2 -0.85,-0.42 -0.11,-0.11 -0.1,-0.31 -0.21,-0.42 -0.45,-0.45 -1.26,-0.63 -1.7,-1.06 -0.11,-0.11 -0.1,-0.31 -0.21,-0.42 -0.22,-0.22 -0.58,-0.25 -0.85,-0.42 -0.34,-0.23 -0.7,-0.67 -1.06,-0.85 -0.18,-0.09 -0.45,-0.12 -0.64,-0.21 -0.38,-0.19 -0.67,-0.72 -1.06,-0.85 -0.13,-0.04 -0.29,0.04 -0.42,0 -0.56,-0.19 -2.22,-1.5 -2.75,-1.91 -0.59,-0.45 -1.6,-0.54 -2.12,-1.06 -0.11,-0.11 -0.1,-0.31 -0.21,-0.42 -0.28,-0.28 -2.24,-1.35 -2.75,-1.7 -0.93,-0.62 0.07,0.09 -0.85,-0.21 -0.75,-0.25 -1.41,-1.13 -2.12,-1.48 -0.45,-0.23 -1,-0.61 -1.48,-0.85 -0.06,-0.03 -0.14,0 -0.21,0 -0.14,-0.07 -0.29,-0.12 -0.42,-0.21 -0.25,-0.17 -0.4,-0.46 -0.64,-0.64 -0.55,-0.41 -1.34,-0.42 -1.91,-0.85 -0.62,-0.46 -1.27,-0.84 -1.91,-1.27 -0.52,-0.34 -1.2,-0.47 -1.7,-0.85 -0.69,-0.52 -1.42,-0.96 -2.12,-1.48 -0.25,-0.19 -0.59,-0.23 -0.85,-0.42 -0.16,-0.12 -0.25,-0.32 -0.42,-0.42 -1.72,-1.03 0.23,0.43 -1.06,-0.42 -0.25,-0.17 -0.4,-0.46 -0.64,-0.64 -0.65,-0.49 -1.48,-0.63 -2.12,-1.06 -0.5,-0.33 -0.98,-0.72 -1.48,-1.06 -0.33,-0.22 -0.52,-0.63 -0.85,-0.85 -1.13,-0.75 -2.3,-1.51 -3.39,-2.33 -1,-0.75 -1.11,-1.09 -2.33,-1.7 -0.39,-0.19 -0.7,-0.63 -1.06,-0.85 -0.76,-0.46 -2.13,-1.06 -2.97,-1.27 -1.2,-0.3 -2.87,-1.75 -4.03,-2.33 -0.2,-0.1 -0.44,-0.1 -0.64,-0.21 -0.17,-0.1 -0.25,-0.32 -0.42,-0.42 -0.52,-0.31 -1.19,-0.47 -1.7,-0.85 -0.16,-0.12 -0.25,-0.32 -0.42,-0.42 -0.19,-0.12 -0.44,-0.11 -0.64,-0.21 -1.18,-0.59 -2.31,-1.4 -3.39,-2.12 -0.72,-0.48 -1.43,-0.76 -2.12,-1.27 -1.05,-0.79 -2.5,-1.03 -3.6,-1.7 -1.06,-0.64 0,-0.21 -0.64,-0.64 -0.48,-0.32 -1.38,-0.89 -1.91,-1.06 -0.13,-0.04 -0.3,0.06 -0.42,0 -0.85,-0.42 -0.11,-0.32 -0.64,-0.64 -0.76,-0.46 -1.59,-0.78 -2.33,-1.27 -0.36,-0.24 -0.7,-0.61 -1.06,-0.85 -1.5,-1 -3.16,-1.75 -4.66,-2.75 -0.25,-0.17 -0.4,-0.46 -0.64,-0.64 -0.69,-0.52 -1.63,-0.75 -2.33,-1.27 -0.93,-0.7 -1.83,-1.43 -2.75,-2.12 -0.37,-0.28 -0.88,-0.38 -1.27,-0.64 -0.58,-0.39 -1.11,-0.88 -1.7,-1.27 -1.24,-0.82 -2.57,-1.5 -3.81,-2.33 -0.55,-0.36 -1.14,-0.94 -1.7,-1.27 -0.19,-0.12 -0.44,-0.1 -0.64,-0.21 -0.67,-0.4 -1.28,-1.02 -1.91,-1.48 -0.57,-0.43 -1.35,-0.61 -1.91,-1.06 -0.23,-0.19 -0.4,-0.45 -0.64,-0.64 -0.25,-0.2 -0.58,-0.25 -0.85,-0.42 -1.44,-0.96 -3.08,-1.72 -4.45,-2.75 -0.24,-0.18 -0.39,-0.47 -0.64,-0.64 -0.46,-0.31 -1.08,-0.58 -1.48,-0.85 -0.45,-0.3 -0.84,-0.73 -1.27,-1.06 -0.25,-0.19 -0.59,-0.23 -0.85,-0.42 -0.42,-0.32 -0.82,-0.79 -1.27,-1.06 -0.6,-0.36 -1.32,-0.62 -1.91,-1.06 -1.01,-0.76 -1.96,-1.57 -2.97,-2.33 -0.6,-0.45 -1.31,-0.79 -1.91,-1.27 -0.31,-0.25 -0.53,-0.61 -0.85,-0.85 -0.13,-0.1 -0.28,-0.14 -0.42,-0.21 -0.21,-0.14 -0.44,-0.27 -0.64,-0.42 -1.06,-0.85 -2.08,-1.72 -3.18,-2.54 -0.1,-0.08 -1.06,-0.85 -1.06,-0.85 -0.11,-0.23 0.21,-0.28 -0.21,-0.42 -0.13,-0.04 -0.3,0.06 -0.42,0 -0.03,-0.01 -0.25,-0.55 -0.42,-0.64 -0.92,-0.46 -1.92,-1.81 -2.54,-2.12 -0.62,-0.31 0.28,0.49 -0.42,-0.21 -0.73,-0.46 -1.25,-1.26 -1.96,-1.73 -0.19,-0.12 -0.42,-0.17 -0.6,-0.3 -0.43,-0.32 -0.74,-0.75 -1.2,-1.05 -0.23,-0.15 -0.77,-0.63 -0.9,-0.9 -0.07,-0.14 -0.06,-0.32 -0.15,-0.45 -0.07,-0.09 -0.22,-0.07 -0.3,-0.15 -0.04,-0.04 0.03,-0.11 0,-0.15 -0.12,-0.18 -0.33,-0.27 -0.45,-0.45 -0.22,-0.33 -0.19,-0.42 -0.3,-0.75 -0.06,-0.16 -0.35,-0.3 -0.45,-0.45 -0.18,-0.26 -0.38,-0.68 -0.6,-0.9 -0.04,-0.04 -0.13,0.04 -0.15,0 -0.04,-0.09 0.06,-0.22 0,-0.3 -0.06,-0.09 -0.21,-0.09 -0.3,-0.15 -0.16,-0.11 -0.51,-0.43 -0.6,-0.6 -0.02,-0.04 0.04,-0.12 0,-0.15 -0.04,-0.04 -0.1,0.02 -0.15,0 -0.18,-0.09 -0.27,-0.36 -0.45,-0.45 -0.04,-0.02 -0.12,0.04 -0.15,0 -0.04,-0.04 0.04,-0.12 0,-0.15 -0.06,-0.06 -0.36,-0.1 -0.45,-0.15 -0.32,-0.16 0.02,-0.14 -0.3,-0.3 -0.32,-0.16 -0.71,-0.28 -1.05,-0.45 -0.13,-0.06 -0.18,-0.22 -0.3,-0.3 -0.07,-0.33 -0.31,-0.08 -0.45,-0.15 -0.18,-0.09 -0.28,-0.34 -0.45,-0.45 -0.25,-0.17 -0.93,-0.46 -1.2,-0.6 -0.26,-0.13 -0.48,-0.47 -0.75,-0.6 -0.09,-0.04 -0.21,0.04 -0.3,0 -0.13,-0.06 -0.17,-0.24 -0.3,-0.3 -0.09,-0.04 -0.39,-0.09 -0.45,-0.15 -0.04,-0.04 0.04,-0.12 0,-0.15 -0.06,-0.06 -0.36,-0.1 -0.45,-0.15 -0.12,-0.06 -1.17,-0.85 -1.2,-0.9 -0.02,-0.04 0.04,-0.12 0,-0.15 -0.04,-0.04 -0.12,0.04 -0.15,0 -0.04,-0.04 0.04,-0.12 0,-0.15 -0.08,-0.08 -0.22,-0.07 -0.3,-0.15 -0.3,0.05 -0.61,0.05 -0.9,0.15 -0.05,0.02 0.02,0.1 0,0.15 -0.09,0.18 -0.36,0.27 -0.45,0.45 -0.22,0.43 -0.38,0.92 -0.6,1.35 -0.06,0.13 -0.24,0.17 -0.3,0.3 -0.08,0.15 -0.07,0.45 -0.15,0.6 -0.13,0.27 -0.32,0.48 -0.45,0.75 -0.08,0.16 -0.04,0.64 -0.15,0.75 -0.04,0.04 -0.13,-0.04 -0.15,0 -0.04,0.09 0.03,0.2 0,0.3 -0.12,0.37 -0.48,0.68 -0.6,1.05 -0.03,0.1 0.04,0.21 0,0.3 -0.02,0.04 -0.12,-0.04 -0.15,0 -0.15,0.15 -0.34,0.83 -0.45,1.05 -0.06,0.13 -0.24,0.17 -0.3,0.3 -0.17,0.33 -0.44,0.72 -0.6,1.05 -0.09,0.18 -0.36,0.27 -0.45,0.45 -0.04,0.09 -0.25,0.55 -0.3,0.6 -0.04,0.04 -0.1,-0.02 -0.15,0 -0.33,0.17 -0.05,0.09 -0.15,0.3 -0.1,0.2 -0.36,0.21 -0.45,0.3 -0.22,0.22 -0.62,0.79 -0.75,1.05 -0.08,0.17 -0.44,0.29 -0.6,0.45 -0.27,0.27 -0.52,0.7 -0.75,1.05 -0.24,0.37 -0.85,0.96 -1.2,1.2 -0.09,0.06 -0.22,0.07 -0.3,0.15 -0.22,0.22 -0.42,0.64 -0.6,0.9 -0.15,0.23 -0.45,0.22 -0.6,0.45 -0.2,0.29 -0.6,0.6 -0.75,0.9 -0.02,0.04 0,0.1 0,0.15 -0.05,0.1 -0.09,0.21 -0.15,0.3 -0.19,0.29 -0.54,0.47 -0.75,0.75 -0.27,0.35 -0.51,0.69 -0.75,1.05 -0.19,0.29 -0.56,0.46 -0.75,0.75 -0.33,0.49 -0.57,1.01 -0.9,1.5 -0.18,0.28 -0.6,0.45 -0.75,0.75 -0.09,0.18 -0.15,0.41 -0.3,0.6 -0.39,0.53 -0.98,0.95 -1.35,1.5 -0.23,0.34 -0.47,0.77 -0.75,1.05 -0.08,0.08 -0.22,0.07 -0.3,0.15 -0.16,0.16 -0.14,0.44 -0.3,0.6 -0.08,0.08 -0.22,0.07 -0.3,0.15 -0.23,0.23 -0.37,0.67 -0.6,0.9 -0.08,0.08 -0.22,0.07 -0.3,0.15 -0.3,0.3 -0.64,0.85 -0.9,1.2 -0.29,0.38 -0.73,0.58 -1.05,0.9 -0.08,0.08 -0.08,0.21 -0.15,0.3 -0.29,0.39 -0.78,0.65 -1.05,1.05 -0.06,0.09 -0.07,0.22 -0.15,0.3 -0.08,0.08 -0.22,0.07 -0.3,0.15 -0.41,0.41 -0.63,1.08 -1.05,1.5 -0.22,0.22 -0.56,0.31 -0.75,0.6 -0.06,0.09 -0.07,0.22 -0.15,0.3 -0.08,0.08 -0.22,0.07 -0.3,0.15 -0.33,0.33 -0.57,0.87 -0.9,1.2 -0.08,0.08 -0.21,0.09 -0.3,0.15 -0.76,0.51 -1.44,1.44 -2.1,2.1 -0.23,0.23 -0.37,0.52 -0.6,0.75 -0.08,0.08 -0.22,0.07 -0.3,0.15 -0.08,0.08 -0.07,0.22 -0.15,0.3 -0.08,0.08 -0.21,0.09 -0.3,0.15 -0.34,0.23 0.06,0.09 -0.3,0.45 -0.08,0.08 -0.22,0.07 -0.3,0.15 -0.36,0.36 0.04,0.22 -0.3,0.45 -0.37,0.24 -1.66,1.52 -1.95,1.95 -0.71,1.07 -1.69,1.93 -2.4,3 -0.45,0.67 -1.2,1.12 -1.65,1.8 -0.15,0.23 -0.45,0.22 -0.6,0.45 -0.24,0.36 -0.51,0.69 -0.75,1.05 -0.15,0.23 -0.45,0.22 -0.6,0.45 -0.1,0.16 -0.64,0.99 -0.75,1.05 -0.04,0.02 -0.12,-0.04 -0.15,0 -0.07,0.07 0.07,0.23 0,0.3 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.04,0.04 0.02,0.1 0,0.15 -0.31,0.62 0.01,-0.16 -0.3,0.15 -0.07,0.07 0.07,0.23 0,0.3 -0.31,0.31 0.01,-0.47 -0.3,0.15 -0.14,0.28 -1.18,1.8 -1.35,1.8 -0.29,0.17 -1.13,0.46 -1.35,0.9 -0.02,0.04 0.04,0.12 0,0.15 -0.09,0.09 -0.33,0.12 -0.45,0.3 -0.06,0.09 -0.07,0.22 -0.15,0.3 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.08,0.08 -0.07,0.22 -0.15,0.3 -0.2,0.2 -0.14,-0.32 -0.3,0.15 -0.03,0.1 0.04,0.21 0,0.3 -0.12,0.24 -0.48,0.36 -0.6,0.6 -0.02,0.04 0.04,0.12 0,0.15 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.04,0.04 0.02,0.1 0,0.15 -0.09,0.18 -0.36,0.27 -0.45,0.45 -0.09,0.18 -0.21,0.41 -0.3,0.6 -0.09,0.18 -0.36,0.27 -0.45,0.45 -0.18,0.37 0.43,-0.14 -0.15,0.45 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.17,0.17 -0.32,0.55 -0.45,0.75 -0.19,0.29 -0.56,0.46 -0.75,0.75 -0.18,0.26 -0.38,0.68 -0.6,0.9 -0.31,0.31 -0.78,0.5 -1.05,0.9 -0.09,0.14 -0.13,0.36 -0.3,0.45 -0.04,0.02 -0.12,-0.04 -0.15,0 -0.04,0.04 0.02,0.1 0,0.15 -0.15,0.3 -0.6,0.45 -0.75,0.75 -0.02,0.04 0.04,0.12 0,0.15 -0.04,0.04 -0.1,-0.02 -0.15,0 -0.3,0.15 -2.1,1.95 -2.25,2.25 -0.02,0.04 0.04,0.12 0,0.15 -0.04,0.04 -0.1,-0.02 -0.15,0 -0.28,0.14 -0.49,0.52 -0.6,0.75 -0.1,0.2 -0.36,0.21 -0.45,0.3 -0.01,0.01 -0.59,0.89 -0.6,0.9 -0.04,0.04 -0.1,-0.02 -0.15,0 -0.28,0.14 -0.02,0.31 -0.3,0.45 -0.69,0.34 -1.95,1.95 -2.25,2.55 -0.06,0.13 -0.24,0.17 -0.3,0.3 -0.37,0.73 -0.55,1.54 -0.9,2.25 -0.29,0.57 0.29,2.12 0,2.7 -0.09,0.17 -0.21,0.28 -0.3,0.45 -0.02,0.04 0.04,0.12 0,0.15 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.1,0.1 -0.09,0.35 -0.3,0.45 -0.21,0.1 -0.13,-0.18 -0.3,0.15 -0.02,0.04 0.04,0.12 0,0.15 -0.04,0.04 -0.1,-0.02 -0.15,0 -0.24,0.12 -0.36,0.48 -0.6,0.6 -0.51,0.26 -0.99,0.64 -1.5,0.9 -0.18,0.09 -0.27,0.36 -0.45,0.45 -0.16,0.08 -1.36,0.76 -1.5,0.9 -0.08,0.08 -0.07,0.22 -0.15,0.3 -0.16,0.16 -0.41,0.18 -0.6,0.3 -0.23,0.15 -0.37,0.45 -0.6,0.6 -0.25,0.16 -0.5,0.28 -0.75,0.45 -0.23,0.15 -0.38,0.43 -0.6,0.6 -0.55,0.41 -1.08,0.82 -1.65,1.2 -1,0.67 -1.72,1.87 -2.55,2.7 -0.04,0.04 -0.74,1.01 -0.75,1.05 -0.03,0.1 0.04,0.21 0,0.3 -0.02,0.04 -0.12,-0.04 -0.15,0 -0.42,0.01 -0.04,0.34 -0.15,0.45 -0.04,0.04 -0.12,-0.04 -0.15,0 -0.07,0.07 -0.85,1.64 -0.9,1.8 -0.14,0.41 -0.01,0.94 -0.15,1.35 -0.12,0.36 -0.32,2.05 -0.15,2.4 0.02,0.04 0.13,-0.04 0.15,0 0.07,0.13 -0.07,0.32 0,0.45 0.12,0.24 0.37,0.5 0.45,0.75 0.03,0.1 -0.03,0.2 0,0.3 0.11,0.34 0.49,0.71 0.6,1.05 0.03,0.1 -0.03,0.2 0,0.3 0.1,0.3 0.49,0.58 0.6,0.9 0.03,0.1 -0.03,0.2 0,0.3 0.09,0.26 0.85,1.2 1.05,1.5 0.19,0.29 0.56,0.46 0.75,0.75 0.06,0.09 0.07,0.22 0.15,0.3 0.23,0.23 0.67,0.37 0.9,0.6 0.36,0.36 -0.04,0.22 0.3,0.45 0.13,0.09 0.34,0.04 0.45,0.15 0.08,0.08 0.07,0.22 0.15,0.3 0.11,0.11 0.32,0.06 0.45,0.15 0.14,0.09 1.34,0.9 1.35,0.9 0.08,0.08 0.06,0.23 0.15,0.3 0.3,0.24 0.74,0.37 1.05,0.6 0.31,0.23 0.58,0.39 0.9,0.6 0.23,0.15 0.37,0.45 0.6,0.6 0.19,0.12 0.41,0.18 0.6,0.3 0.52,0.35 1.22,1.16 1.8,1.35 0.1,0.03 0.22,-0.06 0.3,0 0.09,0.06 0.06,0.24 0.15,0.3 0.08,0.06 0.21,-0.04 0.3,0 0.3,0.15 0.23,0.3 0.45,0.45 0.54,0.36 1.21,0.61 1.8,0.9 0.7,0.35 1.36,0.75 2.1,1.05 0.51,0.2 0.99,0.32 1.5,0.45 0.87,0.22 1.69,0.83 2.55,1.05 0.28,0.07 0.63,0.06 0.9,0.15 0.07,0.02 0.1,0.1 0.15,0.15 0.1,0.05 0.19,0.12 0.3,0.15 0.1,0.02 0.2,-0.02 0.3,0 0.22,0.05 0.38,0.24 0.6,0.3 0.33,0.08 0.72,0.07 1.05,0.15 0.22,0.05 0.38,0.24 0.6,0.3 0.62,0.15 1.25,0.18 1.8,0.45 0.29,0.14 0.76,0.01 1.05,0.15 0.47,0.23 1,0.47 1.5,0.6 0.68,0.17 1.25,0.76 1.95,0.9 0.15,0.03 0.3,-0.03 0.45,0 0.46,0.09 0.91,0.42 1.35,0.6 0.48,0.19 1.01,0.33 1.5,0.45 0.28,0.07 0.51,0.37 0.75,0.45 0.27,0.09 0.62,0.08 0.9,0.15 0.32,0.08 0.58,0.37 0.9,0.45 1.13,0.28 2.18,0.83 3.3,1.2 0.28,0.09 0.51,0.18 0.75,0.3 0.09,0.04 0.38,-0.07 0.45,0 0.04,0.04 -0.04,0.12 0,0.15 0.04,0.04 0.39,0 0.45,0 -0.16,3.59 2.63,-0.04 3.42,0.76 0.1,0.1 -0.1,0.32 0,0.42 0.21,0.21 1.06,-0.21 1.27,0 0.1,0.1 -0.1,0.32 0,0.42 0.35,0.35 1.77,-0.35 2.12,0 0.1,0.1 -0.1,0.32 0,0.42 0.42,0.42 2.12,-0.42 2.54,0 0.1,0.1 -0.13,0.36 0,0.42 0.56,0.28 1.55,-0.28 2.12,0 0.61,0.31 1.08,0.54 1.7,0.85 0.25,0.13 0.65,-0.2 0.85,0 0.1,0.1 -0.1,0.32 0,0.42 0.2,0.2 0.65,-0.2 0.85,0 0.1,0.1 -0.1,0.32 0,0.42 0.14,0.14 1.13,0.28 1.27,0.42 0.1,0.1 -0.1,0.32 0,0.42 0.2,0.2 0.65,-0.2 0.85,0 0.1,0.1 -0.1,0.32 0,0.42 0.2,0.2 0.65,-0.2 0.85,0 0.1,0.1 -0.1,0.32 0,0.42 0.28,0.28 1.41,-0.28 1.7,0 0.1,0.1 -0.13,0.36 0,0.42 0.38,0.19 0.89,-0.19 1.27,0 0.7,0.35 1.28,0.57 2.12,0.85 0.48,0.16 1.25,-0.23 1.7,0 0.96,0.48 2,0.37 2.97,0.85 0.45,0.23 1.24,-0.23 1.7,0 0.18,0.09 0.23,0.36 0.42,0.42 0.4,0.13 0.97,-0.3 1.27,0 0.1,0.1 -0.1,0.32 0,0.42 0.03,0.03 3.83,0.65 4.24,0.85 0.13,0.06 -0.13,0.36 0,0.42 0.25,0.13 0.57,-0.07 0.85,0 0.93,0.23 3.4,1.28 4.24,1.7 0.34,0.17 0.93,-0.17 1.27,0 0.84,0.42 1.7,0.42 2.54,0.85 0.54,0.27 1.55,-0.19 2.12,0 0.19,0.06 0.23,0.36 0.42,0.42 0.68,0.23 1.39,0.18 2.12,0.42 0.76,0.25 1.78,-0.25 2.54,0 0.19,0.06 0.24,0.33 0.42,0.42 0.57,0.29 1.5,-0.2 2.12,0 1.03,0.34 2.08,0.4 2.97,0.85 0.34,0.17 0.93,-0.17 1.27,0 1.5,0.75 3.39,1.13 5.08,1.7 0.27,0.09 0.59,-0.13 0.85,0 1.89,0.94 4.06,1.18 5.93,2.12 0.38,0.19 0.87,-0.13 1.27,0 0.19,0.06 0.23,0.36 0.42,0.42 1.02,0.34 2.37,0.08 3.39,0.42 1.52,0.51 3.34,0.61 4.66,1.27 0.89,0.45 3.56,-0.68 4.24,0 0.1,0.1 -0.13,0.36 0,0.42 0.85,0.42 0.64,-0.21 1.27,0 0.3,0.1 0.55,0.32 0.85,0.42 0.38,0.13 0.89,-0.13 1.27,0 0.19,0.06 0.23,0.36 0.42,0.42 0.55,0.18 1.6,-0.26 2.12,0 0.13,0.06 -0.1,0.32 0,0.42 0.2,0.2 1.01,-0.13 1.27,0 0.18,0.09 0.24,0.33 0.42,0.42 0.41,0.2 1.29,-0.14 1.7,0 0.19,0.06 0.24,0.33 0.42,0.42 0.71,0.36 1.84,0.07 2.54,0.42 1.44,0.72 3,1.28 4.66,1.7 0.99,0.25 1.97,0.6 2.97,0.85 0.38,0.09 2.25,-0.29 2.54,0 0.1,0.1 -0.1,0.32 0,0.42 0.3,0.3 0.87,-0.13 1.27,0 0.42,0.14 0.85,0.71 1.27,0.85 0.38,0.13 0.89,-0.13 1.27,0 0.48,0.16 0.79,0.69 1.27,0.85 0.19,0.07 2.94,0.4 2.97,0.42 0.1,0.1 -0.1,0.32 0,0.42 0.21,0.21 1.06,-0.21 1.27,0 0.1,0.1 -0.1,0.32 0,0.42 0.1,0.1 2.12,0.43 1.7,0.85 -0.2,0.2 -1.43,0.58 -1.7,0.85 -0.56,0.56 0.9,0.41 -0.42,0.85 -0.27,0.09 -0.58,-0.09 -0.85,0 -0.67,0.23 -1.05,1.38 -1.7,1.7 -0.36,0.18 -0.91,0.24 -1.27,0.42 -1.76,0.88 0.45,-0.03 -0.42,0.85 -0.18,0.18 -1.01,0.29 -1.27,0.42 -1.76,0.88 0.45,-0.03 -0.42,0.85 -0.1,0.1 -0.3,-0.06 -0.42,0 -0.68,0.34 -1.02,1.36 -1.7,1.7 -0.25,0.12 -1.55,0.71 -1.7,0.85 -0.21,0.21 -0.21,0.64 -0.42,0.85 -0.88,0.88 0.03,-1.34 -0.85,0.42 -0.06,0.13 0.1,0.32 0,0.42 -0.88,0.88 0.03,-1.34 -0.85,0.42 -0.06,0.13 0.1,0.32 0,0.42 -0.88,0.88 0.03,-1.34 -0.85,0.42 -0.63,1.26 -2.32,2.1 -2.97,3.39 -0.06,0.13 0.1,0.32 0,0.42 -0.1,0.1 -0.28,0 -0.42,0 -0.14,0.14 -0.31,0.26 -0.42,0.42 -0.65,0.98 -2.03,1.95 -2.54,2.97 -0.06,0.13 0.1,0.32 0,0.42 -0.1,0.1 -0.3,-0.06 -0.42,0 -0.67,0.34 -0.99,1.42 -1.27,1.7 -0.28,0.28 -0.98,0.26 -1.27,0.85 -0.06,0.13 0.1,0.32 0,0.42 -0.61,0.61 -1.84,1.35 -2.54,1.7 -1.02,0.51 -1.52,2.03 -2.54,2.54 -0.67,0.33 -1.41,0.8 -2.12,1.27 -0.65,0.43 -0.62,1.26 -1.27,1.7 -0.62,0.41 -1.25,0.61 -1.7,1.27 -0.65,0.98 -2.03,1.95 -2.54,2.97 -0.06,0.13 0.1,0.32 0,0.42 -0.88,0.88 0.03,-1.34 -0.85,0.42 -0.06,0.13 0.1,0.32 0,0.42 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.88,0.88 1.34,-0.03 -0.42,0.85 -0.13,0.06 -0.32,-0.1 -0.42,0 -0.22,0.22 -1.05,1.9 -1.27,2.12 -0.28,0.28 -1.36,0.6 -1.7,1.27 -0.38,0.75 -1.3,1.33 -1.7,2.12 -0.06,0.13 0.1,0.32 0,0.42 -0.22,0.22 -0.62,0.2 -0.85,0.42 -0.1,0.1 0.06,0.3 0,0.42 -0.56,1.12 -2,1.88 -2.54,2.97 -0.47,0.94 -0.26,0.13 -0.85,0.42 -0.57,0.28 -0.59,1.01 -0.85,1.27 -0.88,0.88 0.03,-1.34 -0.85,0.42 -0.29,0.58 0.51,0.38 -0.42,0.85 -0.13,0.06 -0.32,-0.1 -0.42,0 -0.1,0.1 0.06,0.3 0,0.42 -0.39,0.78 -0.88,0.07 -1.27,0.85 -0.94,1.87 -3.3,3.21 -4.24,5.08 -0.34,0.67 -1.42,0.99 -1.7,1.27 -0.14,0.14 -0.72,1.45 -0.85,1.7 -0.36,0.73 -0.82,0.17 -1.27,0.85 -0.38,0.57 -0.59,1.18 -0.85,1.7 -0.25,0.51 -1.02,0.76 -1.27,1.27 -0.06,0.13 0.1,0.32 0,0.42 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.1,0.1 0.06,0.3 0,0.42 -0.35,0.69 -1.25,1.65 -1.7,2.54 -0.25,0.51 -1.02,0.76 -1.27,1.27 -0.38,0.76 -0.87,1.74 -1.27,2.54 -0.25,0.51 -1.02,0.76 -1.27,1.27 -0.12,0.25 -0.71,1.55 -0.85,1.7 -0.88,0.88 0.03,-1.34 -0.85,0.42 -0.29,0.58 -0.96,1.08 -1.27,1.7 -0.13,0.26 -0.25,1.09 -0.42,1.27 -0.88,0.88 0.03,-1.34 -0.85,0.42 -0.26,0.52 -0.59,1.17 -0.85,1.7 -0.25,0.51 -1.02,0.76 -1.27,1.27 -0.22,0.44 -1.5,3.19 -1.7,3.39 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 0.2,0.65 0,0.85 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 0.13,0.59 0,0.85 -0.16,0.32 -0.71,1.56 -0.85,1.7 -0.1,0.1 -0.36,-0.13 -0.42,0 -0.13,0.26 -0.66,3.01 -0.85,3.39 -0.25,0.49 -0.6,0.78 -0.85,1.27 -0.17,0.34 0.17,0.93 0,1.27 -1.52,3.04 -1.39,6.6 -2.97,9.75 -0.19,0.38 0.13,0.87 0,1.27 -0.06,0.19 -0.33,0.24 -0.42,0.42 -0.13,0.25 0.2,0.65 0,0.85 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 0.13,0.59 0,0.85 -0.25,0.49 -0.6,0.78 -0.85,1.27 -0.13,0.25 0.09,0.58 0,0.85 -1.02,3.07 0.12,-0.67 -0.85,1.27 -0.56,1.11 -0.75,2.34 -1.27,3.39 -0.19,0.38 0.13,0.87 0,1.27 -0.06,0.19 -0.33,0.24 -0.42,0.42 -0.27,0.53 -0.38,2.04 -0.85,2.97 -0.22,0.45 0.34,1.78 0,2.12 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 0.13,1.01 0,1.27 -0.36,0.73 -0.48,1.39 -0.85,2.12 -0.23,0.45 0.23,1.24 0,1.7 -0.09,0.18 -0.33,0.24 -0.42,0.42 -0.13,0.26 0.2,1.07 0,1.27 -0.4,0.4 -0.42,-0.03 -0.42,0.85 0,0.67 -0.91,5.45 -0.42,5.93 0.1,0.1 0.32,-0.1 0.42,0 0.28,0.28 -0.28,1.41 0,1.7 0.21,0.21 0.64,0.21 0.85,0.42 0.01,0.01 0.27,1.12 0.42,1.27 0.11,0.11 2.66,0.27 2.97,0.42 0.7,0.35 1.28,0.57 2.12,0.85 0.27,0.09 0.65,-0.2 0.85,0 0.1,0.1 -0.1,0.32 0,0.42 0.2,0.2 1.36,0.68 1.7,0.85 0.45,0.23 1.24,-0.23 1.7,0 1.06,0.53 2.34,0.44 2.97,1.7 0.68,1.35 -0.41,2.94 -0.85,3.81 -0.24,0.47 -0.71,3.25 -0.85,3.39 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.14,0.14 -0.28,1.13 -0.42,1.27 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 0.2,0.65 0,0.85 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.4,0.4 -0.45,1.72 -0.85,2.12 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 0.2,0.65 0,0.85 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.17,0.17 -1.4,2.8 -1.7,3.39 -0.32,0.63 0.56,2.68 0.85,2.97 0.25,0.25 1.45,0.6 1.7,0.85 0.1,0.1 -0.1,0.32 0,0.42 0.1,0.1 0.3,-0.06 0.42,0 0.6,0.3 0.24,0.55 0.85,0.85 0.13,0.06 0.32,-0.1 0.42,0 0.1,0.1 -0.1,0.32 0,0.42 0.88,0.88 -0.03,-1.34 0.85,0.42 0.06,0.13 -0.1,0.32 0,0.42 0.25,0.25 1.45,0.6 1.7,0.85 0.1,0.1 -0.1,0.32 0,0.42 0.44,0.44 1.23,0.62 1.7,0.85 0.81,0.41 1.3,1.29 2.12,1.7 0.94,0.47 2.4,1.36 3.39,1.7 0.27,0.09 0.58,-0.09 0.85,0 0.38,0.13 0.47,0.72 0.85,0.85 0.74,0.25 1.38,0.18 2.12,0.42 0.38,0.13 0.47,0.72 0.85,0.85 0.74,0.25 1.38,0.18 2.12,0.42 0.79,0.26 2.61,1.3 3.39,1.7 0.45,0.23 0.39,-0.23 0.85,0 1.17,0.58 1.64,0.58 2.97,0.85 1.15,-0.72 1.1,0.65 1.7,0.85 0.74,0.25 1.38,0.18 2.12,0.42 0.19,0.06 0.23,0.36 0.42,0.42 0.27,0.09 0.57,-0.07 0.85,0 0.73,0.18 1.4,0.61 2.12,0.85 0.4,0.13 0.87,-0.13 1.27,0 0.44,0.15 0.85,0.64 1.27,0.85 0.89,0.45 2.06,0.55 2.97,0.85 3.07,1.02 -0.67,-0.12 1.27,0.85 0.38,0.19 0.87,-0.13 1.27,0 0.68,0.23 1.45,1.05 2.12,1.27 0.4,0.13 0.89,-0.19 1.27,0 1.48,0.74 3.14,0.93 4.66,1.7 0.81,0.41 2.11,0.14 2.97,0.42 0.19,0.06 0.24,0.33 0.42,0.42 0.79,0.4 2.17,-0.4 2.97,0 0.99,0.49 1.22,0.12 2.12,0.42 3.49,1.16 7.71,0.47 11.02,2.12 0.45,0.23 1.24,-0.23 1.7,0 1.42,0.71 3.23,0.98 4.66,1.7 0.46,0.23 0.8,0.66 1.27,0.85 0.26,0.1 0.57,-0.07 0.85,0 1.88,0.47 5.21,1.76 6.78,2.54 0.41,0.2 1.29,-0.14 1.7,0 0.54,0.18 1.15,0.67 1.7,0.85 0.99,0.33 1.95,0.17 2.97,0.42 2.05,0.51 -0.02,0.2 1.27,0.85 0.34,0.17 0.93,-0.17 1.27,0 1.58,0.79 3.62,1.27 5.51,1.27 0.75,0.69 11.45,1.74 11.59,1.88 0.14,0.14 -0.14,0.46 0,0.6 0.28,0.28 1.44,-0.18 1.8,0 0.86,0.43 1.53,0.77 2.4,1.2 0.45,0.22 4.68,1.09 4.79,1.2 0.14,0.14 -0.14,0.46 0,0.6 0.49,0.49 2.94,-0.06 3.6,0.6 0.14,0.14 -0.14,0.46 0,0.6 0.42,0.42 1.26,-0.27 1.8,0 0.18,0.09 -0.18,0.51 0,0.6 0.48,0.24 1.32,-0.24 1.8,0 1.03,0.52 1.97,0.68 3,1.2 1.64,0.82 4.36,-0.22 5.99,0.6 1.03,0.52 1.97,0.68 3,1.2 0.64,0.32 1.76,-0.32 2.4,0 2.59,1.3 5.93,1.17 8.39,2.4 0.5,0.25 2.02,-0.38 2.4,0 0.14,0.14 -0.14,0.46 0,0.6 0.01,0.01 2.55,0.45 3,0.6 1.2,0.4 4.95,0.08 5.99,0.6 4.32,2.16 10.06,2.04 14.38,4.2 0.64,0.32 1.76,-0.32 2.4,0 1.03,0.52 1.97,0.68 3,1.2 0.64,0.32 1.76,-0.32 2.4,0 3.53,1.76 7.96,1.88 11.39,3.6 0.57,0.29 1.82,-0.19 2.4,0 0.75,0.25 1.51,0.9 2.4,1.2 0.51,0.17 1.32,-0.24 1.8,0 0.86,0.43 1.53,0.77 2.4,1.2 0.54,0.27 1.23,-0.19 1.8,0 0.27,0.09 0.33,0.51 0.6,0.6 1.65,0.55 3.7,0.18 5.39,0.6 3.77,0.94 -1.37,0.26 2.4,1.2 1,0.25 2.69,-0.46 3.6,0 3.03,1.51 8.34,0.38 10.79,1.2 1.69,0.56 3.12,0.18 4.79,0.6 3.88,0.97 8.02,0.71 11.39,2.4 0.78,0.39 1.98,-0.21 3.6,0.6 0.93,0.47 2.61,-0.33 3.6,0 0.27,0.09 0.35,0.47 0.6,0.6 0.54,0.27 1.22,-0.14 1.8,0 3.26,0.82 5.72,0.47 8.39,1.8 0.84,0.42 9.14,0.38 9.59,0.6 1.84,0.92 4.14,0.27 5.99,1.2 1.44,0.72 3.96,-0.72 5.39,0 2.3,1.15 5.49,0.05 6.59,0.6 0.18,0.09 -0.14,0.46 0,0.6 0.86,0.86 4.77,-0.41 5.99,0 1.91,0.64 3.79,0.07 5.39,0.6 0.42,0.14 0.77,0.49 1.2,0.6 0.9,0.23 2.12,-0.29 3,0 0.27,0.09 0.33,0.51 0.6,0.6 1.54,0.51 1.98,-0.21 3.6,0.6 1.14,0.57 4.09,0 5.39,0 1.23,0 1.39,0.1 2.4,0.6 1.93,0.96 7.24,-0.59 9.59,0 0.61,0.15 1.19,0.45 1.8,0.6 1.45,0.36 4.03,-0.68 5.39,0 2.27,1.14 4.44,-0.12 6.59,0.6 0.27,0.09 0.35,0.47 0.6,0.6 0.64,0.32 1.72,-0.23 2.4,0 2.74,0.91 5.62,0.88 8.39,1.8 1.43,0.48 3.07,0.02 4.79,0.6 1.53,0.51 3.96,-0.72 5.39,0 2.81,1.4 6.78,-0.2 9.59,1.2 1.6,0.8 4.39,-0.8 5.99,0 2.73,1.37 6.55,0.19 9.59,1.2 1.93,0.64 5.14,0 7.19,0 1.1,0 0.88,0.29 1.8,0.6 1.9,0.63 5.14,0 7.19,0 0.86,0 4.85,0.55 5.39,0 0.14,-0.14 -0.09,-0.42 0,-0.6 0.78,-1.56 0.78,-2.63 0,-4.2 -0.18,-0.36 0.28,-0.92 0,-1.2 -0.14,-0.14 -0.46,0.14 -0.6,0 -0.48,-0.48 0.31,-2.37 0,-3 -1.6,-3.21 -0.69,-12.41 0.6,-14.98 0.18,-0.36 -0.28,-0.92 0,-1.2 0.28,-0.28 0.92,0.28 1.2,0 0.14,-0.14 -0.14,-0.46 0,-0.6 0.74,-0.74 1.14,0.54 1.2,0.6 0.38,0.38 1.9,-0.25 2.4,0 0.91,0.46 1.5,1.35 2.4,1.8 0.36,0.18 0.92,-0.28 1.2,0 0.14,0.14 -0.14,0.46 0,0.6 0.28,0.28 0.92,-0.28 1.2,0 0.14,0.14 -0.14,0.46 0,0.6 0.28,0.28 0.84,-0.18 1.2,0 2.01,1.01 4.01,2 5.99,3 0.51,0.25 0.69,0.95 1.2,1.2 0.36,0.18 1.55,0.35 1.8,0.6 0.14,0.14 -0.14,0.46 0,0.6 0.28,0.28 0.92,-0.28 1.2,0 0.3,0.3 0.3,0.9 0.6,1.2 0.28,0.28 0.92,-0.28 1.2,0 0.3,0.3 0.3,0.9 0.6,1.2 0.28,0.28 0.92,-0.28 1.2,0 0.14,0.14 -0.14,0.46 0,0.6 0.2,0.2 2.04,1.02 2.4,1.2 0.51,0.25 0.69,0.95 1.2,1.2 0.36,0.18 0.92,-0.28 1.2,0 0.14,0.14 -0.14,0.46 0,0.6 0.14,0.14 0.42,-0.09 0.6,0 0.51,0.25 0.69,0.95 1.2,1.2 0.36,0.18 0.92,-0.28 1.2,0 0.14,0.14 -0.09,0.42 0,0.6 0.66,1.32 0.37,0.19 1.2,0.6 0.95,0.48 1.4,2 1.8,2.4 0.28,0.28 0.92,-0.28 1.2,0 0.14,0.14 -0.14,0.46 0,0.6 0.39,0.39 1.39,0.37 1.8,1.2 0.25,0.49 0.24,0.84 0.6,1.2 0.14,0.14 0.42,-0.09 0.6,0 1.2,0.6 1.8,2.4 3,3 0.18,0.09 0.46,-0.14 0.6,0 0.3,0.3 0.3,0.9 0.6,1.2 0.2,0.2 1.6,0.4 1.8,0.6 0.14,0.14 -0.14,0.46 0,0.6 0.14,0.14 0.42,-0.09 0.6,0 1.15,0.58 1.84,1.82 3,2.4 0.36,0.18 1.55,0.35 1.8,0.6 0.14,0.14 -0.14,0.46 0,0.6 0.14,0.14 0.42,-0.09 0.6,0 0.51,0.25 0.69,0.95 1.2,1.2 0.36,0.18 0.92,-0.28 1.2,0 0.14,0.14 -0.14,0.46 0,0.6 0.42,0.42 2.98,1.49 3.6,1.8 1.63,0.81 2.57,2.78 4.2,3.6 0.36,0.18 1.55,0.35 1.8,0.6 0.14,0.14 -0.14,0.46 0,0.6 1.24,1.24 -0.05,-1.9 1.2,0.6 0.09,0.18 -0.14,0.46 0,0.6 0.35,0.35 2.05,0.85 2.4,1.2 0.14,0.14 -0.09,0.42 0,0.6 0.38,0.76 2.32,1.46 3,1.8 2.49,1.25 -0.64,-0.04 0.6,1.2 0.2,0.2 1.6,0.4 1.8,0.6 0.3,0.3 0.3,0.9 0.6,1.2 0.03,0.03 1.76,1.17 1.8,1.2 0.14,0.14 -0.14,0.46 0,0.6 0.14,0.14 0.46,-0.14 0.6,0 0.36,0.36 0.35,0.7 0.6,1.2 1.25,2.49 -0.04,-0.64 1.2,0.6 0.14,0.14 -0.14,0.46 0,0.6 0.14,0.14 0.46,-0.14 0.6,0 0.14,0.14 -0.09,0.42 0,0.6 0.37,0.74 2.26,2.63 3,3 0.18,0.09 0.46,-0.14 0.6,0 0.14,0.14 -0.14,0.46 0,0.6 0.14,0.14 0.46,-0.14 0.6,0 0.14,0.14 -0.14,0.46 0,0.6 0.14,0.14 0.46,-0.14 0.6,0 0.3,0.3 0.3,0.9 0.6,1.2 0.37,0.37 1.4,0.4 1.8,1.2 0.09,0.18 -0.14,0.46 0,0.6 0.14,0.14 0.46,-0.14 0.6,0 1.24,1.24 -1.9,-0.05 0.6,1.2 0.18,0.09 0.46,-0.14 0.6,0 0.28,0.28 -0.28,0.92 0,1.2 0.14,0.14 0.42,-0.09 0.6,0 2.49,1.25 -0.64,-0.04 0.6,1.2 0.03,0.03 1.76,1.17 1.8,1.2 0.14,0.14 -0.09,0.42 0,0.6 0.6,1.2 2.4,1.8 3,3 0.09,0.18 -0.14,0.46 0,0.6 0.14,0.14 0.42,-0.09 0.6,0 2.49,1.25 -0.64,-0.04 0.6,1.2 0.14,0.14 0.46,-0.14 0.6,0 0.14,0.14 -0.14,0.46 0,0.6 0.14,0.14 0.46,-0.14 0.6,0 0.14,0.14 -0.14,0.46 0,0.6 0.14,0.14 0.46,-0.14 0.6,0 0.14,0.14 -0.14,0.46 0,0.6 0.45,0.45 1.2,0.26 1.2,1.2 0.3,0.7 0.52,1.44 0.9,2.1 0.1,0.17 0.42,-0.09 0.6,0 0.4,0.2 1.26,0.57 1.8,0.3 0.13,-0.06 0.17,-0.24 0.3,-0.3 0.18,-0.09 0.76,0.14 0.9,0 0.1,-0.1 0.2,-0.4 0.3,-0.3 0.03,0.03 0.03,0.87 0,0.9 -0.07,0.07 -0.23,-0.07 -0.3,0 -0.07,0.07 0.07,0.23 0,0.3 -0.07,0.07 -0.23,-0.07 -0.3,0 -0.07,0.07 0.07,0.23 0,0.3 -0.07,0.07 -0.23,-0.07 -0.3,0 -0.07,0.07 0.07,0.23 0,0.3 -0.07,0.07 -0.23,-0.07 -0.3,0 -0.07,0.07 0.07,0.23 0,0.3 -0.07,0.07 -0.23,-0.07 -0.3,0 -0.22,0.22 -0.6,1.4 -0.6,1.8 0,0.2 -0.14,0.46 0,0.6 0.14,0.14 0.42,-0.09 0.6,0 0.13,0.06 0.17,0.24 0.3,0.3 0.38,0.19 3.17,0.21 3.6,0 0.32,-0.16 0.74,-0.53 1.2,-0.3 0.13,0.06 0.17,0.24 0.3,0.3 0.24,0.12 0.66,-0.12 0.9,0 0.25,0.13 0.35,0.47 0.6,0.6 0.09,0.04 0.23,-0.07 0.3,0 0.07,0.07 -0.04,0.21 0,0.3 0.21,0.41 0.7,0.4 0.9,0.6 0.07,0.07 -0.04,0.21 0,0.3 0.62,1.25 -0.02,-0.32 0.6,0.3 0.15,0.15 0.15,0.45 0.3,0.6 0.62,0.62 -0.02,-0.95 0.6,0.3 0.04,0.09 -0.07,0.23 0,0.3 0.16,0.16 1.34,0.74 1.5,0.9 0.07,0.07 -0.07,0.23 0,0.3 0.18,0.18 0.7,0.2 0.9,0.6 0.04,0.09 -0.07,0.23 0,0.3 0.07,0.07 0.21,-0.04 0.3,0 0.6,0.3 0.9,1.2 1.5,1.5 0.09,0.04 0.23,-0.07 0.3,0 0.07,0.07 -0.04,0.21 0,0.3 0.62,1.25 -0.02,-0.32 0.6,0.3 0.07,0.07 -0.07,0.23 0,0.3 0.07,0.07 0.23,-0.07 0.3,0 0.07,0.07 -0.07,0.23 0,0.3 0.01,0.01 1.29,0.9 1.5,0.9 1.24,0.89 1.09,1.38 1.95,1.81 0.06,0.03 0.16,-0.05 0.21,0 0.05,0.05 -0.03,0.15 0,0.21 0.14,0.28 0.51,0.29 0.64,0.42 0.05,0.05 -0.05,0.16 0,0.21 0.02,0.02 1.25,0.83 1.27,0.85 0.05,0.05 -0.05,0.16 0,0.21 0.12,0.12 0.72,0.3 0.85,0.42 0.44,0.44 -0.67,-0.02 0.21,0.42 0.29,0.15 0.19,-0.26 0.42,0.21 0.03,0.06 -0.05,0.16 0,0.21 0.09,0.09 0.51,0.15 0.64,0.21 0.25,0.13 0.38,0.51 0.64,0.64 0.33,0.17 0.71,0.4 1.06,0.64 0.34,0.23 0.38,0.59 0.64,0.85 0.29,0.29 1.11,0.81 1.48,1.06 0.41,0.28 0.86,0.43 1.27,0.64 0.18,0.09 0.26,0.31 0.42,0.42 0.4,0.27 0.66,0.16 1.06,0.42 0.17,0.11 0.23,0.36 0.42,0.42 0.13,0.04 0.29,-0.04 0.42,0 0.4,0.13 0.71,0.62 1.06,0.85 0.4,0.27 0.66,0.16 1.06,0.42 0.63,0.42 1.25,0.73 1.91,1.06 0.41,0.2 0.68,0.59 1.06,0.85 0.11,0.47 0.44,0.11 0.64,0.21 0.34,0.17 0.51,0.68 0.85,0.85 0.13,0.06 0.55,0.12 0.64,0.21 0.28,0.28 -0.45,0.2 0.21,0.42 0.13,0.04 0.29,-0.04 0.42,0 0.16,0.05 0.48,0.35 0.64,0.42 0.25,0.13 0.38,0.51 0.64,0.64 0.6,0.3 1.31,0.76 1.91,1.06 0.45,0.23 -0.03,0.2 0.42,0.42 0.06,0.03 0.16,-0.05 0.21,0 0.05,0.05 -0.05,0.16 0,0.21 0.07,0.07 0.56,0.14 0.64,0.21 0.05,0.05 -0.05,0.16 0,0.21 0.19,0.19 0.81,0.3 1.06,0.42 0.18,0.09 0.24,0.33 0.42,0.42 0.67,0.34 1.45,0.72 2.12,1.06 0.18,0.09 0.24,0.33 0.42,0.42 0.29,0.15 0.75,0.27 1.06,0.42 0.18,0.09 0.24,0.33 0.42,0.42 0.06,0.03 0.14,0 0.21,0 0.14,0.07 0.29,0.12 0.42,0.21 0.28,0.18 0.56,0.49 0.85,0.64 0.06,0.03 0.14,0 0.21,0 0.14,0.07 0.29,0.12 0.42,0.21 0.17,0.11 0.23,0.36 0.42,0.42 0.13,0.04 0.29,-0.04 0.42,0 0.39,0.13 0.68,0.66 1.06,0.85 0.95,0.47 1.83,1.23 2.75,1.7 0.25,0.13 0.38,0.51 0.64,0.64 0.45,0.22 1.01,0.4 1.48,0.64 0.38,0.19 0.67,0.72 1.06,0.85 0.13,0.04 0.29,-0.04 0.42,0 0.25,0.09 0.38,0.55 0.64,0.64 0.13,0.04 0.29,-0.04 0.42,0 0.62,0.21 1.11,0.98 1.7,1.27 0.47,0.24 1.01,0.4 1.48,0.64 0.44,0.22 0.81,0.91 1.27,1.06 0.13,0.04 0.29,-0.04 0.42,0 0.25,0.08 0.4,0.52 0.64,0.64 0.06,0.03 0.14,0 0.21,0 0.14,0.07 0.29,0.12 0.42,0.21 0.54,0.36 0.91,0.98 1.48,1.27 0.32,0.16 0.72,0.2 1.06,0.42 0.23,0.16 0.39,0.51 0.64,0.64 1.23,0.61 2.33,1.7 3.6,2.33 0.58,0.29 0.91,0.98 1.48,1.27 1.01,0.51 1.96,1.19 2.97,1.7 0.14,0.07 0.07,0.35 0.21,0.42 0.13,0.06 0.29,-0.04 0.42,0 0.25,0.08 0.4,0.52 0.64,0.64 0.22,0.11 0.63,0.1 0.85,0.21 0.32,0.16 0.51,0.73 0.85,0.85 0.13,0.04 0.29,-0.04 0.42,0 0.18,0.06 2.63,2.17 3.18,2.54 0.86,0.57 1.61,1.23 2.54,1.7 0.58,0.29 0.91,0.98 1.48,1.27 0.24,0.12 0.62,0.1 0.85,0.21 0.06,0.03 -0.05,0.16 0,0.21 0.36,0.36 1.07,0.64 1.48,0.85 0.54,0.27 1.37,1.12 1.91,1.48 0.19,0.12 0.48,0.05 0.64,0.21 0.05,0.05 -0.05,0.16 0,0.21 0.22,0.22 0.62,0.31 0.85,0.42 0.25,0.13 0.38,0.51 0.64,0.64 0.26,0.13 0.59,0.29 0.85,0.42 0.24,0.12 0.39,0.55 0.64,0.64 0.13,0.04 0.29,-0.04 0.42,0 0.46,0.15 0.83,0.84 1.27,1.06 1.6,0.8 3.06,2.17 4.66,2.97 0.25,0.13 0.38,0.51 0.64,0.64 0.72,0.36 1.42,0.92 2.12,1.27 0.25,0.13 0.38,0.51 0.64,0.64 0.46,0.23 0.9,0.66 1.27,0.85 0.13,0.06 0.55,0.12 0.64,0.21 0.05,0.05 -0.05,0.16 0,0.21 0.05,0.05 0.15,-0.03 0.21,0 0.25,0.13 0.38,0.51 0.64,0.64 0.97,0.49 1.97,1.2 2.97,1.7 0.24,0.12 0.39,0.55 0.64,0.64 0.13,0.04 0.29,-0.04 0.42,0 0.25,0.08 0.4,0.52 0.64,0.64 0.18,0.09 1.14,0.51 1.27,0.64 0.05,0.05 -0.05,0.16 0,0.21 0.19,0.19 0.81,0.3 1.06,0.42 0.18,0.09 0.24,0.33 0.42,0.42 0.63,0.32 1.26,0.63 1.91,1.06 0.17,0.11 0.23,0.36 0.42,0.42 0.31,0.1 0.57,0.07 0.85,0.21 0.18,0.09 0.24,0.33 0.42,0.42 0.78,0.39 1.55,0.88 2.33,1.27 0.41,0.2 0.65,0.64 1.06,0.85 0.13,0.06 0.3,-0.06 0.42,0 0.31,0.15 0.34,0.34 0.42,0.42 0.1,0.1 0.32,-0.1 0.42,0 0.05,0.05 -0.05,0.16 0,0.21 0.19,0.19 0.62,0.1 0.85,0.21 0.74,0.37 1.38,0.9 2.12,1.27 0.31,0.15 1.27,0.43 1.48,0.64 0.05,0.05 -0.05,0.16 0,0.21 0.11,0.11 0.53,-0.11 0.64,0 0.05,0.05 -0.05,0.16 0,0.21 0.1,0.1 0.32,-0.1 0.42,0 0.05,0.05 -0.05,0.16 0,0.21 0.17,0.17 0.84,-0.11 1.06,0 0.67,0.34 1.87,0.34 2.54,0 0.18,-0.09 0.71,0.13 0.85,0 0.05,-0.05 -0.05,-0.16 0,-0.21 0.1,-0.1 0.32,0.1 0.42,0 0.05,-0.05 -0.05,-0.16 0,-0.21 0.13,-0.13 0.75,-0.32 0.85,-0.42 0.09,-0.09 0.15,-0.51 0.21,-0.64 0.09,-0.18 0.33,-0.24 0.42,-0.42 0.06,-0.13 -0.06,-0.3 0,-0.42 0.27,-0.54 0.99,-2.26 0.64,-2.97 -0.15,-0.31 -0.34,-0.34 -0.42,-0.42 -0.1,-0.1 0.1,-0.32 0,-0.42 -0.05,-0.05 -0.16,0.05 -0.21,0 -0.11,-0.11 -0.11,-0.32 -0.21,-0.42 -0.11,-0.11 -0.95,-0.52 -1.06,-0.64 -0.05,-0.05 0.05,-0.16 0,-0.21 -0.05,-0.05 -0.15,0.03 -0.21,0 -0.88,-0.44 0.23,0.01 -0.21,-0.42 -0.14,-0.14 -1.19,-0.55 -1.27,-0.64 -0.13,-0.13 -0.14,-0.49 -0.42,-0.64 -0.26,-0.13 -0.59,-0.29 -0.85,-0.42 -0.25,-0.13 -0.38,-0.51 -0.64,-0.64 -0.12,-0.06 -0.78,-0.35 -0.85,-0.42 -0.05,-0.05 0.05,-0.16 0,-0.21 -0.14,-0.14 -1.03,-0.51 -1.27,-0.64 -0.38,-0.19 -0.69,-0.66 -1.06,-0.85 -0.26,-0.13 -0.56,-0.23 -0.85,-0.42 -0.17,-0.11 -0.23,-0.36 -0.42,-0.42 -0.13,-0.04 -0.3,0.06 -0.42,0 -0.06,-0.03 0.05,-0.16 0,-0.21 -0.09,-0.09 -1.07,-0.53 -1.27,-0.64 -0.13,-0.06 -0.32,0.1 -0.42,0 -0.05,-0.05 0.05,-0.16 0,-0.21 -0.08,-0.08 -1.52,-0.79 -1.7,-0.85 -0.13,-0.04 -0.29,0.03 -0.42,0 -0.56,-0.14 -1.47,-0.91 -1.91,-1.06 -0.13,-0.04 -0.29,0.04 -0.42,0 -0.19,-0.06 -0.24,-0.33 -0.42,-0.42 -0.71,-0.35 -1.63,-0.71 -2.33,-1.06 -0.18,-0.09 -0.24,-0.33 -0.42,-0.42 -0.29,-0.15 -0.75,-0.27 -1.06,-0.42 -0.36,-0.18 -0.66,-0.71 -1.06,-0.85 -0.13,-0.04 -0.29,0.04 -0.42,0 -0.44,-0.14 -0.88,-0.8 -1.27,-1.06 -0.11,-0.47 -0.44,-0.11 -0.64,-0.21 -0.36,-0.18 -0.66,-0.71 -1.06,-0.85 -0.13,-0.04 -0.29,0.04 -0.42,0 -0.19,-0.06 -0.26,-0.31 -0.42,-0.42 -0.41,-0.28 -0.86,-0.43 -1.27,-0.64 -0.4,-0.2 -0.69,-0.6 -1.06,-0.85 -0.1,-0.07 -0.54,-0.15 -0.64,-0.21 -0.45,-0.3 -0.82,-0.76 -1.27,-1.06 -0.14,-0.07 -0.28,-0.14 -0.42,-0.21 -0.07,0 -0.15,0.03 -0.21,0 -0.18,-0.09 -0.26,-0.31 -0.42,-0.42 -0.97,-0.65 -1.99,-1.25 -2.97,-1.91 -0.53,-0.36 -0.95,-0.92 -1.48,-1.27 -0.11,-0.47 -0.44,-0.11 -0.64,-0.21 -0.34,-0.17 -0.51,-0.68 -0.85,-0.85 -0.95,-0.48 -1.83,-1.23 -2.75,-1.7 -0.25,-0.13 -0.38,-0.51 -0.64,-0.64 -0.06,-0.03 -0.14,0 -0.21,0 -0.14,-0.07 -0.29,-0.12 -0.42,-0.21 -0.21,-0.14 -0.4,-0.56 -0.64,-0.64 -0.13,-0.04 -0.29,0.04 -0.42,0 -0.44,-0.14 -0.88,-0.8 -1.27,-1.06 -0.9,-0.6 -1.86,-1.1 -2.75,-1.7 -1.05,-0.7 -2.11,-1.41 -3.18,-2.12 -0.37,-0.24 -0.66,-0.65 -1.06,-0.85 -0.3,-0.15 -1.91,-1.01 -2.12,-1.06 -0.14,-0.03 -0.29,0.04 -0.42,0 -0.28,-0.09 -0.6,-0.47 -0.85,-0.64 -1.29,-0.86 -2.73,-1.47 -4.03,-2.33 -0.25,-0.17 -0.4,-0.46 -0.64,-0.64 -0.57,-0.43 -1.31,-0.66 -1.91,-1.06 -0.88,-0.59 -1.66,-1.32 -2.54,-1.91 -0.24,-0.16 -0.39,-0.47 -0.64,-0.64 -0.42,-0.28 -0.83,-0.34 -1.27,-0.64 -0.62,-0.41 -1.08,-1.07 -1.7,-1.48 -0.1,-0.07 -0.54,-0.15 -0.64,-0.21 -0.64,-0.43 -1.05,-1.05 -1.7,-1.48 -0.75,-0.5 -1.58,-1.11 -2.33,-1.48 -0.63,-0.31 -1.07,-1.17 -1.7,-1.48 -0.92,-0.46 -1.88,-1.32 -2.75,-1.91 -0.49,-0.33 -0.78,-0.94 -1.27,-1.27 -0.13,-0.09 -0.31,-0.1 -0.42,-0.21 -0.05,-0.05 0.06,-0.18 0,-0.21 -0.13,-0.06 -0.29,0.04 -0.42,0 -0.42,-0.14 -0.66,-0.86 -1.06,-1.06 -0.5,-0.25 -0.97,-0.72 -1.48,-1.06 -0.49,-0.32 0.09,-0.12 -0.42,-0.64 -0.11,-0.11 -0.29,-0.12 -0.42,-0.21 -0.55,-0.37 -0.89,-1.19 -1.48,-1.48 -0.9,-0.45 -1.56,-1.42 -2.12,-1.7 -0.12,-0.06 -1.01,-0.59 -1.06,-0.64 -0.13,-0.13 -0.14,-0.49 -0.42,-0.64 -0.46,-0.23 -0.79,-0.82 -1.27,-1.06 -1.33,-0.67 -2.48,-2.09 -3.81,-2.75 -0.65,-0.33 0.35,-0.12 -0.42,-0.64 -0.12,-0.08 -0.29,0.04 -0.42,0 -0.48,-0.16 -0.85,-0.99 -1.27,-1.27 -0.35,-0.24 -0.73,-0.47 -1.06,-0.64 -0.51,-0.25 -0.76,-1.02 -1.27,-1.27 -0.26,-0.13 -0.56,-0.23 -0.85,-0.42 -0.55,-0.37 -0.9,-1.19 -1.48,-1.48 -0.83,-0.41 -1.8,-1.32 -2.33,-2.12 -0.26,-0.39 -0.79,-0.54 -1.27,-1.27 -0.16,-0.23 -1.16,-0.95 -1.48,-1.27 -0.58,-0.58 -0.74,-0.84 -1.06,-1.48 -0.17,-0.34 -0.68,-0.51 -0.85,-0.85 -0.03,-0.06 0,-0.14 0,-0.21 -0.07,-0.14 -0.12,-0.29 -0.21,-0.42 -0.22,-0.33 -0.47,-0.53 -0.64,-0.85 -0.25,-0.51 -1.02,-0.76 -1.27,-1.27 -0.23,-0.47 -1.15,-1.32 -1.27,-1.7 -0.04,-0.13 0.04,-0.29 0,-0.42 -0.08,-0.24 -0.51,-0.29 -0.64,-0.42 -0.32,-0.32 -0.95,-1.26 -1.06,-1.7 -0.03,-0.14 0.04,-0.29 0,-0.42 -0.12,-0.34 -0.53,-0.42 -0.64,-0.85 -0.05,-0.21 0.1,-0.45 0,-0.64 -0.16,-0.32 -0.29,-0.45 -0.42,-0.85 -0.12,-0.36 0.17,-0.93 0,-1.27 -0.26,-0.52 -0.09,-0.82 -0.21,-1.06 -0.52,-1.03 -0.56,-2.38 -1.06,-3.39 -0.11,-0.23 0.08,-0.6 0,-0.85 -0.18,-0.53 -0.2,-1.03 -0.42,-1.48 -0.18,-0.36 -0.12,-3 -0.21,-3.18 -0.47,-0.95 -0.36,-2.21 -0.85,-3.18 -0.12,-0.24 0.04,-0.55 -0.21,-1.06 -0.11,-0.23 0.11,-0.62 0,-0.85 -0.33,-0.67 -0.3,-1.46 -0.64,-2.12 -0.06,-0.13 0.1,-0.54 0,-0.64 -0.05,-0.05 -0.16,0.05 -0.21,0 -0.1,-0.1 0.06,-0.3 0,-0.42 -0.17,-0.34 -0.42,-0.62 -0.42,-1.06 -1.8,-1.54 -2.67,-2.3 -4.55,-3.24 -0.18,-0.09 -0.42,0.09 -0.6,0 -0.25,-0.13 -0.35,-0.47 -0.6,-0.6 -0.27,-0.13 -0.61,0.1 -0.9,0 -0.31,-0.1 -0.6,-0.45 -0.9,-0.6 -0.84,-0.42 -1.86,-0.48 -2.7,-0.9 -0.25,-0.13 -0.33,-0.51 -0.6,-0.6 -0.64,-0.21 -2.15,-0.53 -2.7,-0.9 -0.35,-0.24 -0.81,-0.77 -1.2,-0.9 -0.43,-0.14 -0.8,-0.1 -1.2,-0.3 -0.6,-0.3 -1.14,-0.98 -1.8,-1.2 -0.19,-0.06 -0.41,0.06 -0.6,0 -0.31,-0.1 -0.6,-0.45 -0.9,-0.6 -0.31,-0.15 -0.89,-0.15 -1.2,-0.3 -1.25,-0.62 -2.62,-1.16 -3.9,-1.8 -0.49,-0.25 -1.68,-0.18 -2.1,-0.6 -0.07,-0.07 0.09,-0.26 0,-0.3 -0.27,-0.13 -0.69,0.21 -0.9,0 -0.07,-0.07 0.09,-0.26 0,-0.3 -0.53,-0.27 -0.91,-0.01 -1.5,-0.3 -0.5,-0.25 -0.97,-0.72 -1.5,-0.9 -0.19,-0.06 -0.41,0.06 -0.6,0 -0.27,-0.09 -0.35,-0.47 -0.6,-0.6 -0.39,-0.2 -0.77,-0.15 -1.2,-0.3 -0.33,-0.11 -1.7,-1.3 -2.1,-1.5 -0.32,-0.16 -0.93,-0.03 -1.2,-0.3 -0.07,-0.07 0.07,-0.23 0,-0.3 -0.1,-0.1 -0.8,-0.2 -0.9,-0.3 -0.07,-0.07 0.07,-0.23 0,-0.3 -0.1,-0.1 -0.8,-0.2 -0.9,-0.3 -0.15,-0.15 -0.15,-0.45 -0.3,-0.6 -0.1,-0.1 -0.8,-0.2 -0.9,-0.3 -0.15,-0.15 -0.15,-0.45 -0.3,-0.6 -0.16,-0.16 -1.34,-0.74 -1.5,-0.9 -0.14,-0.14 0.14,-0.46 0,-0.6 -0.15,-0.15 -0.45,-0.15 -0.6,-0.3 -0.1,-0.1 -0.2,-0.8 -0.3,-0.9 -0.12,-0.12 -0.38,-0.16 -0.6,-0.6 -0.09,-0.18 0.14,-0.76 0,-0.9 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.14,-0.14 0.14,-0.46 0,-0.6 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.14,-0.14 0.09,-0.42 0,-0.6 -0.31,-0.61 -0.59,-1.18 -0.9,-1.8 -0.14,-0.29 0.02,-0.57 -0.3,-1.2 -0.33,-0.66 0,-7.21 0,-8.39 0,-2.58 0.49,-6.33 -0.3,-8.69 -0.21,-0.63 0.21,-1.47 0,-2.1 -0.26,-0.77 -0.09,-1.46 -0.3,-2.1 -0.04,-0.13 -0.26,-0.17 -0.3,-0.3 -0.09,-0.27 0.09,-0.63 0,-0.9 -0.24,-0.73 -0.28,-1.47 -0.6,-2.1 -0.16,-0.32 0.16,-0.88 0,-1.2 -0.43,-0.86 -0.47,-1.83 -0.9,-2.7 -0.12,-0.24 0.12,-0.66 0,-0.9 -0.06,-0.13 -0.24,-0.17 -0.3,-0.3 -0.09,-0.18 0.14,-0.76 0,-0.9 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.19,-0.19 0.12,-0.95 0,-1.2 -0.31,-0.61 -0.59,-1.18 -0.9,-1.8 -0.16,-0.32 -0.03,-0.93 -0.3,-1.2 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.27,-0.27 -0.42,-1.14 -0.6,-1.5 -0.07,-0.14 -1.71,-2.05 -1.8,-2.1 -0.09,-0.04 -0.23,0.07 -0.3,0 -0.07,-0.07 0.07,-0.23 0,-0.3 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.07,-0.07 0.07,-0.23 0,-0.3 -0.13,-0.13 -0.72,-0.21 -0.9,-0.3 -0.25,-0.13 -0.35,-0.47 -0.6,-0.6 -0.18,-0.09 -0.42,0.09 -0.6,0 -0.44,-0.22 -0.48,-0.48 -0.6,-0.6 -0.11,-0.11 -1.01,-0.21 -1.2,-0.3 -0.69,-0.34 -1.1,-1.15 -1.8,-1.5 -1.2,-0.6 -2.14,-1.63 -3.3,-2.4 -0.41,-0.27 -0.83,-0.41 -1.2,-0.6 -0.25,-0.13 -0.36,-0.44 -0.6,-0.6 -1.02,-0.68 -1.98,-1.42 -3,-2.1 -0.74,-0.5 -0.03,-0.07 -0.3,-0.6 -0.33,-0.66 -0.19,-0.09 -0.6,-0.3 -0.47,-0.24 -0.76,-0.9 -1.2,-1.2 -1.02,-0.68 -1.97,-1.42 -3,-2.1 -0.41,-0.28 -0.31,-0.46 -0.6,-0.9 -0.03,-0.05 -1.65,-1.42 -1.8,-1.5 -0.09,-0.04 -0.2,0 -0.3,0 -0.2,-0.1 -0.41,-0.18 -0.6,-0.3 -0.76,-0.51 -1.33,-1.28 -2.1,-1.8 -0.58,-0.38 -0.92,-1.11 -1.5,-1.5 -0.19,-0.12 -0.44,-0.14 -0.6,-0.3 -0.16,-0.16 -0.14,-0.44 -0.3,-0.6 -0.34,-0.34 -1.1,-0.63 -1.5,-0.9 -0.83,-0.56 -1.56,-1.38 -2.4,-1.8 -0.71,-0.36 -1.13,-1.35 -1.8,-1.8 -0.26,-0.17 -0.68,-0.08 -0.9,-0.3 -0.16,-0.16 -0.14,-0.44 -0.3,-0.6 -0.34,-0.34 -1.1,-0.63 -1.5,-0.9 -0.46,-0.31 -0.74,-0.89 -1.2,-1.2 -0.79,-0.53 -1.61,-0.97 -2.4,-1.5 -0.69,-0.46 -1.11,-1.34 -1.8,-1.8 -1.94,-1.29 -3.43,-2.89 -5.39,-4.2 -0.44,-0.3 -0.72,-0.96 -1.2,-1.2 -0.28,-0.14 -1.99,-1.28 -2.1,-1.5 -0.04,-0.09 0.07,-0.23 0,-0.3 -0.14,-0.14 -0.46,0.14 -0.6,0 -0.23,-0.23 -0.13,-0.6 -0.6,-0.6 -0.77,-0.64 -2.19,-1.37 -2.7,-2.4 -0.04,-0.09 0.07,-0.23 0,-0.3 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.07,-0.07 0.07,-0.23 0,-0.3 -0.2,-0.2 -1.68,-0.78 -1.8,-0.9 -0.07,-0.07 0.07,-0.23 0,-0.3 -0.07,-0.07 -0.21,0.04 -0.3,0 -0.25,-0.13 -0.35,-0.47 -0.6,-0.6 -0.18,-0.09 -0.42,0.09 -0.6,0 -0.25,-0.13 -0.35,-0.47 -0.6,-0.6 -0.18,-0.09 -0.46,0.14 -0.6,0 -0.62,-0.62 0.95,0.02 -0.3,-0.6 -0.45,-0.23 -1.02,-1.04 -1.5,-1.2 -0.19,-0.06 -0.41,0.06 -0.6,0 -0.45,-0.15 -0.8,-0.93 -1.2,-1.2 0.03,-0.57 -0.7,-0.2 -0.9,-0.3 -0.48,-0.24 -0.72,-0.96 -1.2,-1.2 -1.69,-0.84 -3.01,-2.1 -4.79,-3 -0.35,-0.18 -0.57,-0.68 -0.9,-0.9 -0.41,-0.27 -0.83,-0.41 -1.2,-0.6 -0.36,-0.18 -0.54,-0.72 -0.9,-0.9 -0.58,-0.29 -1.22,-0.61 -1.8,-0.9 -0.25,-0.13 -0.35,-0.47 -0.6,-0.6 -0.18,-0.09 -0.77,-0.17 -0.9,-0.3 -0.07,-0.07 0.07,-0.23 0,-0.3 -0.07,-0.07 -0.21,0.04 -0.3,0 -0.25,-0.13 -0.35,-0.47 -0.6,-0.6 -0.18,-0.09 -0.77,-0.17 -0.9,-0.3 -0.07,-0.07 0.07,-0.23 0,-0.3 -0.17,-0.17 -1.02,-0.43 -1.2,-0.6 -0.07,-0.07 0.07,-0.23 0,-0.3 -0.15,-0.15 -0.45,-0.15 -0.6,-0.3 -0.62,-0.62 0.95,0.02 -0.3,-0.6 -0.09,-0.04 -0.23,0.07 -0.3,0 -0.07,-0.07 0.04,-0.21 0,-0.3 -0.06,-0.13 -0.24,-0.17 -0.3,-0.3 -0.09,-0.18 0.14,-0.46 0,-0.6 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.5,-0.5 0.5,-2.5 0,-3 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.15,-0.15 0.15,-0.75 0,-0.9 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.15,-0.15 0.15,-0.75 0,-0.9 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.14,-0.14 0.09,-0.72 0,-0.9 -0.35,-0.7 -0.55,-1.4 -0.9,-2.1 -0.12,-0.24 0.12,-0.66 0,-0.9 -0.26,-0.52 -0.34,-0.98 -0.6,-1.5 -0.12,-0.24 0.12,-0.66 0,-0.9 -0.39,-0.78 -0.51,-1.62 -0.9,-2.4 -0.12,-0.25 0.19,-1.01 0,-1.2 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.1,-0.1 0.03,-0.75 0,-0.9 -0.1,-0.4 -0.2,-0.8 -0.3,-1.2 -0.1,0 -0.26,0.09 -0.3,0 -0.16,-0.32 0.16,-0.88 0,-1.2 -0.28,-0.57 -0.38,-1.13 -0.6,-1.8 -0.33,-0.98 0.22,-1.96 -0.3,-3 -0.35,-0.69 0.19,-1.94 0,-2.7 -0.2,-0.81 -0.25,-1.7 -0.6,-2.4 -0.2,-0.4 0.2,-1.1 0,-1.5 -0.04,-0.09 -0.26,0.09 -0.3,0 -0.3,-0.6 0.15,-0.45 0,-0.9 -0.21,-0.64 -0.39,-1.16 -0.6,-1.8 -0.09,-0.27 0.09,-0.63 0,-0.9 -0.21,-0.64 -0.39,-1.16 -0.6,-1.8 -0.12,-0.36 0.12,-0.84 0,-1.2 -0.13,-0.38 -0.45,-0.76 -0.6,-1.2 -0.09,-0.27 0.09,-0.63 0,-0.9 -0.04,-0.13 -0.26,-0.17 -0.3,-0.3 -0.1,-0.29 0.14,-0.91 0,-1.2 -0.39,-0.78 -0.51,-1.61 -0.9,-2.4 -0.09,-0.18 0.05,-0.41 0,-0.6 -0.26,-1.04 -0.46,-2.11 -0.9,-3 -0.12,-0.24 0.12,-0.66 0,-0.9 -0.71,-1.42 -0.79,-3.08 -1.5,-4.49 -0.14,-0.29 0.1,-0.91 0,-1.2 -0.04,-0.13 -0.24,-0.17 -0.3,-0.3 -0.47,-0.95 -0.41,-2.31 -0.9,-3.3 -0.12,-0.24 0.12,-0.66 0,-0.9 -0.26,-0.52 -0.34,-0.98 -0.6,-1.5 -0.26,-0.53 -0.02,-1.55 -0.3,-2.1 -0.06,-0.13 -0.26,-0.17 -0.3,-0.3 -0.26,-0.78 -0.04,-1.62 -0.3,-2.4 -0.04,-0.13 -0.26,-0.17 -0.3,-0.3 -0.1,-0.28 0.1,-0.61 0,-0.9 -0.3,-0.91 -0.59,-1.78 -0.9,-2.7 -0.08,-0.25 0.12,-0.66 0,-0.9 -0.06,-0.13 -0.26,-0.17 -0.3,-0.3 -0.16,-0.47 -0.09,-1.68 -0.3,-2.1 -0.06,-0.13 -0.26,-0.17 -0.3,-0.3 -0.22,-0.67 0,-2.69 -0.3,-3.3 -0.26,-0.52 -0.34,-0.98 -0.6,-1.5 -0.12,-0.24 0.12,-0.66 0,-0.9 -0.23,-0.45 -0.41,-0.64 -0.6,-1.2 -0.15,-0.45 0.15,-1.05 0,-1.5 -0.04,-0.13 -0.26,-0.17 -0.3,-0.3 -0.24,-0.72 -0.27,-1.44 -0.6,-2.1 -0.16,-0.32 0.16,-0.88 0,-1.2 -0.5,-1 -0.53,-1.9 -0.9,-3 -0.17,-0.51 -0.47,-0.98 -0.6,-1.5 -0.05,-0.19 0,-0.4 0,-0.6 0,-0.2 0.05,-0.41 0,-0.6 -0.17,-0.7 -0.78,-1.39 -0.9,-2.1 -0.07,-0.39 0.08,-0.81 0,-1.2 -0.03,-0.14 -0.26,-0.17 -0.3,-0.3 -0.18,-0.53 -0.12,-1.26 -0.3,-1.8 -0.04,-0.13 -0.26,-0.17 -0.3,-0.3 -0.15,-0.44 0.11,-1.05 0,-1.5 -0.05,-0.22 -0.23,-0.39 -0.3,-0.6 -0.03,-0.1 0,-0.2 0,-0.3 0,-0.2 0.06,-0.41 0,-0.6 -0.04,-0.13 -0.26,-0.17 -0.3,-0.3 -0.18,-0.54 0.18,-1.26 0,-1.8 -0.04,-0.13 -0.24,-0.17 -0.3,-0.3 -0.12,-0.24 0.12,-0.66 0,-0.9 -0.32,-0.63 -0.15,-0.91 -0.3,-1.2 -0.06,-0.13 -0.26,-0.17 -0.3,-0.3 -0.1,-0.28 0.1,-0.61 0,-0.9 -0.15,-0.44 -0.47,-0.82 -0.6,-1.2 -0.06,-0.19 0.06,-0.41 0,-0.6 -0.04,-0.13 -0.26,-0.17 -0.3,-0.3 -0.14,-0.43 -0.09,-1.07 -0.3,-1.5 -0.06,-0.13 -0.26,-0.17 -0.3,-0.3 -0.06,-0.19 0.05,-0.41 0,-0.6 -0.12,-0.5 -0.46,-0.79 -0.6,-1.2 -0.06,-0.19 0.09,-0.42 0,-0.6 -0.04,-0.09 -0.26,0.09 -0.3,0 -0.12,-0.24 0.12,-0.66 0,-0.9 -0.29,-0.57 -0.59,-1.18 -0.9,-1.8 -0.13,-0.26 -0.44,-2.08 -0.6,-2.4 -0.67,-1.34 -1.3,-2.69 -1.8,-4.2 -0.06,-0.19 0.06,-0.41 0,-0.6 -0.42,-1.27 -0.91,-2.42 -1.5,-3.6 -0.12,-0.24 0.12,-0.66 0,-0.9 -0.39,-0.78 -0.51,-1.61 -0.9,-2.4 -0.2,-0.39 0.1,-0.99 -0.3,-1.8 -0.16,-0.32 0.16,-0.88 0,-1.2 -0.4,-0.81 -0.1,-1.41 -0.3,-1.8 -0.25,-0.5 -0.3,-0.58 -0.3,-1.2 0,-0.53 -0.79,0.19 -0.3,-0.3 0.07,-0.07 0.23,0.07 0.3,0 0.19,-0.19 -0.12,-0.95 0,-1.2 0.31,-0.61 0.59,-1.18 0.9,-1.8 0.09,-0.18 -0.14,-0.76 0,-0.9 0.07,-0.07 0.23,0.07 0.3,0 0.34,-0.34 0.38,-1.35 0.6,-1.8 0.22,-0.45 0.74,-1.02 0.9,-1.5 0.06,-0.19 -0.06,-0.41 0,-0.6 0.13,-0.38 0.47,-0.81 0.6,-1.2 0.15,-0.44 0.15,-1.04 0.3,-1.5 0.11,-0.34 0.48,-0.56 0.6,-0.9 0.18,-0.54 0.11,-1.24 0.3,-1.8 0.21,-0.64 1.16,-3.26 1.5,-3.6 0.12,-0.12 0.38,-0.16 0.6,-0.6 0.09,-0.18 -0.09,-0.42 0,-0.6 0.15,-0.3 0.5,-0.59 0.6,-0.9 0.06,-0.19 -0.06,-0.41 0,-0.6 0.1,-0.3 0.5,-0.6 0.6,-0.9 0.06,-0.19 -0.06,-0.41 0,-0.6 0.1,-0.31 0.45,-0.6 0.6,-0.9 0.52,-1.03 1.01,-2.02 1.5,-3 0.13,-0.25 0.51,-0.33 0.6,-0.6 0.21,-0.63 0.19,-1.18 0.6,-1.8 0.4,-0.6 0.98,-1.14 1.2,-1.8 0.06,-0.19 -0.06,-0.41 0,-0.6 0.09,-0.27 0.44,-0.36 0.6,-0.6 0.45,-0.67 0.55,-1.41 0.9,-2.1 0.35,-0.71 0.97,-1.4 1.2,-2.1 0.06,-0.19 -0.05,-0.41 0,-0.6 0.16,-0.63 0.69,-0.88 0.9,-1.5 0.34,-1.02 0.72,-2.04 1.2,-3 0.19,-0.38 0.77,-0.8 0.9,-1.2 0.06,-0.19 -0.06,-0.41 0,-0.6 0.16,-0.48 0.74,-1.03 0.9,-1.5 0.06,-0.19 -0.06,-0.41 0,-0.6 0.19,-0.56 0.64,-1.27 0.9,-1.8 0.36,-0.73 0.83,-1.37 1.2,-2.1 0.13,-0.25 0.12,-1.02 0.3,-1.2 0.71,-0.71 -0.16,1.67 0.6,-0.6 0.06,-0.19 -0.09,-0.42 0,-0.6 0.17,-0.35 0.42,-0.55 0.6,-0.9 0.09,-0.18 -0.14,-0.46 0,-0.6 0.07,-0.07 0.23,0.07 0.3,0 0.14,-0.14 -0.09,-0.42 0,-0.6 0.22,-0.44 0.48,-0.48 0.6,-0.6 0.15,-0.15 -0.15,-0.75 0,-0.9 0.4,-0.4 0.3,0.5 0.3,-0.3 3.31,-0.08 0.23,-1.66 0.6,-2.4 0.23,-0.46 0.68,-0.75 0.9,-1.2 0.09,-0.18 -0.14,-0.46 0,-0.6 0.07,-0.07 0.23,0.07 0.3,0 0.14,-0.14 -0.09,-0.42 0,-0.6 0.17,-0.35 0.42,-0.55 0.6,-0.9 0.27,-0.54 0.34,-1.29 0.6,-1.8 0.18,-0.36 0.72,-0.54 0.9,-0.9 0.16,-0.32 -0.16,-0.28 0,-0.6 0.1,-0.2 0.5,-0.1 0.6,-0.3 0.09,-0.18 -0.09,-0.42 0,-0.6 0.04,-0.09 0.26,0.09 0.3,0 0.09,-0.18 -0.06,-0.41 0,-0.6 0.1,-0.31 0.45,-0.6 0.6,-0.9 0.15,-0.31 0.15,-0.89 0.3,-1.2 0.43,-0.87 1.2,-1.81 1.5,-2.7 0.06,-0.19 -0.06,-0.41 0,-0.6 0.09,-0.27 0.47,-0.35 0.6,-0.6 0.53,-1.05 1.22,-2.14 1.8,-3.3 0.13,-0.27 -0.1,-0.61 0,-0.9 0.09,-0.27 0.51,-0.33 0.6,-0.6 0.17,-0.52 0.12,-0.97 0.3,-1.5 0.09,-0.27 0.47,-0.35 0.6,-0.6 0.09,-0.18 -0.09,-0.42 0,-0.6 0.31,-0.61 0.59,-1.18 0.9,-1.8 0.11,-0.22 0.54,-2.34 0.6,-2.4 0.07,-0.07 0.23,0.07 0.3,0 0.27,-0.27 0.42,-1.14 0.6,-1.5 0.2,-0.4 1.39,-1.77 1.5,-2.1 0.06,-0.19 -0.09,-0.42 0,-0.6 0.04,-0.09 0.23,0.07 0.3,0 0.22,-0.22 0.12,-0.64 0.3,-0.9 0.33,-0.49 1.28,-1.66 1.5,-2.1 0.44,-0.88 0.76,-1.82 1.2,-2.7 0.32,-0.64 0.28,0.04 0.6,-0.6 0.16,-0.32 0.48,-0.85 0.6,-1.2 0.06,-0.19 -0.06,-0.41 0,-0.6 0.22,-0.65 0.89,-1.18 1.2,-1.8 0.63,-1.25 1.14,-2.58 1.8,-3.9 0.15,-0.31 0.15,-0.89 0.3,-1.2 0.06,-0.13 0.26,-0.17 0.3,-0.3 0.06,-0.19 -0.06,-0.41 0,-0.6 0.09,-0.27 0.47,-0.35 0.6,-0.6 0.13,-0.27 -0.1,-0.61 0,-0.9 0.13,-0.38 0.47,-0.81 0.6,-1.2 0.06,-0.19 -0.09,-0.42 0,-0.6 0.04,-0.09 0.26,0.09 0.3,0 0.12,-0.24 -0.12,-0.66 0,-0.9 0.15,-0.3 0.5,-0.59 0.6,-0.9 0.1,-0.28 -0.13,-0.63 0,-0.9 0.47,-0.95 0.84,-1.92 1.2,-3 0.06,-0.19 -0.09,-0.42 0,-0.6 0.15,-0.3 0.5,-0.59 0.6,-0.9 0.1,-0.28 -0.13,-0.63 0,-0.9 0.24,-0.49 0.64,-0.99 0.9,-1.5 0.13,-0.27 -0.1,-0.61 0,-0.9 0.17,-0.53 0.65,-1 0.9,-1.5 0.09,-0.18 -0.09,-0.42 0,-0.6 0.15,-0.3 0.5,-0.59 0.6,-0.9 0.1,-0.28 -0.17,-0.65 0,-0.9 0.16,-0.23 0.44,-0.36 0.6,-0.6 0.25,-0.37 0.17,-1.09 0.3,-1.5 0.1,-0.31 0.45,-0.6 0.6,-0.9 0.15,-0.31 0.15,-0.89 0.3,-1.2 0.24,-0.49 0.64,-0.99 0.9,-1.5 0.18,-0.37 0.12,-0.83 0.3,-1.2 0.29,-0.57 0.61,-1.22 0.9,-1.8 0.09,-0.18 -0.09,-0.42 0,-0.6 0.15,-0.3 0.5,-0.59 0.6,-0.9 0.17,-0.52 0.12,-0.97 0.3,-1.5 0.06,-0.18 0.54,-0.72 0.6,-0.9 0.15,-0.46 0.15,-1.05 0.3,-1.5 0.04,-0.13 0.26,-0.17 0.3,-0.3 0.18,-0.53 0.19,-0.94 0.3,-1.5 0.16,-0.81 0.67,-1.42 0.9,-2.1 0.06,-0.19 -0.06,-0.41 0,-0.6 0.04,-0.13 0.2,-0.2 0.3,-0.3 0.1,-0.2 0.23,-0.39 0.3,-0.6 0.45,-1.34 0.6,-2.71 1.2,-3.9 0.14,-0.29 -0.1,-0.91 0,-1.2 0.06,-0.18 0.54,-0.72 0.6,-0.9 0.19,-0.56 0.12,-1.26 0.3,-1.8 0.04,-0.13 0.24,-0.17 0.3,-0.3 0.09,-0.18 -0.09,-0.42 0,-0.6 0.34,-0.67 0.64,-1.32 0.9,-2.1 0.06,-0.19 -0.06,-0.41 0,-0.6 0.26,-0.78 0.56,-1.43 0.9,-2.1 0.09,-0.18 0.3,-2.1 0.3,-2.1 0.07,-0.07 0.23,0.07 0.3,0 0.14,-0.14 -0.09,-0.72 0,-0.9 0.47,-0.95 0.43,-2.05 0.9,-3 0.36,-0.72 -0.36,-1.98 0,-2.7 0.06,-0.13 0.26,-0.17 0.3,-0.3 0.26,-0.77 -0.36,-1.98 0,-2.7 0.66,-1.32 0.26,-3.21 0.9,-4.49 0.35,-0.7 -0.53,-2.76 0,-3.3 0.28,-0.28 0.3,0.02 0.3,-0.6 0,-0.28 0.18,-1.62 0,-1.8 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.25,-0.25 0.08,-0.82 -0.3,-1.2 -0.23,-0.52 -0.25,-0.98 -0.47,-1.43 -0.1,-0.2 -0.04,-0.76 -0.11,-0.95 -0.02,-0.05 -0.08,-0.06 -0.11,-0.11 -0.07,-0.14 -0.04,-0.4 -0.11,-0.53 -0.02,-0.04 -0.09,-0.06 -0.11,-0.11 -0.03,-0.1 0.05,-0.22 0,-0.32 -0.06,-0.12 -0.15,-0.19 -0.21,-0.32 -0.08,-0.16 -0.02,-0.47 -0.11,-0.64 -0.1,-0.21 -0.36,-0.65 -0.42,-0.85 -0.02,-0.07 0.02,-0.14 0,-0.21 -0.05,-0.15 -0.16,-0.06 -0.21,-0.21 -0.06,-0.18 -0.04,-0.34 -0.11,-0.53 -0.09,-0.26 -0.33,-0.47 -0.42,-0.74 -0.21,-0.64 -0.46,-1.24 -0.74,-1.8 -0.07,-0.14 -0.14,-0.71 -0.21,-0.85 -0.02,-0.04 -0.09,-0.06 -0.11,-0.11 -0.03,-0.1 0.05,-0.22 0,-0.32 -0.3,-0.59 -0.31,-1.36 -0.53,-2.01 -0.05,-0.16 0.05,-0.37 0,-0.53 -0.02,-0.05 -0.09,-0.06 -0.11,-0.11 -0.05,-0.16 0.05,-0.37 0,-0.53 -0.02,-0.05 -0.09,-0.06 -0.11,-0.11 -0.03,-0.1 -0.06,-2 0,-2.12 0.07,-0.15 0.14,-0.06 0.21,-0.21 0.07,-0.14 0.14,-0.36 0.21,-0.42 0.1,-0.1 0.45,-0.03 0.53,-0.11 0.03,-0.03 -0.03,-0.08 0,-0.11 0.04,-0.04 1.33,0.08 1.38,0.11 0.24,0.12 0.47,0.23 0.74,0.32 0.06,0.02 0.28,-0.04 0.32,0 0.05,0.05 0.05,0.16 0.11,0.21 0.05,0.05 0.15,-0.03 0.21,0 0.04,0.02 0.17,0.19 0.21,0.21 0.19,0.09 0.44,0.25 0.64,0.32 0.07,0.02 0.15,-0.03 0.21,0 0.03,0.02 -0.03,0.09 0,0.11 0.06,0.03 0.14,-0.02 0.21,0 0.05,0.02 0.06,0.08 0.11,0.11 0.27,0.14 0.68,0.18 0.95,0.32 0.12,0.06 0.19,0.15 0.32,0.21 0.06,0.03 0.15,-0.03 0.21,0 0.46,0.23 0.92,0.41 1.38,0.64 0.06,0.03 0.15,-0.03 0.21,0 0.12,0.06 0.19,0.15 0.32,0.21 0.06,0.03 0.16,-0.05 0.21,0 0.03,0.03 -0.03,0.08 0,0.11 0.06,0.06 0.55,0.06 0.64,0.11 0.21,0.11 0.41,0.24 0.64,0.32 0.1,0.03 0.32,-0.05 0.42,0 0.4,0.2 0.94,-0.01 1.17,0.11 0.41,0.2 1.39,0.2 1.8,0 0.15,-0.08 0.5,0.07 0.85,-0.11 0.25,-0.13 0.69,0.09 0.95,0 0.05,-0.02 0.06,-0.09 0.11,-0.11 0.1,-0.03 0.32,0.05 0.42,0 0.12,-0.06 0.19,-0.15 0.32,-0.21 0.11,-0.06 0.31,0.06 0.42,0 0.25,-0.12 0.49,-0.2 0.74,-0.32 0.06,-0.03 0.27,0.05 0.32,0 0.03,-0.03 -0.03,-0.08 0,-0.11 0.01,-0.01 1.16,-0.31 1.17,-0.32 0.03,-0.03 -0.03,-0.08 0,-0.11 0.05,-0.05 0.27,0.05 0.32,0 0.07,-0.07 0.07,-0.21 0.32,-0.21 -0.37,1.28 0.64,-0.42 0.85,-0.21 0.03,0.03 -0.03,0.08 0,0.11 0.05,0.05 0.16,0.05 0.21,0.11 0.05,0.05 -0.05,0.16 0,0.21 0.03,0.03 0.08,-0.03 0.11,0 0.01,0.01 0,1.15 0,1.27 0,0.07 -0.03,0.26 0,0.32 0.2,0.4 0.22,0.87 0.42,1.27 0.03,0.06 -0.05,0.27 0,0.32 0.03,0.03 0.08,-0.03 0.11,0 0.05,0.05 0.04,0.35 0.11,0.42 0.03,0.03 0.08,-0.03 0.11,0 0.05,0.05 -0.03,0.15 0,0.21 0.18,0.36 0.35,0.7 0.53,1.06 0.03,0.06 -0.03,0.15 0,0.21 0.11,0.22 0.21,0.42 0.32,0.64 0.03,0.06 -0.05,0.16 0,0.21 0.03,0.03 0.08,-0.03 0.11,0 0.04,0.04 0.07,0.28 0.11,0.32 0.03,0.03 0.08,-0.03 0.11,0 0.05,0.05 -0.05,0.16 0,0.21 0.03,0.03 0.08,-0.03 0.11,0 0.04,0.04 0.24,0.56 0.32,0.64 0.03,0.03 0.08,-0.03 0.11,0 0.07,0.07 -0.07,0.14 0,0.21 0.05,0.05 0.16,0.05 0.21,0.11 0.05,0.05 -0.05,0.16 0,0.21 0.03,0.03 0.08,-0.03 0.11,0 0.05,0.05 -0.05,0.16 0,0.21 0.03,0.03 0.08,-0.03 0.11,0 0.04,0.04 0.18,0.36 0.21,0.42 0.06,0.13 0.25,0.19 0.32,0.32 0.09,0.19 0.33,0.33 0.42,0.53 0.02,0.03 -0.03,0.08 0,0.11 0.03,0.03 0.08,-0.03 0.11,0 0.03,0.03 -0.02,0.07 0,0.11 0.12,0.24 0.41,0.41 0.53,0.64 0.07,0.15 0.25,0.14 0.32,0.21 0.03,0.03 -0.02,0.07 0,0.11 0.11,0.21 0.42,0.32 0.53,0.53 0.09,0.17 0.23,0.36 0.32,0.53 0.01,0.02 0.41,0.51 0.42,0.53 0.03,0.03 0.09,-0.03 0.11,0 0.03,0.06 -0.02,0.14 0,0.21 0.1,0.3 0.39,0.35 0.53,0.64 0.03,0.06 -0.05,0.16 0,0.21 0.03,0.03 0.08,-0.03 0.11,0 0.06,0.06 0.45,0.9 0.53,1.06 0.03,0.06 -0.03,0.15 0,0.21 0.05,0.1 0.17,0.21 0.21,0.32 0.03,0.1 -0.05,0.22 0,0.32 0.09,0.19 0.22,0.34 0.32,0.53 0.06,0.11 -0.06,0.31 0,0.42 0.15,0.3 0.06,0.66 0.21,0.95 0.12,0.23 -0.08,0.6 0,0.85 0.03,0.07 0.08,0.14 0.11,0.21 0.06,0.18 -0.09,0.46 0,0.64 0.02,0.04 0.09,0.06 0.11,0.11 0.13,0.39 -0.18,1.01 0,1.38 0.02,0.04 0.08,0.06 0.11,0.11 0.08,0.17 0,1.13 0,1.38 0,1.06 0,2.12 0,3.18 0,0.51 -0.05,1.01 0.11,1.48 0.13,0.38 0,1.73 0,2.23 0,1.66 0,3.32 0,4.98 0,1.03 0.14,2.2 -0.11,3.18 -0.07,0.27 0.07,0.58 0,0.85 -0.28,1.11 -0.28,2.2 -0.64,3.28 -0.03,0.1 0.03,0.21 0,0.32 -0.04,0.15 -0.17,0.27 -0.21,0.42 -0.11,0.43 -0.18,0.85 -0.32,1.27 -0.08,0.23 0.01,0.29 -0.11,0.53 -0.06,0.11 0.06,0.31 0,0.42 -0.02,0.04 -0.09,0.06 -0.11,0.11 -0.03,0.1 0.05,0.32 0,0.42 -0.13,0.25 -0.24,0.65 -0.32,0.95 -0.04,0.17 0.04,0.36 0,0.53 -0.1,0.38 -0.22,0.68 -0.32,1.06 -0.04,0.17 0.04,0.36 0,0.53 -0.08,0.33 -0.26,0.6 -0.32,0.95 -0.17,1.05 -0.42,2.1 -0.74,3.07 -0.03,0.1 0.03,0.21 0,0.32 -0.07,0.26 -0.25,0.48 -0.32,0.74 -0.03,0.14 0.03,0.29 0,0.42 -0.04,0.15 -0.16,0.27 -0.21,0.42 -0.09,0.26 -0.02,0.59 -0.11,0.85 -0.04,0.14 -0.17,0.29 -0.21,0.42 -0.05,0.16 0.05,0.37 0,0.53 -0.16,0.47 -0.17,0.93 -0.32,1.38 -0.1,0.29 0.1,0.67 0,0.95 -0.02,0.05 -0.08,0.06 -0.11,0.11 -0.08,0.17 0.06,0.46 0,0.64 -0.02,0.05 -0.09,0.06 -0.11,0.11 -0.04,0.13 0.04,0.3 0,0.42 -0.22,0.65 -0.25,1.33 -0.42,2.01 -0.02,0.09 0.05,0.33 0,0.42 -0.02,0.04 -0.09,0.06 -0.11,0.11 -0.03,0.1 0.07,0.24 0,0.32 -0.03,0.03 -0.09,-0.03 -0.11,0 -0.06,0.13 0.02,0.27 -0.11,0.53 -0.05,0.1 0.03,0.22 0,0.32 -0.04,0.13 -0.16,0.27 -0.21,0.42 -0.07,0.21 -0.04,0.43 -0.11,0.64 -0.02,0.05 -0.09,0.06 -0.11,0.11 -0.02,0.07 0.02,0.14 0,0.21 -0.02,0.05 -0.09,0.06 -0.11,0.11 -0.09,0.26 -0.09,0.39 -0.21,0.64 -0.04,0.09 0.04,0.23 0,0.32 -0.12,0.25 -0.2,0.49 -0.32,0.74 -0.06,0.11 0.06,0.31 0,0.42 -0.13,0.26 -0.11,-0.04 -0.11,0.21 0,0.15 -0.19,0.87 -0.11,0.95 0.03,0.03 0.08,-0.03 0.11,0 0.11,0.11 -0.15,0.21 0.11,0.21 -0.07,-0.21 -0.15,-0.42 -0.21,-0.64 -0.05,-0.19 -0.06,-1.41 0,-1.59 0.03,-0.07 0.08,-0.14 0.11,-0.21 0.03,-0.09 -0.04,-0.23 0,-0.32 0.06,-0.12 0.15,-0.19 0.21,-0.32 0.05,-0.11 0.05,-0.32 0.11,-0.42 0.02,-0.04 0.09,-0.06 0.11,-0.11 0.02,-0.07 -0.02,-0.14 0,-0.21 0.06,-0.17 0.28,-0.33 0.32,-0.53 0.02,-0.1 -0.03,-0.21 0,-0.32 0.03,-0.11 0.23,-0.68 0.32,-0.85 0.18,-0.37 -0,0.21 0.21,-0.21 0.06,-0.11 -0.04,-0.3 0,-0.42 0.46,-0.93 -0.18,0.45 0.11,-0.42 0.02,-0.05 0.09,-0.06 0.11,-0.11 0.03,-0.1 -0.05,-0.32 0,-0.42 0.02,-0.04 0.09,-0.06 0.11,-0.11 0.06,-0.19 -0.06,-0.45 0,-0.64 0.1,-0.29 0.09,-0.6 0.21,-0.85 0.1,-0.2 -0.07,-0.53 0,-0.74 0.1,-0.3 0.02,-0.59 0.11,-0.85 0.05,-0.16 0.17,-0.29 0.21,-0.42 0.1,-0.31 0.11,-0.64 0.21,-0.95 0.01,-0.03 0,-0.07 0,-0.11 0,-0.07 -0.02,-0.14 0,-0.21 0.02,-0.05 0.09,-0.06 0.11,-0.11 0.06,-0.17 -0.04,-0.36 0,-0.53 0.01,-0.05 0.09,-0.06 0.11,-0.11 0.05,-0.16 -0.05,-0.37 0,-0.53 0.1,-0.29 0.16,-0.53 0.21,-0.85 0.02,-0.14 -0.04,-0.29 0,-0.42 0.02,-0.05 0.09,-0.06 0.11,-0.11 0.04,-0.13 -0.03,-0.29 0,-0.42 0.02,-0.08 0.09,-0.14 0.11,-0.21 0.03,-0.14 -0.04,-0.29 0,-0.42 0.02,-0.05 0.09,-0.06 0.11,-0.11 0.02,-0.07 -0.02,-0.14 0,-0.21 0.02,-0.08 0.07,-0.14 0.11,-0.21 0.04,-0.11 0.08,-0.21 0.11,-0.32 0.01,-0.03 0,-0.07 0,-0.11 0,-0.07 -0.02,-0.14 0,-0.21 0.07,-0.29 0.24,-0.56 0.32,-0.85 0.03,-0.14 -0.03,-0.29 0,-0.42 0.04,-0.15 0.16,-0.27 0.21,-0.42 0.03,-0.1 -0.03,-0.21 0,-0.32 0.14,-0.55 0.5,-1.04 0.64,-1.59 0.1,-0.42 0.12,-0.88 0.32,-1.27 0.15,-0.3 0.23,-0.72 0.32,-1.06 0.05,-0.21 -0.11,0 0,-0.32 0.01,-0.02 0.27,-0.42 0.21,-0.42 -0.04,0 -0.04,0.11 0,0.11 0.04,0 0,-0.07 0,-0.11 0,-0.14 0,-0.28 0,-0.42 0,-0.27 -0.09,-0.7 0,-0.95 0.02,-0.05 0.08,-0.06 0.11,-0.11 0.07,-0.14 -0.07,-0.39 0,-0.53 0.13,-0.26 0.11,0.04 0.11,-0.21 0,-0.23 0.14,-1.12 0.21,-1.27 0.02,-0.04 0.09,-0.06 0.11,-0.11 0.03,-0.1 -0.05,-0.32 0,-0.42 0.15,-0.31 0.2,-0.6 0.32,-0.95 0.04,-0.13 -0.04,-0.3 0,-0.42 0.18,-0.53 0.14,-1.05 0.32,-1.59 0.1,-0.3 -0.06,-0.52 0.11,-0.85 0.15,-0.31 -0.11,-2.62 -0.11,-3.07 0,-0.6 0,-1.2 0,-1.8 0,-0.21 0,-0.42 0,-0.64 0,-0.04 0.04,-0.11 0,-0.11 -0.04,0 0.03,0.08 0,0.11 -0.03,0.03 -0.08,0.03 -0.11,0 -0.07,-0.07 0,-0.21 0,-0.32 0,-0.25 0.03,-0.4 0.11,-0.64 0.11,-0.32 0,-1.6 0,-2.01 0,-0.44 0.11,-2.33 0,-2.65 -0.02,-0.05 -0.09,-0.06 -0.11,-0.11 -0.05,-0.16 0,-0.46 0,-0.64 0,-0.59 0.12,-3.12 0,-3.5 -0.02,-0.05 -0.09,-0.06 -0.11,-0.11 -0.16,-0.48 0.16,-1.11 0,-1.59 -0.02,-0.05 -0.09,-0.06 -0.11,-0.11 -0.12,-0.35 0.12,-0.82 0,-1.17 -0.1,-0.29 -0.12,-0.56 -0.21,-0.85 -0.04,-0.11 -0.07,-1.13 -0.11,-1.17 -0.03,-0.03 -0.08,0.03 -0.11,0 -0.05,-0.05 0.03,-0.15 0,-0.21 -0.17,-0.34 -0.25,-0.71 -0.42,-1.06 -0.03,-0.06 0.05,-0.27 0,-0.32 -0.03,-0.03 -0.09,0.03 -0.11,0 -0.06,-0.13 -0.15,-0.72 -0.21,-0.85 -0.09,-0.19 -0.22,-0.34 -0.32,-0.53 -0.03,-0.06 0.05,-0.16 0,-0.21 -0.05,-0.05 -0.16,-0.05 -0.21,-0.11 -0.05,-0.05 0.05,-0.16 0,-0.21 -0.03,-0.03 -0.08,0.03 -0.11,0 -0.03,-0.03 0.03,-0.08 0,-0.11 -0.01,-0.01 -0.31,-0.21 -0.32,-0.21 -0.03,-0.03 0.03,-0.08 0,-0.11 -0.03,-0.03 -0.08,0.03 -0.11,0 -0.09,-0.09 -0.06,-0.35 -0.21,-0.42 -0.13,-0.07 -0.34,-0.15 -0.42,-0.32 -0.02,-0.03 0,-0.07 0,-0.11 -0.04,-0.07 -0.06,-0.15 -0.11,-0.21 -0.19,-0.28 -0.74,-0.53 -0.85,-0.85 -0.02,-0.07 0.02,-0.14 0,-0.21 -0.05,-0.16 -0.33,-0.28 -0.42,-0.42 -0.35,-0.53 -0.7,-1.06 -1.06,-1.59 -0.08,-0.12 -0.26,-0.19 -0.32,-0.32 -0.03,-0.06 -0.29,-0.51 -0.32,-0.53 -0.03,-0.03 -0.08,0.03 -0.11,0 -0.04,-0.04 -0.38,-0.66 -0.42,-0.74 -0.11,-0.22 -0.39,-0.43 -0.53,-0.64 -0.12,-0.17 -0.12,-0.34 -0.21,-0.53 -0.09,-0.19 -0.25,-0.33 -0.32,-0.53 -0.05,-0.14 -0.04,-0.4 -0.11,-0.53 -0.35,-0.69 -0.46,-1.39 -0.74,-2.23 -0.03,-0.09 0.04,-0.23 0,-0.32 -0.15,-0.3 -0.06,-0.66 -0.21,-0.95 -0.14,-0.28 0.11,-0.54 0.11,-0.74 0.28,-0.12 -0.17,-0.46 -0.07,-0.66 0.05,-0.1 0.33,-0.63 0.38,-0.67 0.02,-0.02 0.06,0.02 0.07,0 0.04,-0.04 0.11,-0.26 0.15,-0.3 0.02,-0.02 0.06,0.02 0.07,0 0.05,-0.05 0.05,-0.17 0.15,-0.23 0.02,-0.01 0.06,0.02 0.07,0 0.04,-0.04 0.11,-0.26 0.15,-0.3 0.02,-0.02 0.05,0.01 0.07,0 0.23,-0.11 0.38,-0.41 0.6,-0.52 0.29,-0.14 1.66,-1.78 1.87,-2.1 0.06,-0.09 0.08,-0.31 0.15,-0.38 0.02,-0.02 0.06,0.02 0.07,0 0.04,-0.04 0.26,-0.52 0.3,-0.6 0.06,-0.12 0.34,-0.43 0.38,-0.52 0.02,-0.05 -0.02,-0.1 0,-0.15 0.04,-0.13 0.26,-0.24 0.3,-0.38 0.04,-0.13 0.03,-0.24 0.07,-0.38 0.01,-0.03 0.05,-0.05 0.07,-0.07 0.03,-0.05 0.06,-0.1 0.07,-0.15 0.1,-0.29 0.09,-0.64 0.23,-0.9 0.04,-0.08 -0.03,-0.21 0,-0.3 0.1,-0.3 0.12,-0.6 0.23,-0.9 0.05,-0.16 -0.04,-0.36 0,-0.52 0.01,-0.05 0.06,-0.1 0.07,-0.15 0.06,-0.18 -0.01,-0.43 0.07,-0.6 0.09,-0.17 0.09,-0.28 0.15,-0.45 0.04,-0.12 0.18,-0.26 0.23,-0.38 0.04,-0.11 0.02,-0.27 0.07,-0.38 0.06,-0.12 0.18,-0.24 0.23,-0.38 0.02,-0.05 -0.02,-0.1 0,-0.15 0.06,-0.17 0.34,-0.65 0.45,-0.82 0.04,-0.06 0.12,-0.09 0.15,-0.15 0.05,-0.11 0.1,-0.27 0.15,-0.38 0.07,-0.15 0.28,-0.24 0.38,-0.38 0.12,-0.18 0.26,-0.4 0.45,-0.52 0.05,-0.03 0.11,-0.04 0.15,-0.07 0.04,-0.04 0.04,-0.11 0.07,-0.15 0.02,-0.02 0.05,0.01 0.07,0 0.04,-0.02 0.28,-0.2 0.3,-0.23 0.02,-0.02 -0.02,-0.06 0,-0.07 0.03,-0.03 0.46,-0.27 0.52,-0.3 0.09,-0.04 0.14,-0.18 0.23,-0.23 0.04,-0.02 0.36,-0.21 0.38,-0.23 0.04,-0.04 0.04,-0.11 0.07,-0.15 0.02,-0.02 0.32,-0.19 0.38,-0.23 0.17,-0.11 0.17,-0.25 0.3,-0.38 0.01,-0.01 0.41,-0.27 0.45,-0.3 0.41,-0.27 0.77,-0.77 1.12,-1.12 0.31,-0.31 0.71,-0.62 0.97,-0.97 0.16,-0.22 -0.04,-0.1 0.23,-0.3 0.34,-0.26 -0.02,0.17 0.15,0 0.02,-0.02 -0.02,-0.06 0,-0.07 0.02,-0.02 0.06,0.02 0.07,0 0.03,-0.03 0.13,-0.26 0.15,-0.3 0.04,-0.09 0.18,-0.14 0.23,-0.23 0.12,-0.25 0.25,-0.5 0.38,-0.75 0.04,-0.08 0.04,-0.22 0.07,-0.3 0.03,-0.06 0.12,-0.09 0.15,-0.15 0.05,-0.11 0.04,-0.27 0.07,-0.38 0.09,-0.26 0.35,-0.6 0.45,-0.9 0.1,-0.29 0.17,-0.64 0.3,-0.9 0.08,-0.16 -0.06,-0.43 0,-0.6 0.01,-0.03 0.06,-0.04 0.07,-0.07 0.08,-0.23 0,-1.4 0,-1.72 0,-0.89 0.13,-2.11 -0.07,-2.92 -0.03,-0.11 -0.03,-0.66 -0.07,-0.75 -0.12,-0.24 -0.14,-0.49 -0.23,-0.75 -0.03,-0.09 -0.12,-0.14 -0.15,-0.23 -0.12,-0.35 -0.21,-0.68 -0.3,-1.05 -0.04,-0.16 -0.25,-0.45 -0.3,-0.6 -0.04,-0.13 -0.03,-0.24 -0.07,-0.38 -0.01,-0.03 -0.05,-0.05 -0.07,-0.07 -0.03,-0.05 -0.06,-0.1 -0.07,-0.15 -0.07,-0.3 -0.23,-0.6 -0.3,-0.9 -0.03,-0.13 -0.16,-0.25 -0.23,-0.38 -0.15,-0.3 -0.26,-0.61 -0.45,-0.9 -0.17,-0.25 -0.4,-0.5 -0.52,-0.75 -0.06,-0.12 -0.24,-0.18 -0.3,-0.3 -0.08,-0.16 -0.55,-0.7 -0.67,-0.82 -0.04,-0.04 -0.11,-0.04 -0.15,-0.07 -0.04,-0.04 -0.04,-0.1 -0.07,-0.15 -0.12,-0.17 -0.33,-0.28 -0.45,-0.45 -0.03,-0.05 -0.04,-0.11 -0.07,-0.15 -0.18,-0.18 -0.11,0.02 -0.23,-0.15 -0.07,-0.1 -0.14,-0.29 -0.23,-0.38 -0.06,-0.06 -0.16,-0.09 -0.23,-0.15 -0.29,-0.29 0.21,0.23 -0.15,-0.23 -0.3,-0.38 -0.71,-0.64 -1.05,-0.97 -0.04,-0.04 -0.04,-0.11 -0.07,-0.15 -0.04,-0.04 -0.11,-0.04 -0.15,-0.07 -0.32,-0.27 -0.56,-0.65 -0.9,-0.9 -0.07,-0.05 -0.16,-0.09 -0.23,-0.15 -0.09,-0.09 -0.04,-0.17 -0.15,-0.23 -0.09,-0.04 -0.16,-0.05 -0.23,-0.15 -0.14,-0.21 -0.55,-0.76 -0.6,-0.97 -0.01,-0.05 0.02,-0.1 0,-0.15 -0.03,-0.09 -0.12,-0.14 -0.15,-0.23 -0.07,-0.21 -0,-0.46 -0.07,-0.67 -0.06,-0.18 -0.07,-0.26 -0.07,-0.45 -2.84,-2.1 -1.16,-4.49 -2.25,-6.67 -0.44,-0.87 0.31,-2.36 0,-3.3 -0.04,-0.13 -0.24,-0.17 -0.3,-0.3 -0.09,-0.18 0.05,-0.41 0,-0.6 -0.08,-0.31 -0.24,-0.59 -0.3,-0.9 -0.07,-0.36 0.17,-1.16 0,-1.5 -0.36,-0.73 -0.13,-1.16 -0.3,-1.5 -0.71,-1.41 -0.48,-3.36 -1.2,-4.79 -0.2,-0.4 0.2,-1.1 0,-1.5 -0.47,-0.94 -0.42,-2.05 -0.9,-3 -0.13,-0.27 0.1,-0.61 0,-0.9 -0.04,-0.13 -0.24,-0.17 -0.3,-0.3 -0.09,-0.18 0.09,-0.42 0,-0.6 -0.27,-0.54 -0.71,-1.23 -0.9,-1.8 -0.17,-0.52 -0.12,-0.97 -0.3,-1.5 -0.09,-0.27 -0.44,-0.36 -0.6,-0.6 -0.32,-0.48 -0.37,-1.04 -0.6,-1.5 -0.48,-0.96 -0.12,0.36 -0.6,-0.6 -0.2,-0.39 -0.15,-0.77 -0.3,-1.2 -0.09,-0.27 -0.47,-0.35 -0.6,-0.6 -0.21,-0.42 -0.38,-1.07 -0.6,-1.5 -0.56,-1.11 -1.54,-1.89 -2.1,-3 -0.09,-0.18 -0.17,-0.77 -0.3,-0.9 -0.16,-0.16 -0.44,-0.14 -0.6,-0.3 -0.21,-0.21 -0.75,-1.49 -0.9,-1.8 -0.41,-0.81 -1.39,-1.28 -1.8,-2.1 -0.09,-0.18 -0.17,-0.77 -0.3,-0.9 -0.62,-0.62 0.02,0.95 -0.6,-0.3 -0.18,-0.37 -0.41,-0.83 -0.6,-1.2 -0.62,-1.25 0.02,0.32 -0.6,-0.3 -0.16,-0.16 -0.74,-1.34 -0.9,-1.5 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.07,-0.07 0.07,-0.23 0,-0.3 -0.07,-0.07 -0.23,0.07 -0.3,0 -0.07,-0.07 0.07,-0.23 0,-0.3 -0.23,-0.23 -0.6,-0.13 -0.6,-0.6 0.52,-3.57 -0.12,-2.05 -0.66,-3.68 -0.32,-0.95 0.45,-2.5 0,-3.39 -0.09,-0.18 -0.33,-0.24 -0.42,-0.42 -0.28,-0.56 0.28,-1.55 0,-2.12 -0.51,-1.02 -0.85,-3.4 -0.85,-4.66 0,-2.44 0.15,-4.89 -0.42,-7.2 -0.43,-1.73 0.36,-3.51 -0.42,-5.08 -0.45,-0.9 0.45,-2.49 0,-3.39 -0.57,-1.14 -0.15,-1.99 -0.42,-2.54 -0.49,-0.98 -0.78,-1.98 -1.27,-2.97 -0.17,-0.34 0.17,-0.93 0,-1.27 -0.09,-0.18 -0.33,-0.24 -0.42,-0.42 -0.13,-0.25 0.2,-0.65 0,-0.85 -0.1,-0.1 -0.36,0.13 -0.42,0 -0.19,-0.38 0.3,-0.97 0,-1.27 -0.1,-0.1 -0.32,0.1 -0.42,0 -0.2,-0.2 0.13,-0.59 0,-0.85 -0.31,-0.62 -0.68,-0.68 -0.85,-0.85 -0.28,-0.28 -0.21,-1.48 -0.42,-1.7 -0.1,-0.1 -0.32,0.1 -0.42,0 -0.4,-0.4 -0.45,-1.72 -0.85,-2.12 -0.1,-0.1 -0.32,0.1 -0.42,0 -0.21,-0.21 -0.15,-1.42 -0.42,-1.7 -0.1,-0.1 -0.32,0.1 -0.42,0 -0.38,-0.38 -0.59,-1.61 -0.85,-2.12 -0.34,-0.68 -0.51,-0.17 -0.85,-0.85 -0.23,-0.45 -0.05,-1.32 -0.42,-1.7 -0.1,-0.1 -0.32,0.1 -0.42,0 -0.23,-0.23 -2.23,-4.46 -2.54,-5.08 -0.49,-0.97 -1.63,-1.56 -2.12,-2.54 -0.64,-1.29 -1.48,-2.53 -2.12,-3.81C 548.02,75.28 547.29,75.26 547.03,75c -0.17,-0.17 -0.98,-2.25 -1.27,-2.54 -0.1,-0.1 -0.3,0.06 -0.42,0 -0.78,-0.39 -0.07,-0.88 -0.85,-1.27 -0.5,-0.25 -1.07,-1.07 -1.7,-1.7 -0.3,-0.3 -1.2,-0.77 -1.27,-0.85 -0.1,-0.1 0.1,-0.32 0,-0.42 -0.1,-0.1 -0.32,0.1 -0.42,0 -0.22,-0.22 -1.05,-1.9 -1.27,-2.12 -0.1,-0.1 -0.3,0.06 -0.42,0 -0.52,-0.26 -1.86,-1.6 -2.12,-2.12 -0.06,-0.13 0.1,-0.32 0,-0.42 -0.1,-0.1 -0.32,0.1 -0.42,0 -0.25,-0.25 -0.6,-1.45 -0.85,-1.7 -0.1,-0.1 -0.32,0.1 -0.42,0 -0.1,-0.1 0.06,-0.3 0,-0.42 -0.34,-0.68 -0.51,-0.17 -0.85,-0.85 -0.06,-0.13 0.1,-0.32 0,-0.42 -0.1,-0.1 -0.32,0.1 -0.42,0 -0.1,-0.1 0.06,-0.3 0,-0.42 -0.88,-1.76 0.03,0.45 -0.85,-0.42 -0.37,-0.37 -0.96,-2.23 -1.27,-2.54 -0.1,-0.1 -0.3,0.06 -0.42,0 -0.38,-0.19 -1.27,-1.72 -1.27,-2.12 -0.85,-0.56 -1.66,-1.19 -2.54,-1.7 -0.42,-0.24 -1.23,0.15 -1.7,0 -1.82,-0.61 -3.47,-0.89 -5.08,-1.7 -0.36,-0.18 -0.49,-0.67 -0.85,-0.85 -0.13,-0.06 -0.32,0.1 -0.42,0 -0.1,-0.1 0.1,-0.32 0,-0.42 -0.22,-0.22 -1.9,-1.05 -2.12,-1.27 -0.28,-0.28 -0.26,-0.98 -0.85,-1.27 -0.35,-0.17 -0.6,-0.17 -0.85,-0.42 -0.1,-0.1 0.06,-0.3 0,-0.42 -0.42,-0.85 -1.7,-1.27 -2.12,-2.12 -0.06,-0.13 0.1,-0.32 0,-0.42 -0.1,-0.1 -0.32,0.1 -0.42,0 -0.1,-0.1 0.1,-0.32 0,-0.42 -0.1,-0.1 -0.32,0.1 -0.42,0 -0.1,-0.1 0.06,-0.3 0,-0.42 -0.56,-1.12 -2,-1.88 -2.54,-2.97 -0.34,-0.67 -1.42,-0.99 -1.7,-1.27 -0.1,-0.1 0.1,-0.32 0,-0.42 -0.2,-0.2 -0.65,0.2 -0.85,0 -0.1,-0.1 0.1,-0.32 0,-0.42 -0.2,-0.2 -0.65,0.2 -0.85,0 -0.1,-0.1 0.1,-0.32 0,-0.42 -0.2,-0.2 -1.01,0.13 -1.27,0 -0.81,-0.41 -1.73,-0.87 -2.54,-1.27 -0.25,-0.13 -0.59,0.13 -0.85,0 -1.22,-0.61 -2.47,-1.25 -3.81,-1.7 -0.38,-0.13 -0.89,0.13 -1.27,0 -0.19,-0.06 -0.24,-0.33 -0.42,-0.42 -0.62,-0.31 -1.48,-0.21 -2.12,-0.42 -1.16,-0.39 -2.23,-0.89 -3.39,-1.27 -0.98,-0.33 -1.96,-0.17 -2.97,-0.42 -0.19,-0.05 -0.23,-0.38 -0.42,-0.42 -1.41,-0.35 -0.94,0.23 -2.12,0 -1.45,-0.29 -2.84,-0.5 -4.24,-0.85 -0.93,-0.23 -2.04,0.23 -2.97,0 -1.27,-0.32 -2.54,-0.53 -3.81,-0.85 -2.16,-0.54 0.46,0.54 -1.7,0 -0.71,-0.18 -1.4,-0.7 -2.12,-0.85 -0.41,-0.08 -0.86,0.08 -1.27,0 -0.86,-0.17 -1.69,-0.63 -2.54,-0.85 -0.55,-0.14 -1.15,0.14 -1.7,0 -0.87,-0.22 -1.67,-0.63 -2.54,-0.85 -0.55,-0.14 -1.16,0.18 -1.7,0 -0.19,-0.06 -0.23,-0.39 -0.42,-0.42 -1.57,-0.31 -3.26,-0.15 -4.66,-0.85 -0.56,-0.28 -1.55,0.28 -2.12,0 -0.18,-0.09 -0.23,-0.36 -0.42,-0.42 -0.64,-0.21 -1.46,0.16 -2.12,0 -0.42,-0.11 -2.07,-0.27 -2.54,-0.42 -0.19,-0.06 -0.23,-0.36 -0.42,-0.42 -0.76,-0.25 -1.76,0.2 -2.54,0 -0.31,-0.08 -0.54,-0.35 -0.85,-0.42 -0.8,-0.2 -1.75,0.2 -2.54,0 -1.82,-0.45 -3.63,-0.9 -5.51,-1.27 -0.41,-0.08 -0.87,0.13 -1.27,0 -0.3,-0.1 -0.54,-0.36 -0.85,-0.42 -0.77,-0.15 -1.77,0.19 -2.54,0 -0.31,-0.08 -0.54,-0.35 -0.85,-0.42 -0.65,-0.16 -1.48,0.21 -2.12,0 -1.55,-0.52 -3.11,-0.33 -4.66,-0.85 -2.51,-0.84 -6.82,0.83 -9.32,0 -0.19,-0.06 -0.24,-0.33 -0.42,-0.42 -0.87,-0.43 -9.1,0 -10.59,0 -2.21,0 -5.07,0.53 -7.2,0 -2.39,-0.6 -1.93,-0.46 -4.24,0 -0.88,0.17 -2.58,-0.41 -3.39,0 -0.18,0.09 -0.23,0.36 -0.42,0.42 -1.54,0.52 -3.04,-0.39 -4.66,0.42 -0.78,0.39 -2.14,-0.28 -2.97,0 -0.19,0.06 -0.24,0.33 -0.42,0.42 -0.75,0.38 -2.39,-0.29 -3.81,0.42 -1.57,0.79 -7.75,-0.79 -9.32,0 -1.19,0.59 -2.62,0.25 -3.81,0.85 -0.56,0.28 -1.55,-0.28 -2.12,0 -0.84,0.42 -1.7,0.42 -2.54,0.85 -0.35,0.18 -1.43,-0.27 -1.7,0 -0.1,0.1 0.1,0.32 0,0.42 -0.27,0.27 -1.34,-0.18 -1.7,0 -1.11,0.55 -2.29,0.72 -3.39,1.27 -0.48,0.24 -1.09,-0.09 -2.12,0.42 -0.41,0.2 -1.29,-0.14 -1.7,0 -0.19,0.06 -0.24,0.33 -0.42,0.42 -0.41,0.2 -0.8,-0.02 -1.7,0.42 -0.48,0.24 -2.16,-0.38 -2.54,0 -0.1,0.1 0.1,0.32 0,0.42 -0.2,0.2 -1.01,-0.13 -1.27,0 -0.73,0.36 -1.39,0.48 -2.12,0.85 -0.34,0.17 -0.93,-0.17 -1.27,0 -0.7,0.35 -1.28,0.57 -2.12,0.85 -0.51,0.17 -1.19,-0.17 -1.7,0 -0.19,0.06 -0.24,0.33 -0.42,0.42 -0.48,0.24 -1.09,-0.09 -2.12,0.42 -0.62,0.31 -2,-0.27 -3.39,0.42 -0.62,0.31 -2.49,-0.47 -2.97,0 -0.1,0.1 0.1,0.32 0,0.42 -0.01,0.01 -5.33,0.42 -5.93,0.42 -4.02,2.74 -7.12,3.77 -11.44,5.93 -0.36,0.18 -0.49,0.67 -0.85,0.85 -0.25,0.13 -0.59,-0.13 -0.85,0 -0.62,0.31 -0.68,0.68 -0.85,0.85 -0.2,0.2 -0.65,-0.2 -0.85,0 -0.1,0.1 0.1,0.32 0,0.42 -0.21,0.21 -1.06,-0.21 -1.27,0 -0.1,0.1 0.1,0.32 0,0.42 -0.38,0.38 -1.25,0.2 -1.7,0.42 -0.62,0.31 -0.68,0.68 -0.85,0.85 -0.4,0.4 -1.72,0.45 -2.12,0.85 -0.21,0.21 -0.21,0.64 -0.42,0.85 -0.2,0.2 -0.65,-0.2 -0.85,0 -0.1,0.1 0.1,0.32 0,0.42 -0.14,0.14 -1.13,0.28 -1.27,0.42 -0.1,0.1 0.1,0.32 0,0.42 -0.1,0.1 -0.3,-0.06 -0.42,0 -0.36,0.18 -0.49,0.67 -0.85,0.85 -0.25,0.12 -1.55,0.71 -1.7,0.85 -0.21,0.21 -0.21,0.64 -0.42,0.85 -0.28,0.28 -1.36,0.6 -1.7,1.27 -0.06,0.13 0.1,0.32 0,0.42 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.1,0.1 0.1,0.32 0,0.42 -0.1,0.1 -0.3,-0.06 -0.42,0 -0.41,0.2 -1.49,1.28 -1.7,1.7 -0.06,0.13 0.1,0.32 0,0.42 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.14,0.14 -0.28,1.13 -0.42,1.27 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 0.2,0.65 0,0.85 -0.21,0.21 -0.64,0.21 -0.85,0.42 -0.2,0.2 0.2,0.65 0,0.85 -0.88,0.88 0.03,-1.34 -0.85,0.42 -0.06,0.13 0.1,0.32 0,0.42 -0.1,0.1 -0.36,-0.13 -0.42,0 -0.13,0.25 0.09,0.58 0,0.85 -0.2,0.6 -0.61,0.61 -0.85,0.85 -0.14,0.14 -0.28,1.13 -0.42,1.27 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.37,0.37 -1.32,3.02 -1.7,3.39 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 0.2,0.65 0,0.85 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.14,0.14 -0.28,1.13 -0.42,1.27 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.56,0.56 0.56,0.29 0,0.85 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.1,0.1 0.06,0.3 0,0.42 -0.11,0.23 -0.73,0.62 -0.85,0.85 -0.16,0.31 -0.29,1.56 -0.42,1.7 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.4,0.4 -0.45,1.72 -0.85,2.12 -0.21,0.21 -0.64,0.21 -0.85,0.42 -0.2,0.2 0.13,0.59 0,0.85 -0.11,0.23 -0.73,0.62 -0.85,0.85 -0.06,0.13 0.1,0.32 0,0.42 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 -0.68,1.36 -0.85,1.7 -0.13,0.25 0.2,0.65 0,0.85 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 -0.68,1.36 -0.85,1.7 -0.18,0.35 0.27,1.43 0,1.7 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.26,0.26 -0.21,2.96 -0.42,3.39 -0.09,0.18 -0.33,0.24 -0.42,0.42 -0.23,0.45 0.23,1.24 0,1.7 -0.09,0.18 -0.33,0.24 -0.42,0.42 -0.13,0.26 0.2,1.07 0,1.27 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 0.13,1.01 0,1.27 -0.09,0.18 -0.33,0.24 -0.42,0.42 -0.13,0.25 0.2,0.65 0,0.85 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.11,0.11 -0.69,2.91 -0.85,3.39 -0.15,0.44 -0.64,0.85 -0.85,1.27 -0.13,0.26 0.2,1.07 0,1.27 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 -0.05,5.61 -0.42,6.36 -0.64,1.27 -0.55,2.38 -1.27,3.81 -0.28,0.55 0.15,1.4 -0.42,2.54 -0.62,1.24 0.62,3.42 0,4.66 -0.09,0.18 -0.33,0.24 -0.42,0.42 -0.35,0.7 -0.06,5.14 -0.42,5.51 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 0.13,1.01 0,1.27 -0.63,1.26 -1.07,2.56 -1.7,3.81 -0.13,0.25 0.13,0.59 0,0.85 -0.09,0.18 -0.33,0.24 -0.42,0.42 -0.13,0.25 0.2,0.65 0,0.85 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 0.2,0.65 0,0.85 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.21,0.21 0.21,1.06 0,1.27 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.14,0.14 -0.28,1.13 -0.42,1.27 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.1,0.1 0.06,0.3 0,0.42 -0.18,0.36 -0.72,0.47 -0.85,0.85 -0.09,0.27 0.09,0.58 0,0.85 -0.13,0.38 -0.67,0.49 -0.85,0.85 -0.12,0.25 -0.71,1.55 -0.85,1.7 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.14,0.14 -0.28,1.13 -0.42,1.27 -0.21,0.21 -0.64,0.21 -0.85,0.42 -0.1,0.1 0.1,0.32 0,0.42 -0.14,0.14 -1.13,0.28 -1.27,0.42 -0.1,0.1 0.1,0.32 0,0.42 -0.1,0.1 -0.3,-0.06 -0.42,0 -0.51,0.25 -0.76,1.02 -1.27,1.27 -0.13,0.06 -0.32,-0.1 -0.42,0 -0.1,0.1 0.1,0.32 0,0.42 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.1,0.1 0.1,0.32 0,0.42 -0.14,0.14 -1.13,0.28 -1.27,0.42 -0.1,0.1 0.1,0.32 0,0.42 -0.48,0.48 -2.49,0.79 -2.97,1.27 -0.1,0.1 0.1,0.32 0,0.42 -0.2,0.2 -0.65,-0.2 -0.85,0 -0.1,0.1 0.1,0.32 0,0.42 -0.14,0.14 -1.13,0.28 -1.27,0.42 -0.1,0.1 0.1,0.32 0,0.42 -0.1,0.1 -0.3,-0.06 -0.42,0 -0.57,0.28 -0.59,1.01 -0.85,1.27 -0.1,0.1 -0.3,-0.06 -0.42,0 -0.31,0.15 -3.07,4.01 -3.39,4.66 -0.18,0.35 0.27,1.43 0,1.7 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.26,0.26 0,2.14 0,2.54 0,0.79 0.29,4.53 0.42,4.66 0.1,0.1 0.32,-0.1 0.42,0 0.2,0.2 -0.13,1.01 0,1.27 0.09,0.18 0.36,0.23 0.42,0.42 0.03,0.09 -0.14,1.55 0,1.7 0.1,0.1 0.32,-0.1 0.42,0 0.21,0.21 -0.21,1.06 0,1.27 0.1,0.1 0.32,-0.1 0.42,0 0.2,0.2 -0.13,0.59 0,0.85 0.44,0.88 0.84,1.68 1.27,2.54 0.17,0.34 -0.17,0.93 0,1.27 0.66,1.32 0.42,3.07 0.42,4.66 0,1.03 0.36,4.78 0,5.51 -0.09,0.18 -0.33,0.24 -0.42,0.42 -0.13,0.26 0.2,1.07 0,1.27 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.28,0.28 0.28,0.56 0,0.85 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.2,0.2 0.2,0.65 0,0.85 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.28,0.28 0.28,0.56 0,0.85 -0.21,0.21 -0.64,0.21 -0.85,0.42 -0.25,0.25 -0.6,1.45 -0.85,1.7 -0,0 -1.31,0.89 -1.7,1.27 -0.73,0.73 -0.93,1.77 -1.27,2.12 -0.1,0.1 -0.32,-0.1 -0.42,0 -0.35,0.35 -0.1,3.16 -0.42,3.81 -0.09,0.18 -0.36,0.23 -0.42,0.42 -0.11,0.34 -0.67,5.69 -0.42,5.93 0.1,0.1 0.32,-0.1 0.42,0 0.21,0.21 0.21,0.64 0.42,0.85 0.1,0.1 0.32,-0.1 0.42,0 0.21,0.21 0.21,0.64 0.42,0.85 0.21,0.21 0.64,0.21 0.85,0.42 0.38,0.38 0.2,1.25 0.42,1.7 0.18,0.36 0.67,0.49 0.85,0.85 0.25,0.51 0.47,1.74 0.85,2.12 0.1,0.1 0.32,-0.1 0.42,0 0.21,0.21 -0.21,1.06 0,1.27 0.1,0.1 0.32,-0.1 0.42,0 0.2,0.2 -0.2,0.65 0,0.85 0.1,0.1 0.32,-0.1 0.42,0 0.28,0.28 0.21,1.48 0.42,1.7 0.1,0.1 0.32,-0.1 0.42,0 0.4,0.4 0.45,1.72 0.85,2.12 0.1,0.1 0.32,-0.1 0.42,0 0.1,0.1 -0.06,0.3 0,0.42 0.18,0.36 0.67,0.49 0.85,0.85 0.06,0.13 -0.1,0.32 0,0.42 0.1,0.1 0.32,-0.1 0.42,0 0.18,0.18 0.29,1.01 0.42,1.27 0.25,0.51 1.02,0.76 1.27,1.27 0.13,0.25 -0.2,0.65 0,0.85 0.1,0.1 0.32,-0.1 0.42,0 0.18,0.18 0.29,1.01 0.42,1.27 0.23,0.45 0.62,0.4 0.85,0.85 0.13,0.25 -0.2,0.65 0,0.85 0.1,0.1 0.32,-0.1 0.42,0 0.29,0.29 0.13,1.82 0.42,2.12 0.1,0.1 0.32,-0.1 0.42,0 0.2,0.2 -0.2,0.65 0,0.85 0.1,0.1 0.32,-0.1 0.42,0 0.21,0.21 -0.21,1.06 0,1.27 0.1,0.1 0.32,-0.1 0.42,0 0.2,0.2 -0.2,0.65 0,0.85 0.1,0.1 0.32,-0.1 0.42,0 0.2,0.2 -0.13,1.01 0,1.27 0.49,0.98 0.78,1.98 1.27,2.97 0.18,0.35 -0.27,1.43 0,1.7 0.1,0.1 0.32,-0.1 0.42,0 0.21,0.21 -0.21,1.06 0,1.27 0.56,0.56 0.42,-0.71 0.42,0.42 0.81,1.03 0.78,2.19 1.27,3.18 0.09,0.18 -0.13,0.71 0,0.85 0.05,0.05 0.16,-0.05 0.21,0 0.29,0.29 -0.31,1.9 -0.42,2.12 -0.06,0.13 0.1,0.54 0,0.64 -0.05,0.05 -0.16,-0.05 -0.21,0 -0.1,0.1 0.06,0.51 0,0.64 -0.24,0.48 -0.18,1 -0.42,1.48 -0.27,0.54 0,1.93 0,2.54 0,0.64 0.05,1.17 -0.21,1.7 -0.15,0.31 0.14,1 -0.21,1.7 -0.17,0.34 0.17,0.93 0,1.27 -0.18,0.36 -0.24,0.69 -0.42,1.06 -0.09,0.18 -0.2,1.9 -0.21,1.91 -0.05,0.05 -0.16,-0.05 -0.21,0 -0.1,0.1 0.06,0.3 0,0.42 -0.15,0.31 -0.27,0.54 -0.42,0.85 -0.1,0.19 0.07,0.43 0,0.64 -0.07,0.22 -0.32,0.42 -0.42,0.64 -0.1,0.19 0.14,0.7 0,0.85 -0.05,0.05 -0.16,-0.05 -0.21,0 -0.04,0.04 -0.34,1.54 -0.42,1.7 -0.12,0.25 -0.3,0.39 -0.42,0.64 -0.06,0.13 0.06,0.3 0,0.42 -0.29,0.58 -0.56,1.11 -0.85,1.7 -0.06,0.13 0.1,0.32 0,0.42 -0.09,0.09 -0.27,0.12 -0.42,0.42 -0.15,0.29 -0.11,0.75 -0.21,1.06 -0.07,0.21 -0.35,0.42 -0.42,0.64 -0.07,0.2 0.1,0.45 0,0.64 -0.21,0.43 -0.49,0.82 -0.64,1.27 -0.07,0.2 0.1,0.45 0,0.64 -0.15,0.31 -0.27,0.54 -0.42,0.85 -0.09,0.18 0.04,0.67 0,0.85 -0.09,0.35 -0.33,0.56 -0.42,0.85 -0.12,0.37 -0.06,1.39 -0.21,1.7 -0.3,0.61 -0.33,1.3 -0.64,1.91 -0.09,0.17 0.09,0.47 0,0.64 -0.18,0.36 -0.24,0.69 -0.42,1.06 -0.1,0.19 0.07,0.43 0,0.64 -0.03,0.1 -0.18,0.12 -0.21,0.21 -0.12,0.34 -0.05,0.95 -0.21,1.27 -0.04,0.09 -0.18,0.12 -0.21,0.21 -0.07,0.2 0.1,0.64 0,0.85 -0.26,0.53 -0.09,0.82 -0.21,1.06 -0.04,0.09 -0.18,0.12 -0.21,0.21 -0.11,0.32 0.11,0.74 0,1.06 -0.2,0.59 -0.17,1.18 -0.42,1.7 -0.4,0.8 0.4,3.86 0,4.66 -0.04,0.09 -0.17,0.12 -0.21,0.21 -0.22,0.44 0,2.74 0,3.39 0,0.14 -0.1,0.32 0,0.42 0.05,0.05 0.16,-0.05 0.21,0 0.1,0.1 -0.06,0.51 0,0.64 0.18,0.36 0.24,0.69 0.42,1.06 0.23,0.47 -0.02,1.86 0.21,2.33 0.23,0.46 0.25,0.96 0.42,1.48 0.04,0.13 -0.06,0.3 0,0.42 0.04,0.09 0.17,0.12 0.21,0.21 0.06,0.13 -0.1,0.54 0,0.64 0.05,0.05 0.16,-0.05 0.21,0 0.13,0.13 -0.09,0.67 0,0.85 0.47,0.95 0.78,1.98 1.27,2.97 0.06,0.13 -0.1,0.32 0,0.42 0.05,0.05 0.16,-0.05 0.21,0 0.05,0.05 -0.05,0.16 0,0.21 0.05,0.05 0.16,-0.05 0.21,0 0.05,0.05 -0.05,0.16 0,0.21 0.05,0.05 0.16,-0.05 0.21,0 0.05,0.05 -0.05,0.16 0,0.21 0.05,0.05 0.15,-0.03 0.21,0 0.34,0.18 0.64,0.42 0.95,0.64z",
            transform: `scale(100%)`,
        index : 0,
        },
        richard: {
            eng: {
                name: "Richelieu",
                title: " the Rich"
            },
            ru: {
                name: "Ришелье",
                title: ", Олигарх"
            },
            contourD: "m 549.358,55.614c 1.779,7.849 5.688,14.297 10.173,21.025 0.729,1.093 1.867,1.471 2.713,2.035 3.659,2.439 -0.467,0.211 2.035,2.713 0.16,0.16 0.518,-0.16 0.678,0 0.393,0.393 0.963,2.32 1.356,2.713 0.16,0.16 0.518,-0.16 0.678,0 0.32,0.32 -0.32,1.037 0,1.356 0.16,0.16 0.518,-0.16 0.678,0 0.16,0.16 -0.16,0.518 0,0.678 0.16,0.16 0.476,-0.101 0.678,0 0.003,0.001 5.054,5.546 5.426,6.104 0.84,1.26 2.004,5.395 2.713,6.104 0.16,0.16 0.577,-0.202 0.678,0 0.671,1.342 -0.295,3.95 0,5.426 0.099,0.496 0.595,0.858 0.678,1.356 0.223,1.338 -0.429,2.782 0,4.069 0.428,1.285 0.678,1.067 0.678,2.713 0,0.452 -0.32,1.037 0,1.356 0.16,0.16 0.577,-0.202 0.678,0 0.638,1.277 -0.512,4.429 -0.678,5.426 -0.627,3.764 0.303,4.142 -1.356,7.46 -0.271,0.543 0.271,1.492 0,2.035 -0.677,1.355 -0.677,2.711 -1.356,4.069 -0.441,0.883 -0.523,12.842 -0.678,14.243 -0.226,1.356 -0.452,2.713 -0.678,4.069 -0.226,0.226 -0.577,0.375 -0.678,0.678 -0.572,1.715 0.804,4.496 0,6.104 -0.93,1.86 -0.23,3.173 -0.678,4.069 -2.104,4.209 -1.952,10.008 -4.069,14.243 -0.362,0.723 0.362,1.989 0,2.713 -1.013,2.025 -0.591,4.485 -1.356,6.782 -0.326,0.978 -0.096,21.511 0,21.703 0.998,1.996 0.678,-1.053 0.678,2.035 0,9.947 0,19.894 0,29.842 0,0.842 0.195,7.266 0,7.46 -0.16,0.16 -0.518,-0.16 -0.678,0 -0.639,0.639 -0.177,1.826 0,2.713 1.098,5.49 2.243,11.316 2.713,16.956 0.113,1.352 -0.15,2.721 0,4.069 0.126,1.136 1.335,3.435 0.678,4.748 -0.626,1.252 -0.867,2.602 -1.356,4.069 -0.406,1.219 0.502,6.958 0,7.46 -0.16,0.16 -0.518,-0.16 -0.678,0 -0.251,0.251 0,3.399 0,4.069 0,2.964 0.778,18.014 0,20.347 -2.962,5.924 1.184,-2.873 -0.678,2.713 -0.419,1.257 -1.67,2.611 -2.035,4.069 -0.432,1.728 -0.601,3.236 -1.356,4.748 -0.202,0.404 0.202,0.952 0,1.356 -0.143,0.286 -0.577,0.375 -0.678,0.678 -0.271,0.814 0.271,1.899 0,2.713 -0.632,1.896 -1.414,3.565 -2.035,5.426 -0.203,0.61 0.203,1.424 0,2.035 -0.825,2.474 -2.54,4.228 -3.391,6.782 -0.143,0.429 0.32,1.037 0,1.356 -0.16,0.16 -0.518,-0.16 -0.678,0 -0.508,0.508 -0.678,1.874 -0.678,2.713 0,1.108 -0.875,2.428 -1.356,3.391 -0.654,1.308 -0.024,3.439 -0.678,4.748 -0.719,1.439 -0.637,-0.082 -1.356,1.356 -0.101,0.202 0.16,0.518 0,0.678 -0.16,0.16 -0.518,-0.16 -0.678,0 -0.16,0.16 0.16,0.518 0,0.678 -0.16,0.16 -0.518,-0.16 -0.678,0 -0.393,0.393 -0.963,2.32 -1.356,2.713 -0.393,0.393 -2.32,0.963 -2.713,1.356 -0.16,0.16 0.16,0.518 0,0.678 -0.393,0.393 -2.32,0.963 -2.713,1.356 -0.16,0.16 0.16,0.518 0,0.678 -0.678,0.678 -0.678,-0.678 -1.356,0 -0.16,0.16 0.16,0.518 0,0.678 -0.445,0.445 -2.373,0.338 -2.713,0.678 -0.16,0.16 0.16,0.518 0,0.678 -0.226,0.226 -1.809,0.452 -2.035,0.678 -0.037,0.037 -1.32,1.998 -1.356,2.035 -0.226,0.226 -1.809,0.452 -2.035,0.678 -0.16,0.16 0.16,0.518 0,0.678 -0.393,0.393 -2.32,0.963 -2.713,1.356 -0.16,0.16 0.16,0.518 0,0.678 -0.226,0.226 -1.809,0.452 -2.035,0.678 -0.16,0.16 0.16,0.518 0,0.678 -0.037,0.037 -1.998,1.32 -2.035,1.356 -0.339,0.339 -0.339,1.017 -0.678,1.356 -0.16,0.16 -0.476,-0.101 -0.678,0 -1.261,0.63 -2.204,2.373 -2.713,3.391 -0.495,0.989 -1.085,1.085 -1.356,1.356 -0.339,0.339 0.339,1.696 0,2.035 -0.16,0.16 -0.518,-0.16 -0.678,0 -0.16,0.16 0,0.452 0,0.678 0,1.706 -0.53,4.513 0,6.104 0.101,0.303 0.535,0.392 0.678,0.678 0.202,0.404 -0.32,1.037 0,1.356 0.383,0.383 2.171,-0.181 2.713,0 1.545,0.515 5.311,3.805 6.104,4.069 0.982,0.327 1.821,0.232 2.713,0.678 0.572,0.286 0.785,1.07 1.356,1.356 0.202,0.101 0.518,-0.16 0.678,0 0.16,0.16 -0.16,0.518 0,0.678 0.32,0.32 1.037,-0.32 1.356,0 0.16,0.16 -0.16,0.518 0,0.678 0.223,0.223 9.491,4.577 10.173,4.748 0.439,0.11 0.927,-0.143 1.356,0 0.897,0.299 1.848,1.602 2.713,2.035 0.517,0.259 3.272,-0.017 3.391,0 1.151,0.164 3.558,0.91 4.748,1.356 4.68,1.755 9.388,4.016 13.564,6.104 0.531,0.265 2.233,-0.08 2.713,0 5.209,0.868 10.019,2.787 14.921,4.748 0.939,0.375 1.732,1.111 2.713,1.356 0.439,0.11 0.952,-0.202 1.356,0 0.202,0.101 -0.16,0.518 0,0.678 0.009,0.009 5.267,2.035 5.426,2.035 1.213,0 1.067,0.872 2.035,1.356 0.404,0.202 1.037,-0.32 1.356,0 0.16,0.16 -0.16,0.518 0,0.678 0.32,0.32 0.927,-0.143 1.356,0 1.92,0.64 3.669,2.127 5.426,2.713 0.9,0.3 5.622,2.909 4.069,1.356 -1.583,-1.583 -0.112,3.732 0,4.069 0.101,0.303 0.452,0.452 0.678,0.678 0.226,0.452 0.518,0.877 0.678,1.356 0.212,0.635 0.988,5.484 0.678,6.104 -1.046,2.092 -4.093,2.737 -4.748,3.391 -0.16,0.16 0.16,0.518 0,0.678 -0.314,0.314 -1.625,-0.205 -2.035,0 -0.868,0.434 -1.809,1.055 -2.713,1.356 -2.143,0.714 -3.846,-0.451 -6.104,0.678 -0.202,0.101 -0.518,-0.16 -0.678,0 -0.32,0.32 -0.32,1.037 0,1.356 0.16,0.16 0.476,-0.101 0.678,0 0.815,0.408 4.381,5.683 4.748,6.782 0.143,0.429 -0.143,0.927 0,1.356 0.301,0.903 1.6,1.843 2.035,2.713 0.501,1.002 0.035,2.765 1.356,4.748 1.129,1.693 2.866,4.005 3.391,6.104 0.11,0.439 -0.143,0.927 0,1.356 0.087,0.26 2.596,5.309 2.713,5.426 0.16,0.16 0.518,-0.16 0.678,0 0.16,0.16 -0.16,0.518 0,0.678 0.506,0.506 1.463,0.249 2.035,0.678 0.904,0.678 1.83,1.329 2.713,2.035 3.11,2.488 6.067,5.746 9.495,7.46 1.725,0.863 3.188,3.03 4.748,4.069 1.262,0.841 2.856,1.125 4.069,2.035 1.404,1.053 2.492,3.281 4.069,4.069 0.936,0.468 0.607,-0.821 1.356,0.678 0.359,0.717 0.466,2.268 1.356,2.713 0.202,0.101 0.518,-0.16 0.678,0 0.605,0.605 0.318,1.993 0.678,2.713 0.429,0.858 1.503,1.237 2.035,2.035 0.667,1 1.45,2.9 2.035,4.069 0.361,0.721 -0.361,0.635 0,1.356 0.49,0.979 0.867,1.734 1.356,2.713 0.202,0.404 -0.32,1.037 0,1.356 0.16,0.16 0.518,-0.16 0.678,0 0.32,0.32 -0.202,0.952 0,1.356 0.602,1.204 1.433,2.187 2.035,3.391 0.202,0.404 -0.32,1.037 0,1.356 0.16,0.16 0.518,-0.16 0.678,0 0.32,0.32 -0.32,1.037 0,1.356 0.16,0.16 0.518,-0.16 0.678,0 0.16,0.16 -0.16,0.518 0,0.678 0.16,0.16 0.518,-0.16 0.678,0 0.16,0.16 -0.16,0.518 0,0.678 0.513,0.513 1.356,0.294 1.356,1.356 -2.229,3.684 10.613,7.661 12.208,10.852 0.271,0.543 -0.271,1.492 0,2.035 0.395,0.79 0.961,1.245 1.356,2.035 0.878,1.756 -0.409,8.13 0,10.173 0.748,3.74 1.829,6.371 3.391,9.495 0.202,0.404 -0.202,0.952 0,1.356 0.582,1.164 1.573,2.008 2.035,3.391 0.808,2.423 -2.626,-2.794 0.678,2.713 0.329,0.548 1.027,0.808 1.356,1.356 0.368,0.613 0.359,1.395 0.678,2.035 1.691,3.383 4.053,6.419 6.104,9.495 0.125,0.188 -0.16,0.518 0,0.678 0.16,0.16 0.518,-0.16 0.678,0 0.16,0.16 -0.125,0.49 0,0.678 0.355,0.532 0.973,0.845 1.356,1.356 0.893,1.191 1.208,2.83 2.035,4.069 0.355,0.532 1.07,0.785 1.356,1.356 0.286,0.571 0.532,3.002 0.678,3.391 1.651,4.404 2.795,8.94 5.426,12.886 1.651,2.477 4.319,4.402 6.104,6.782 1.195,1.593 1.606,3.765 2.713,5.426 0.355,0.532 1.07,0.785 1.356,1.356 1.515,3.03 1.114,6.274 2.035,9.495 0.64,2.242 2.148,4.523 2.713,6.782 0.11,0.439 -0.143,0.927 0,1.356 0.202,0.607 1.07,0.785 1.356,1.356 0.327,0.654 0.306,2.154 0.678,2.713 4.456,6.684 -2.215,-5.232 2.713,3.391 1.455,2.546 2.789,5.577 4.069,8.139 0.362,0.723 -0.362,1.989 0,2.713 1.203,2.407 0.772,4.446 1.356,6.782 0.707,2.829 1.778,5.335 2.713,8.139 0.143,0.429 -0.143,0.927 0,1.356 0.101,0.303 0.577,0.375 0.678,0.678 0.143,0.429 -0.143,0.927 0,1.356 0.101,0.303 0.577,0.375 0.678,0.678 0.214,0.643 -0.48,1.555 0,2.035 0.16,0.16 0.518,-0.16 0.678,0 0.48,0.48 -0.164,1.377 0,2.035 0.59,2.36 2.625,4.484 3.391,6.782 0.143,0.429 -0.143,0.927 0,1.356 0.138,0.414 1.218,1.621 1.356,2.035 0.143,0.429 -0.202,0.952 0,1.356 0.495,0.989 1.085,1.085 1.356,1.356 0.93,0.93 2.353,5.225 3.391,6.782 1.053,1.58 2.818,3.708 3.391,5.426 1.552,4.656 -2.597,-3.159 0.678,3.391 0.924,1.847 2.327,3.653 3.391,5.426 0.394,0.656 0.973,3.008 1.356,3.391 0.16,0.16 0.518,-0.16 0.678,0 0.203,0.203 -0.022,2.626 0,2.713 0.18,0.721 1.099,3.554 1.356,4.069 0.948,1.896 1.385,4.113 2.713,6.104 0.522,0.783 1.513,1.252 2.035,2.035 0.473,0.709 0.754,2.789 1.356,3.391 0.16,0.16 0.518,-0.16 0.678,0 0.356,0.356 0.403,5.829 2.035,7.46 -0.746,0.44 -1.457,0.946 -2.238,1.319 -0.159,0.076 -0.361,-0.056 -0.528,0 -0.491,0.164 -0.852,0.822 -1.321,1.056 -0.16,0.08 -0.682,0.153 -0.792,0.264 -0.062,0.062 0.062,0.202 0,0.264 -0.001,0.001 -1.946,1.287 -2.113,1.321 -0.259,0.052 -0.528,0 -0.792,0 -0.44,0.088 -0.885,0.155 -1.321,0.264 -0.54,0.135 -1.039,0.419 -1.585,0.528 -0.345,0.069 -0.722,-0.111 -1.056,0 -1.369,0.456 -2.583,1.366 -3.962,1.849 -7.321,2.562 -1.088,0.6 -6.339,1.585 -2.525,0.473 -1.049,0.527 -3.169,0.792 -1.127,0.141 -2.307,-0.15 -3.433,0 -3.819,0.509 -7.556,1.691 -11.357,2.113 -0.878,0.098 -5.093,-0.359 -5.811,0 -2.046,1.023 -4.606,1.133 -6.867,1.585 -0.769,0.154 -1.367,0.016 -2.113,0.264 -0.58,0.193 -2.212,-0.029 -2.641,0 -0.795,0.053 -1.588,0.151 -2.377,0.264 -2.199,0.314 -4.409,0.691 -6.603,1.056 -0.801,0.133 -1.572,0.428 -2.377,0.528 -1.393,0.174 -2.801,0.243 -4.226,0.528 -1.424,0.285 -2.788,0.851 -4.226,1.056 -1.223,0.175 -2.472,0.104 -3.698,0.264 -0.805,0.105 -1.578,0.387 -2.377,0.528 -1.752,0.309 -3.533,0.442 -5.282,0.792 -0.954,0.191 -1.12,0.428 -1.849,0.792 -0.236,0.118 -0.53,-0.029 -0.792,0 -0.619,0.069 -1.245,0.113 -1.849,0.264 -2.506,0.626 -4.882,1.749 -7.395,2.377 -0.604,0.151 -1.242,0.124 -1.849,0.264 -1.424,0.329 -2.621,1.082 -3.962,1.585 -0.683,0.256 -1.043,0.084 -1.585,0.264 -1.259,0.42 -2.447,1.168 -3.698,1.585 -1.216,0.405 -2.482,0.651 -3.698,1.056 -0.636,0.212 -1.208,0.595 -1.849,0.792 -0.512,0.157 -1.063,0.144 -1.585,0.264 -2.974,0.686 -5.99,1.251 -8.98,1.849 -0.489,0.098 -1.099,-0.069 -1.585,0 -0.719,0.103 -1.389,0.473 -2.113,0.528 -1.825,0.14 -4.218,0.206 -6.075,0 -0.361,-0.04 -0.695,-0.228 -1.056,-0.264 -1.459,-0.146 -3.021,0 -4.49,0 -0.704,0 -1.409,0 -2.113,0 -1.122,0 -0.125,-0.431 -0.792,-0.264 -3.566,0.892 -7.084,1.849 -10.829,1.849 -3.345,0 -6.691,0 -10.036,0 -0.902,0 -4.122,-0.299 -5.018,0 -0.223,0.074 -0.566,0.483 -0.792,0.528 -1.126,0.225 -2.3,0.085 -3.433,0.264 -2.518,0.398 -5.16,0.852 -7.659,1.321 -1.256,0.236 -0.347,0.204 -1.321,0.528 -0.372,0.124 -2.995,0.184 -3.433,0.264 -2.972,0.54 1.883,0.048 -3.698,0.792 -3.512,0 0.307,-0.139 -2.113,0.264 -0.725,0.121 -1.664,-0.204 -2.377,0 -1.258,0.36 -2.442,0.951 -3.698,1.321 -3.65,1.073 -7.873,2.143 -11.621,2.377 -2.29,0.143 -4.851,-0.38 -7.131,0 -2.205,0.367 -4.411,0.882 -6.603,1.321 -1.393,0.279 -3.15,-0.447 -4.49,0 -0.118,0.039 -0.153,0.208 -0.264,0.264 -0.164,0.082 -0.939,0 -1.056,0 -0.629,0 -1.5,-0.153 -2.113,0 -1.275,0.319 -2.339,0.528 -3.698,0.528 -0.512,0 -1.665,-0.224 -2.113,0 -0.415,0.208 -0.299,0.264 -0.792,0.264 -4.474,1.022 -9.158,0.528 -13.734,0.528 -0.761,0 -2.503,-0.333 -3.169,0 -0.111,0.056 -0.146,0.225 -0.264,0.264 -0.552,0.184 -1.29,-0.16 -1.849,0 -0.379,0.108 -0.688,0.39 -1.056,0.528 -1.557,0.584 -3.339,1.375 -5.018,1.585 -1.678,0.21 -3.601,0.432 -5.282,0.792 -0.71,0.152 -1.395,0.418 -2.113,0.528 -0.435,0.067 -0.882,-0.033 -1.321,0 -5.86,0.434 -5.263,0.638 -10.829,0.792 -2.64,0.073 -5.282,0 -7.923,0 -1.184,0 -2.98,-0.208 -4.226,0 -1.673,0.279 -0.515,0.26 -2.377,0.792 -1.44,0.411 -2.997,0.664 -4.49,0.792 -4.414,0.378 -8.557,0.528 -12.942,0.528 -1.971,0 -3.784,-0.467 -5.811,-0.264 -0.361,0.036 -0.695,0.231 -1.056,0.264 -8.38,0.762 -16.947,0.264 -25.355,0.264 -5.102,0 -10.198,0.63 -15.319,0.264 -5.81,-0.415 -3.408,-0.643 -9.508,-1.321 -3.305,-0.367 -6.715,-0.516 -10.036,-0.792 -0.351,-0.029 -0.711,0.069 -1.056,0 -0.122,-0.024 -0.146,-0.225 -0.264,-0.264 -0.889,-0.296 -4.534,1.017 -5.811,1.056 -4.661,0.146 -9.65,0.13 -14.262,-0.792 -1.862,-0.372 -3.681,-1.212 -5.546,-1.585 -1.755,-0.351 -3.767,0.132 -5.546,0 -1.765,-0.131 -3.529,-0.286 -5.282,-0.528 -2.794,-0.385 -5.422,-1.388 -8.188,-1.849 -1.731,-0.289 -3.844,0 -5.546,0 -3.924,0 -7.972,0.326 -11.885,0 -1.175,-0.098 -1.291,-0.347 -2.377,-0.528 -1.389,-0.231 -3.164,0.053 -4.49,0 -3.52,-0.141 -7.053,-0.522 -10.565,-0.792 -3.541,-0.272 -5.907,-0.288 -8.98,-1.056 -1.559,-0.39 -5.266,0.089 -6.867,0 -2.049,-0.114 -3.579,-1.257 -5.546,-1.585 -0.828,-0.138 -1.824,0.058 -2.641,0 -0.456,-0.033 -3.571,-0.386 -4.226,-0.528 -2.893,-0.629 -6.055,-1.959 -8.98,-2.377 -2.663,-0.38 -5.507,0.206 -8.188,0 -1.116,-0.086 -0.446,-0.31 -1.321,-0.528 -0.734,-0.183 -1.469,-0.206 -2.113,-0.528 -0.389,-0.195 -1.553,0.296 -1.849,0 -0.062,-0.062 0.079,-0.225 0,-0.264 -0.323,-0.162 -0.977,0.115 -1.321,0 -0.118,-0.039 -0.146,-0.225 -0.264,-0.264 -0.251,-0.084 -0.556,0.118 -0.792,0 -0.223,-0.111 -0.292,-0.449 -0.528,-0.528 -0.364,-0.121 -1.38,-0.06 -1.585,-0.264 -0.062,-0.062 0.062,-0.202 0,-0.264 -0.168,-0.168 -0.837,0.11 -1.056,0 -0.793,-0.396 -0.634,-1.585 -2.113,-1.585 -2.726,-0.072 -5.464,0.118 -8.188,0 -0.622,-0.027 -1.227,-0.239 -1.849,-0.264 -1.583,-0.063 -3.171,0.066 -4.754,0 -1.07,-0.045 -2.102,-0.439 -3.169,-0.528 -0.526,-0.044 -1.058,0.041 -1.585,0 -0.102,-0.008 -4.992,-0.766 -5.018,-0.792 -0.062,-0.062 0.062,-0.202 0,-0.264 -0.09,-0.09 -4.518,-0.082 -5.282,-0.264 -1.784,-0.425 -4.387,-1.259 -6.339,-1.585 -3.996,-0.666 -0.768,0.022 -4.49,-0.264 -1.723,-0.133 -3.672,-0.676 -5.282,-1.321 -0.295,-0.118 -0.491,-0.428 -0.792,-0.528 -0.501,-0.167 -1.058,0.038 -1.585,0 -1.844,-0.132 -3.029,-0.217 -4.754,-0.792 -5.666,-1.889 -11.268,-4.196 -16.903,-6.075 -0.608,-0.203 -3.167,0 -3.433,0 -2.794,0 -5.667,0.127 -8.452,0 -0.622,-0.028 -1.228,-0.22 -1.849,-0.264 -2.474,-0.177 -4.173,-0.185 -6.603,-0.792 -0.878,-0.22 -2.786,-0.022 -3.433,0 -4.644,0.155 -9.41,0.574 -13.998,0 -1.728,-0.216 -3.221,-1.082 -4.754,-1.849 -2.876,-1.438 -5.909,-3.202 -8.98,-4.226 -1.412,-0.471 -3.305,0.315 -4.754,0 -2.483,-0.54 -4.93,-1.233 -7.395,-1.849 -2.695,-0.674 -0.545,-0.373 -2.641,-0.792 -1.981,-0.396 -5.413,0.147 -7.395,0.264 -1.774,0.104 -3.805,0.29 -5.546,0 -0.326,-0.054 -1.215,-0.528 -1.321,-0.528 -3.549,0 -7.679,-0.802 -10.829,-2.377 -1.277,-0.638 -0.313,-0.063 -1.321,-0.264 -0.859,-0.172 -1.937,-0.704 -2.641,-1.056 -0.216,-0.108 -4.027,-0.066 -4.226,0 -0.64,0.213 -1.399,0.443 -2.113,0.264 -0.191,-0.048 -0.337,-0.216 -0.528,-0.264 -0.256,-0.064 -0.606,0.187 -0.792,0 -0.062,-0.062 0.062,-0.202 0,-0.264 -0.125,-0.125 -0.371,0.079 -0.528,0 -0.716,-0.358 -1.229,-0.086 -1.585,-0.264 -0.684,-0.342 -1.849,-0.585 -1.849,0.528 -2.175,-0.826 -0.565,-5.009 -1.454,-5.898 -0.128,-0.128 -0.414,0.128 -0.542,0 -0.143,-0.143 0,-1.403 0,-1.626 0,-1.535 -0.693,-5.117 0,-6.503 0.347,-0.694 0.843,-1.445 1.084,-2.168 0.642,-1.927 -0.365,-4.498 0,-6.503 1.24,-6.818 3.241,-13.517 5.419,-20.051 0.581,-1.744 0,-7.268 0,-8.671 0,-4.567 0.735,-9.016 1.084,-13.548 0.323,-4.202 -0.696,-8.828 0,-13.006 0.496,-2.974 1.745,-5.71 2.168,-8.671 0.201,-1.407 1.669,-13.592 2.168,-14.09 0.128,-0.128 0.414,0.128 0.542,0 0.029,-0.029 0.409,-6.048 0.542,-7.045 0.749,-5.617 2.009,-11.195 2.71,-16.8 0.056,-0.445 0.317,-4.427 0.542,-4.877 0.114,-0.228 0.461,-0.3 0.542,-0.542 0.535,-1.604 0.041,-3.665 0.542,-5.419 0.523,-1.829 1.033,-3.641 1.626,-5.419 0.057,-0.171 0,-0.361 0,-0.542 0,-0.361 -0.114,-0.741 0,-1.084 0.081,-0.242 0.461,-0.3 0.542,-0.542 0.296,-0.887 0.149,-8.278 0.542,-8.671 0.723,-0.723 0.52,1.15 1.084,-0.542 0.325,-0.975 -0.325,-2.276 0,-3.252 0.834,-2.503 2.278,-4.612 3.252,-7.045 1.027,-2.566 1.151,-4.99 2.71,-7.587 0.263,-0.438 0.777,-0.675 1.084,-1.084 0.181,-0.361 0.361,-0.723 0.542,-1.084 0,-0.181 -0.081,-0.38 0,-0.542 1.128,-2.255 -0.037,0.579 1.084,-0.542 0.128,-0.128 0,-0.361 0,-0.542 0.181,-0.181 0.329,-0.4 0.542,-0.542 0.475,-0.317 1.222,-0.138 1.626,-0.542 0.128,-0.128 -0.081,-0.38 0,-0.542 0.404,-0.808 1.062,-1.462 1.626,-2.168 3.118,-3.898 7.246,-8.082 11.38,-10.838 1.074,0.054 0.256,-0.798 0.542,-1.084 0.128,-0.128 0.414,0.128 0.542,0 0.128,-0.128 -0.081,-0.38 0,-0.542 0.228,-0.457 0.855,-0.627 1.084,-1.084 0.164,-0.328 0.315,-1.399 0.542,-1.626 0.128,-0.128 0.414,0.128 0.542,0 0.074,-0.074 0.774,-5.032 1.084,-5.961 0.581,-1.742 1.828,-2.865 2.71,-4.335 0.294,-0.49 0.248,-1.136 0.542,-1.626 0.263,-0.438 0.821,-0.646 1.084,-1.084 0.319,-0.531 1.187,-3.355 1.626,-3.793 0.255,-0.255 0.761,0.162 1.084,0 1.296,-0.648 3.285,-2.351 4.335,-3.252 2.91,-2.494 5.721,-5.129 8.671,-7.587 0.361,-0.301 1.885,-1.603 2.168,-2.168 0.081,-0.162 -0.128,-0.414 0,-0.542 0.128,-0.128 0.461,0.162 0.542,0 0.517,-1.034 -0.621,-1.044 0.542,-1.626 0.162,-0.081 0.414,0.128 0.542,0 0.128,-0.128 -0.128,-0.414 0,-0.542 0.404,-0.404 1.18,-0.185 1.626,-0.542 2.72,-2.176 5.367,-4.432 8.129,-6.503 3.356,-2.517 4.271,-6.374 5.961,-9.755 0.542,-1.084 2.168,-1.626 2.71,-2.71 0.081,-0.162 -0.128,-0.414 0,-0.542 0.357,-0.357 2.814,-0.865 3.252,-1.084 3.029,-1.515 5.767,-3.677 8.671,-5.419 0.322,-0.193 1.954,-0.871 2.168,-1.084 0.128,-0.128 -0.128,-0.414 0,-0.542 0.128,-0.128 0.38,0.081 0.542,0 0.668,-0.334 2.376,-2.042 2.71,-2.71 0.081,-0.162 -0.128,-0.414 0,-0.542 0.128,-0.128 0.414,0.128 0.542,0 0.355,-0.355 0.337,-1.252 1.084,-1.626 0.78,-0.39 3.464,-0.586 4.335,-1.084 0.665,-0.38 1.027,-1.147 1.626,-1.626 0.641,-0.513 3.435,-1.809 3.793,-2.168 0.286,-0.286 1.339,-2.423 1.626,-2.71 0.128,-0.128 0.38,0.081 0.542,0 0.726,-0.363 0.751,-1.293 1.084,-1.626 0.883,-0.883 3.223,-2.51 4.335,-3.252 3.658,-2.439 7.221,-7.763 10.297,-10.838 1.102,-1.102 2.91,-2.469 3.793,-3.793 0.1,-0.15 -0.128,-0.414 0,-0.542 0.271,-0.271 0.813,-0.271 1.084,-0.542 0.128,-0.128 -0.128,-0.414 0,-0.542 1.121,-1.121 -0.044,1.713 1.084,-0.542 0.081,-0.162 -0.128,-0.414 0,-0.542 0.128,-0.128 0.414,0.128 0.542,0 0.128,-0.128 -0.128,-0.414 0,-0.542 0.255,-0.255 0.828,0.255 1.084,0 0.128,-0.128 -0.128,-0.414 0,-0.542 0.524,-0.524 1.626,-0.118 1.626,-1.084 1.445,-0.181 2.94,-0.123 4.335,-0.542 0.489,-0.147 0.627,-0.855 1.084,-1.084 1.022,-0.511 2.23,-0.573 3.252,-1.084 1.138,-0.569 2.155,-2.052 3.252,-2.71 1.803,-1.082 4.158,-1.627 5.961,-2.71 0.438,-0.263 0.627,-0.855 1.084,-1.084 0.323,-0.162 0.741,0.114 1.084,0 0.772,-0.258 0.78,-0.78 1.084,-1.084 0.128,-0.128 0.414,0.128 0.542,0 0.452,-0.452 0.09,-1.716 0.542,-2.168 0.128,-0.128 0.414,0.128 0.542,0 0.128,-0.128 -0.1,-0.392 0,-0.542 2.02,-3.03 5.025,-5.641 7.045,-8.671 0.1,-0.15 -0.128,-0.414 0,-0.542 0.101,-0.101 4.374,-0.86 4.877,-1.084 4.299,-1.911 8.529,-4.469 13.006,-5.961 0.343,-0.114 0.741,0.114 1.084,0 0.577,-0.192 2.268,-1.184 2.71,-1.626 0.286,-0.286 0.256,-0.798 0.542,-1.084 1.172,-1.172 3.375,-2.5 4.877,-3.252 0.323,-0.162 0.748,0.134 1.084,0 2.763,-1.105 5.035,-2.961 7.587,-4.335 3.694,-1.989 4.159,-1.602 7.045,-3.252 2.312,-1.321 4.395,-3.296 6.503,-4.877 0.954,-0.715 2.298,-0.91 3.252,-1.626 1.412,-1.059 0.594,-1.101 2.168,-1.626 1.002,-0.334 1.044,0.357 2.168,-0.542 4.366,-3.493 9.409,-7.176 14.09,-10.297 1.074,0.054 0.256,-0.798 0.542,-1.084 0.271,-0.271 0.813,-0.271 1.084,-0.542 1.121,-1.121 -1.713,0.044 0.542,-1.084 0.162,-0.081 0.434,0.145 0.542,0 0.485,-0.646 0.723,-1.445 1.084,-2.168 0.723,-1.264 1.28,-2.639 2.168,-3.793 1.482,-1.926 3.243,-3.621 4.877,-5.419 1.203,-1.323 2.597,-2.464 3.793,-3.793 1.477,-1.641 0.537,-1.487 2.168,-2.71 1.925,-1.444 3.484,-3.426 5.419,-4.877 0.776,-0.582 1.593,-0.764 2.168,-1.626 0.947,-1.421 0.203,-0.947 1.084,-2.71 1.088,-2.176 2.726,-4.368 3.793,-6.503 0.392,-0.784 0.332,-1.87 0.542,-2.71 0.39,-1.56 1.112,-2.795 1.626,-4.335 0.713,-2.138 -0.236,-5.465 0,-7.587 0.063,-0.568 0.44,-1.064 0.542,-1.626 0.51,-2.807 0.542,-5.35 0.542,-8.129 0,-1.22 -0.437,-8.88 0,-9.755 2.094,-4.188 2.71,-6.082 2.71,-10.838 -3.199,-3.74 -5.602,-4.337 -9.213,-6.503 -1.28,-0.768 -1.378,-2.364 -2.71,-3.252 -1.843,-1.229 -4.108,-1.474 -5.961,-2.71 -1.296,-0.864 -3.482,-5.108 -4.877,-6.503 -0.368,-0.368 -1.672,0.248 -2.168,0 -0.685,-0.343 -0.96,-1.246 -1.626,-1.626 -2.169,-1.24 -5.012,-1.354 -7.045,-2.71 -0.751,-0.501 -1.909,-1.935 -2.168,-2.71 -0.114,-0.343 0.114,-0.741 0,-1.084 -0.162,-0.485 -0.855,-0.627 -1.084,-1.084 -0.081,-0.162 0.128,-0.414 0,-0.542 -0.333,-0.333 -1.263,-0.358 -1.626,-1.084 -0.599,-1.199 -1.135,-3.303 -2.168,-4.335 -0.271,-0.271 -1.355,0.271 -1.626,0 -0.128,-0.128 0.128,-0.414 0,-0.542 -0.404,-0.404 -1.169,-0.199 -1.626,-0.542 -1.379,-1.035 -3.318,-3.114 -4.335,-4.335 -0.501,-0.601 -2.561,-5.218 -2.71,-5.961 -0.071,-0.354 0.162,-0.761 0,-1.084 -0.081,-0.162 -0.434,0.145 -0.542,0 -1.867,-2.49 -3.237,-6.357 -4.335,-9.213 -4.75,-12.351 1.861,4.501 -1.626,-5.961 -1.016,-3.048 -3.264,-8.072 -4.877,-10.838 -1.488,-2.551 -4.68,-5.813 -7.045,-7.587 -0.457,-0.343 -1.222,-0.138 -1.626,-0.542 -1.309,-1.309 -2.121,-3.37 -3.252,-4.877 -0.443,-0.591 -1.512,-1.84 -2.168,-2.168 -0.162,-0.081 -0.414,0.128 -0.542,0 -0.332,-0.332 -0.461,-1.418 -1.084,-1.626 -0.343,-0.114 -0.741,0.114 -1.084,0 -1.613,-0.538 -2.142,-3.2 -2.71,-4.335 -0.325,-0.65 -1.301,-0.975 -1.626,-1.626 -0.321,-0.641 -1.084,-2.562 -1.084,-3.252 -2.617,-3.879 1.084,-4.733 1.084,-3.252 -0.083,-1.178 1.649,-9.778 2.71,-10.838 0.128,-0.128 0.414,0.128 0.542,0 0.128,-0.128 -0.128,-0.414 0,-0.542 0.128,-0.128 0.414,0.128 0.542,0 0.128,-0.128 -0.081,-0.38 0,-0.542 0.228,-0.457 0.922,-0.599 1.084,-1.084 0.114,-0.343 -0.114,-0.741 0,-1.084 0.281,-0.844 2.178,-4.356 2.71,-5.419 0.161,-0.323 3.696,-2.612 4.335,-3.252 0.543,-0.543 3.795,-3.794 4.877,-4.335 0.577,-0.289 0.506,0.289 1.084,0 2.213,-1.106 4.727,-2.092 7.045,-3.252 0.336,-0.168 1.927,0 2.168,0 1.553,0 4.595,-0.683 5.961,0 0.228,0.114 0.313,0.428 0.542,0.542 0.327,0.164 1.375,-0.251 1.626,0 0.128,0.128 -0.128,0.414 0,0.542 0.674,0.674 3.281,-0.286 3.793,-0.542 0.162,-0.081 0.414,0.128 0.542,0 0.128,-0.128 -0.128,-0.414 0,-0.542 0.128,-0.128 0.414,0.128 0.542,0 0.403,-0.403 0.756,-2.597 1.084,-3.252 0.997,-1.994 1.757,-3.514 2.71,-5.419 0.239,-0.478 0.821,-2.447 1.084,-2.71 0.128,-0.128 0.414,0.128 0.542,0 0.332,-0.332 0.358,-4.823 0.542,-5.419 1.364,-4.434 3.551,-8.498 4.877,-13.006 0.281,-0.954 2.277,-10.406 2.71,-10.838 0.128,-0.128 0.414,0.128 0.542,0 0.128,-0.128 -0.1,-0.392 0,-0.542 0.283,-0.425 0.723,-0.723 1.084,-1.084 0.542,-0.723 1.147,-1.402 1.626,-2.168 0.428,-0.685 0.636,-1.496 1.084,-2.168 3.109,-4.664 7.226,-9.033 9.755,-14.09 0.881,-1.763 0.137,-1.289 1.084,-2.71 0.283,-0.425 0.855,-0.627 1.084,-1.084 1.322,-2.645 -0.359,-0.831 1.084,-4.335 2.027,-4.923 3.176,-6.131 5.419,-10.297 2.073,-3.849 3.47,-8.024 5.419,-11.922 0.471,-0.942 1.042,-1.833 1.626,-2.71 0.224,-0.336 0.903,-0.181 1.084,-0.542 0.162,-0.323 -0.191,-0.777 0,-1.084 0.748,-1.196 1.838,-2.142 2.71,-3.252 2.874,-3.657 6.115,-7.547 8.671,-11.38 0.283,-0.425 0.855,-0.627 1.084,-1.084 0.164,-0.327 -0.251,-1.375 0,-1.626 0.128,-0.128 0.461,0.162 0.542,0 0.542,-1.084 -0.271,-0.813 0,-1.626 0.255,-0.766 0.888,-1.384 1.084,-2.168 0.088,-0.35 -0.114,-0.741 0,-1.084 0.162,-0.485 0.855,-0.627 1.084,-1.084 0.162,-0.323 -0.255,-0.828 0,-1.084 0.255,-0.255 0.97,0.343 1.084,0 0.171,-0.514 -0.19,-1.118 0,-1.626 0.743,-1.982 2.486,-4.76 3.793,-6.503 0.999,-1.332 1.762,-3.049 3.252,-3.793 0.626,-0.313 3.496,-2.116 3.793,-2.71 0.154,-0.307 1.507,-2.591 1.626,-2.71 0.269,-0.269 3.736,-1.59 3.793,-1.626 2.047,-1.279 4.129,-3.351 5.961,-4.877 0.431,-0.359 4.14,-4.487 4.335,-4.877 0.081,-0.162 -0.128,-0.414 0,-0.542 0.128,-0.128 0.414,0.128 0.542,0 0.1,-0.1 0.442,-1.526 0.542,-1.626 0.964,-0.964 2.352,-1.51 3.252,-2.71 1.187,-1.583 -0.271,-0.745 1.626,-2.168 2.21,-1.658 2.681,-1.187 4.877,-1.626 1.852,-0.37 4.333,-1.354 5.961,-2.168 2.063,-1.032 3.771,-3.064 5.961,-3.793 0.343,-0.114 0.741,0.114 1.084,0 0.242,-0.081 0.3,-0.461 0.542,-0.542 1.606,-0.535 2.433,-0.331 4.335,-0.542 3.659,-0.407 7.18,-1.71 10.838,-2.168 5.616,-0.702 11.802,0.08 17.342,0.542 1.938,0.162 3.093,-0.053 4.877,0.542 0.904,0.301 2.364,-0.177 3.252,0 1.436,0.287 2.8,0.828 4.335,1.084 0.865,0.144 2.455,-0.398 3.252,0 0.852,0.426 0.614,0.542 1.626,0.542 1.114,0 1.256,-0.086 2.168,-0.542 1.328,-0.664 5.003,0 6.503,0 1.281,0 4.761,0.6 5.961,0 0.487,-0.243 2.495,-0.869 2.71,-1.084 0.128,-0.128 -0.128,-0.414 0,-0.542 0.344,-0.344 1.716,0.226 2.168,0 1.607,-0.803 4.878,-1.806 7.045,-1.084 0.866,0.289 5.581,2.33 5.961,2.71 0.271,0.271 0.271,0.813 0.542,1.084 0.255,0.255 0.828,-0.255 1.084,0 0.128,0.128 -0.162,0.461 0,0.542 0.323,0.162 0.741,-0.114 1.084,0 0.485,0.162 0.627,0.855 1.084,1.084 0.162,0.081 0.414,-0.128 0.542,0 0.559,0.559 0.787,1.575 1.084,2.168 0.43,0.86 1.81,1.268 2.168,1.626 0.128,0.128 -0.128,0.414 0,0.542 0.314,0.314 1.854,0.77 2.168,1.084 0.128,0.128 -0.081,0.38 0,0.542 1.128,2.255 -0.037,-0.579 1.084,0.542 0.128,0.128 -0.128,0.414 0,0.542 0.496,0.496 3.514,1.551 4.335,2.168 1.47,1.102 2.675,3.505 4.335,4.335 1.597,0.799 3.647,1.183 5.419,2.168 2.362,1.312 4.799,2.838 7.045,4.335 0.802,0.534 1.31,1.739 2.168,2.168 0.307,0.154 2.591,1.507 2.71,1.626 0.029,0.029 1.054,1.596 1.084,1.626 0.128,0.128 0.414,-0.128 0.542,0 0.128,0.128 -0.128,0.414 0,0.542 0.2,0.2 3.905,2.024 4.335,2.168 0.343,0.114 0.741,-0.114 1.084,0 1.078,0.359 1.684,2.197 2.71,2.71 0.335,0.167 1.967,0.341 2.168,0.542 0.128,0.128 -0.128,0.414 0,0.542 0.355,0.355 1.896,0.27 2.168,0.542 0.128,0.128 -0.128,0.414 0,0.542 0.255,0.255 0.828,-0.255 1.084,0 0.128,0.128 -0.128,0.414 0,0.542 0.223,0.223 1.264,0.421 1.626,0.542 2.166,0.722 3.272,2.325 4.724,4.131z",
            transform: `scale(100%)`,
        index : 1,
        },
        descent: {
            eng: {
                name: "News",
                title: ""
            },
            ru: {
                name: "Вести",
                title: ""
            },
            contourD: "m 497.65486,846.07857h 19.26617l 46.36941,-81.96284 39.45308,-117.68597 10.13014,-9.49701 10.76328,-6.33134 24.58426,-0.13091 26.09138,2.99409 8.34069,0.6416 -10.47933,28.23002 14.32888,2.78023 7.6991,-0.64159 3.84954,-4.91887 15.18433,4.49114 38.49549,59.24027 37.2123,-2.99409 -5.34659,-20.31706 -81.18868,-141.34829 -8.96386,-1.79277 -17.21062,-28.68437 -21.87182,15.41785 25.09881,20.43761 -16.68392,-1.9818 -25.33894,-15.59982 -10.34909,-59.37671 9.1901,-18.01111 14.00981,-5.83742 3.50245,-2.91871 1.75123,-6.12929v -7.88052l -0.29187,-7.58865 -1.75123,-4.66994 -1.75123,-6.71303 15.1773,-9.33988 -8.75613,-11.0911 -7.29678,-8.46426 -8.75613,-5.25368 -10.21549,-6.12929 -9.63175,-2.62684H 607.6756l -7.00491,3.50245 -9.92361,6.42117 -3.79433,5.54555 -4.37806,7.58865 -2.91871,7.29677 -1.45936,4.0862 -34.73266,2.33497 13.71794,-23.34969 8.46426,-4.66994 4.0862,-3.79432v -5.54555l -0.87561,-5.83742 -6.2837,-4.52589 -0.94038,-1.80638 227.60009,-100.61211 -24.01182,10.66135 -15.5896,-0.57035 -2.53489,-5.76689 22.82617,-17.4534 -3.92077,-2.90427 -24.10546,-9.87453 -2.32341,-5.51811 0.29042,-5.66334 -7.98675,-8.5676 -1.74256,-7.40589 -1.0165,-9.87453 -4.3564,-10.16495 -12.34316,0.14521 -8.85803,-6.09897 5.11627,-12.66877 5.12296,2.84608 5.40757,0.56922 10.53053,-0.56922 3.98453,-3.13069 1.99226,-7.11523 -1.99226,-8.25366 -0.85383,-5.12296 25.89942,-26.18402 -0.28461,-25.61481 -36.14534,-0.56921 -26.77366,-29.254047 -10.25401,-0.42725 -0.8545,-14.099267 0.8545,-3.418005 -12.39027,-5.981507 34.18005,-16.66277 -11.53577,-12.390265 11.53577,-3.845255 6.836,2.136253 -3.418,-5.127006 -7.69051,-6.408758 -14.95377,9.826762 -14.95377,15.381018 -9.39951,11.108514 -9.82676,3.845255 9.39951,8.97226 -10.25401,7.69051 -3.84525,8.11776 -22.64428,5.981507 -9.39951,-3.418004 -5.55426,-11.535764 -41.4433,-0.854501 -8.54501,4.699755 -11.10851,-0.854501 -4.69976,-5.981507 -29.90754,10.681263 -17.51727,-2.136253 5.12701,-10.681262 129.02966,-33.752791 -129.02966,33.32554 -0.8545,-8.11776 20.93527,-24.353279 -27.34403,24.353279 -24.35328,5.554257 -11.10851,-0.427251 -5.12701,2.563503 -183.71772,-4.699755 189.69923,10.681263 1.28175,2.990753 -134.58391,39.734296 7.69051,0.42725 130.73866,-39.307045 5.55425,1.709002v 6.836009l 11.96302,-0.854501 2.99075,5.554256 -15.38102,7.69051 -3.84525,8.972259 -45.28856,26.48953 -1.709,17.94453 -161.07345,93.99511 -23.92602,-14.52652 8.11776,-9.39951 -5.12701,-1.28175 16.23552,-35.88904h -5.55426l -14.52652,35.88904 -8.11776,0.42725 -7.6905,-6.83601h -8.97227l 10.25402,7.26326 -5.55426,5.55426 -2.99075,4.69975 3.418,3.84526 27.34403,28.62578 0.8545,3.84526h 14.52652l 21.36253,-10.68127 2.99075,3.84526 11.53577,0.42725 16.66277,-7.26326 1.28175,-12.39027 49.13381,-17.51727 91.43161,29.48029v 9.82676l -10.25401,3.84526h -8.11776l -0.85451,4.2725 -0.8545,8.97226 5.55426,5.12701 8.54501,3.418 11.10851,-1.28175 5.55426,-8.11776 5.12701,-7.26326 14.95377,-20.93527 165.7732,-64.51483 10.25401,7.69051 5.98151,2.99075 -2.56351,3.41801 4.69976,3.418 10.25401,1.709 26.91678,21.78978 -5.55425,6.83601 2.5635,21.36252 11.96301,17.51727 9.82677,20.93528 3.418,3.84525 9.94943,2.04776 -174.98641,77.61967 -9.77578,-4.10583 -16.4233,0.58655 -2.73722,7.03856v 7.42959 1.56412l -42.62239,18.18295 -20.33361,-7.23408 -13.29506,-17.5964 -3.51928,-4.69237 26.59011,-19.35604 -26.19908,0.19552 0.58655,-27.95872 -18.37846,-11.14439 -19.74707,-3.32376 -1.75964,-8.60269 -8.7982,-4.49686 -7.03856,-1.95515 -10.36233,3.51928 -8.21165,2.34619 11.92645,1.17309 9.38474,2.93273 8.60269,6.64753 4.69237,4.69237 8.01614,17.98743 -7.62511,21.89774 7.82062,9.18923 1.56413,6.64753 6.2565,8.01614 8.40716,8.01614 3.7148,7.23407 16.03227,3.91031 0.58655,7.42959 6.06098,6.45202 -141.04625,66.00202 -4.81911,71.08188 10.24061,13.85495h 8.43344l 43.372,22.89078 2.46788,1.41409 -8.63721,8.63721 -31.38186,-8.63721 31.38186,48.65629 -30.51814,1.43953 -70.82513,-87.81164 -5.18232,10.36466 -71.81229,-28.9072 4.99218,-34.57199 -7.24207,-14.72049 -33.26896,24.71708 -6.26503,26.60626 17.55264,23.38239 -16.54817,8.27408c -3.40274,-4.5685 -7.62992,-8.44635 -11.69186,-11.9272 -4.63571,-3.97256 -9.20101,-7.42804 -14.60532,-10.80296l -10.93618,22.73016 -20.685209,47.28047 -13.593134,2.95503 13.002129,-41.96142 -56.736562,21.27621 56.736562,-21.86721 26.595264,-100.471 13.00213,-2.95503 17.13917,-31.91431 13.59313,13.00213 4.13704,4.72804 14.18414,-21.86721 -18.32118,1.18201 -4.13704,-11.22911 -0.591,-5.91006 0.591,-8.27408 3.54604,-8.86509 -16.54817,-4.13704 -3.54603,-5.91006h -7.68308 -7.09207l -8.27408,-2.36402 -8.86509,-2.95503 -8.27408,-4.13704 -13.00213,-8.27409 -2.364023,-10.6381v -7.09207l 2.364023,-11.22911 4.728047,-8.27408 6.501063,-5.91006 9.4561,-4.13704 11.22911,-1.77302 17.13917,1.77302 7.68307,3.54603 8.27408,6.50107 6.50107,6.50106 5.91006,6.50106 2.95503,0.59101 14.77514,-4.72805 14.18414,-2.36402 15.36616,2.36402 15.36615,4.72805 -24.82225,-42.55242 26.00426,-11.82012 23.64023,58.50958 8.86509,1.18201 5.31905,-10.0471h 14.18414l 13.59314,3.54604 6.50106,6.50106 2.95503,13.00213 5.31905,6.50107 11.82012,9.45609 -5.91006,7.09207 -8.27408,10.0471 20.0942,44.32544 -1.77302,19.50319 -4.72804,10.63811 -0.18052,2.22947 207.13465,-94.32264 1.60777,7.50294 -97.27022,125.40623 19.82919,15.80976 5.35924,-6.43109 18.22142,11.79033 2.94759,44.21374 8.84274,25.99232v 52.52055l 19.02531,19.56123 15.00587,35.90692 -1.07185,22.77677 -37.78264,65.6507z",
            transform: `scale(94%)`,
            textExclusion: `2`,
        },
        janitor: {
            eng: {
                name: "Pablo",
                title: ", Janitor",
            },
            ru: {
                name: "Павел",
                title: ", Уборщик",
            },
            contourD: "m 214.9463,233.50009 -3.78649,-0.25243 -3.78649,-1.64081 -4.29135,-2.14568 -3.1554,-2.27189 -1.89325,-2.14568 -1.89324,-2.65054 -1.00973,-3.40784v -3.66027l 0.25243,-3.66027 1.51459,-3.02919 1.89325,-4.03892 1.89324,-3.28163 0.37865,-3.40783 -1.38838,-3.53406 -3.1554,-2.77676 -2.65055,-3.02919 -2.65054,-2.65054 -2.14567,-3.15541 -1.13595,-3.1554 -1.13595,-3.53406 0.12622,-1.13595 -4.29135,-1.64081 0.12621,-5.67973 6.81568,1.89325 1.89325,-0.50487 3.40783,-0.12622 3.0292,0.7573 3.78648,1.26216 1.26217,0.50487 -0.12622,-2.52433 -1.64081,-8.33027 -0.50487,-6.94189 -0.63108,-6.43703v -3.40784l -4.79622,2.65054 -2.65054,-0.25243 0.25243,-2.52433 3.28163,-4.41757 2.27189,-2.39811 -0.25243,-3.28162 0.37865,-3.02919 -0.88352,-1.00973 0.12622,-3.91271 -0.63108,-1.38837 -0.25244,-7.6992 -0.12621,-1.38838 -3.53406,1.00973 -2.65054,0.88352 -1.76703,0.25243v -2.01946l 2.39811,-2.65054 2.65054,-3.02919 2.77676,-2.39811 1.13595,-0.88351 -0.37865,-7.194331 -3.78649,0.757297 -3.02919,0.883514 -2.65054,1.26216 1.38838,-2.398106 2.14568,-2.524325 2.3981,-2.39811 3.15541,-2.145676 3.78649,-2.01946 3.15541,-1.388379 2.52432,-0.757298 0.25243,-1.767028 -4.16513,-1.388378 -3.91271,-1.009731 -3.53405,-0.631081 -4.03892,-0.631081 -3.78649,0.126216 -4.03892,-0.252433 -2.14568,0.504866 1.89325,-1.893244 3.02919,-2.524326 2.65054,-2.01946 3.40784,-1.893244 3.78648,-1.767028 5.55352,-2.145676 4.92243,-1.135947 4.92244,-0.631081 4.29135,-0.504865 1.38838,-0.252433 -2.77676,-1.514595 -2.90297,-1.388379 2.39811,-1.262162 4.54378,-1.388379 3.91271,-0.504865 3.40784,0.126216 2.65054,0.504865 -2.52433,-2.776758 -1.09413,-1.168022 -5.56237,-5.87841 -1.58022,-1.074548 -1.70663,-1.200966 -3.22364,-2.717974 4.61423,-1.643427 8.72201,-0.280384 4.49572,1.057817 3.61421,0.969666 2.99714,1.057817 4.05497,1.498574 3.79051,1.23412 1.85118,0.881514 -0.79336,-3.70236 -0.79337,-2.027482 -1.67487,-1.674877 -2.02749,-1.85118 -2.20378,-1.851179 -1.93933,-1.674877 -0.79336,-0.61706 7.84547,0.440757 3.79051,0.528908 3.0853,0.705212 3.17345,1.145968 3.26161,0.264454 -1.85118,-7.933627 -0.88152,-2.820845 -1.32227,-2.908997 -1.05782,-2.380088 -1.23412,-1.674877 -0.96966,-1.674877 -1.93933,-2.203785 -2.02749,-2.556391 -1.93933,-1.498574 -2.38009,-1.85118 7.14027,1.674877 4.76018,1.410422 2.64454,1.145969 2.82084,1.322271 3.0853,1.145968 3.34976,2.203786 4.40757,2.556391 5.37723,4.054965 3.43791,2.908997 1.14597,1.057817 1.32227,-4.31942 0.96966,-3.349754 0.52891,-2.997148 0.0881,-2.997148v -1.939331l -0.44075,-2.115634 -0.88152,-1.939331 -1.14597,-1.410423 -1.05781,-1.234119 12.42935,4.672025 2.99715,1.498574 3.52605,1.498574 2.29194,1.498574 4.58387,2.291937 5.20094,2.908996 1.76302,1.145969 1.76303,1.322271 0.88152,1.23412 1.85118,1.410422 4.40757,-4.495722 3.79051,-3.349754 3.79051,-2.468239 8.90329,-4.760177 3.2616,-0.881514 3.26161,-0.352606 0.5289,0.264455 -1.93933,4.319419 -1.23412,2.46824 -1.05781,2.908996 -0.79337,2.380089 -0.70521,2.997148 -0.1763,2.556391 3.79051,-2.203786 13.77708,-6.743087 7.9452,-1.350684 7.23013,-0.158904 8.1041,0.317808 8.1041,1.112328 4.05205,1.112328 3.17808,1.19178 2.86028,1.271231 0.95342,1.112328 -0.31781,0.635616 -3.49589,0.158904 -6.1178,-0.238356 -5.56164,0.476712 -3.81369,0.635616 -5.08493,0.953424 -5.00548,1.271232 -6.1178,2.38356 -3.8137,2.621915 1.43014,1.430136 3.65479,-1.668492 3.33699,0.238356 2.1452,0.715068 2.62192,1.112328 2.62191,1.271232 3.33698,1.9863 1.6685,1.430135 2.70136,2.065752 2.38356,1.827396 0.39726,1.906848 0.23836,1.668491 6.03835,-0.873971 6.75342,-0.158904 7.38903,1.350683 6.99178,1.668492 3.33698,1.668492 3.33699,1.350684 3.89314,2.38356 5.56164,2.780819 2.86028,2.463012 3.49588,2.860271 1.58904,1.271232 1.74795,1.668492 1.74794,1.58904 2.46301,2.38356 2.22466,2.224655 -4.76712,-1.032876 -3.57534,-0.953423 -3.89315,-0.476712 -4.92602,-0.07945 -4.60822,0.39726 -3.33698,1.589039 3.17808,2.621916 3.17808,3.336984 2.06575,2.621915 2.1452,2.463012 1.74795,3.416436 -2.14521,-0.953424 -3.17808,-1.509588 -4.21095,-0.873972 -4.29041,0.238356 -4.05205,0.953424 -2.62192,4.449311 2.62192,2.701368 2.22466,2.463012 2.46301,3.813692 2.46301,3.73424 2.46301,3.6548 1.74794,3.73424 2.06576,4.05205 1.35068,2.93972 1.35068,3.89315 1.03288,3.49589 0.79452,2.46301 1.03288,3.25753 -2.46302,-3.17808 -1.66849,-2.1452 -1.82739,-2.1452 -2.06576,-1.74795 -2.62191,-2.22465 -2.54247,-2.06576 -3.89314,-2.78081 -3.73425,-2.14521 -3.89314,-1.58904 -6.59452,0.47671 2.30411,1.90685 2.06575,1.66849 2.06575,1.8274 1.58904,1.74794 1.43014,1.8274 2.1452,2.38356 -6.1178,-3.57534 -1.8274,-0.23836 0.71507,4.44931 0.1589,2.46302 0.0795,3.17808 -0.23836,4.1315 -0.55616,3.01917 1.74794,0.31781 2.22466,2.06575 3.17808,3.01918 3.01917,2.93972 4.76712,4.36986 3.8137,3.89315 2.46301,2.54246 3.73424,3.57534 4.84657,5.00548 4.05205,4.05205 2.54247,3.09863 2.38356,3.41643 0.95342,1.8274 0.39726,1.27123 1.9863,1.11233 2.54247,6.83287 -1.03288,0.55616 -5.72054,-5.16438 -4.68767,-3.01917 -3.41644,-1.8274 -3.57534,-1.82739 -5.48218,-1.90685 -4.44932,-1.8274 -3.65479,-0.95342 -5.00547,-1.50959 -4.05205,-0.95342h -3.8137l 0.71507,3.65479 -0.31781,3.8137 -1.35068,5.08492 -1.03288,3.9726 -0.87397,4.92603 -0.63562,4.1315 -0.0795,1.50959 0.87397,0.87397 1.03288,1.9863 0.0794,1.82739 -0.47671,2.30411 -2.30411,2.22466 0.15891,3.17808 -0.15891,1.74794 1.03288,1.74795 0.31781,2.46301 -0.23836,7.78629 -2.93972,5.08493 0.0795,7.38903 -1.19178,3.41644 -0.0795,4.92602 -1.35069,7.9452 -0.87397,4.44931 -0.71507,4.44932 -1.27123,5.16437 -2.54246,8.34246 -2.30411,6.67397 -3.09863,9.13698 -2.62191,7.15068 -3.89315,8.02465 -3.49589,5.72054 -4.1315,6.35616 -5.64705,5.88666 -7.94613,6.26521 -6.87646,2.29216 -3.20901,1.5281 0.45843,1.68091 -4.73712,11.61357 -1.83372,8.86299 1.67533,-0.0387 5.82871,3.43989 3.53544,3.15324 5.06429,5.15983 2.1977,3.53545 2.57992,1.71994 5.73315,2.19771 4.39542,1.8155 5.44649,1.33773 2.77103,0.47777 22.90643,9.43269 11.298,8.77257 10.63342,10.63341 12.09551,13.95636 10.10174,14.35511 3.19003,5.44962 7.31047,14.48803 6.91172,15.0197 7.97506,19.14014 3.98753,13.69052 2.12668,9.96883 0.13292,0.53167 -23.39351,17.54513 -10.76633,7.17756 -11.56384,8.10798 -18.60848,11.03216 -2.92419,0.79751 -2.2596,0.53167 -15.95012,6.38005 -12.36134,4.65212 -14.48803,4.91795 -2.79127,-2.39252 -4.65212,0.53167 -3.58878,1.59502 -9.0384,-0.13292 -0.66459,-1.19626 -4.12045,0.13292v 0.93042l -5.3167,-0.39875 -2.12669,-1.19626 -26.84937,-0.39875 -38.67904,-3.19003 -41.73615,-4.65212 -6.24713,-1.72793 -31.23566,-12.49426 -18.34264,-9.0384 -20.73516,-12.22843 -17.54513,-12.36134 -8.63965,-7.17756 -14.22219,-13.15885 -5.31671,-5.98129 -3.32294,-4.38629 -0.93042,-2.52543 1.72793,-0.13292 1.86084,-5.18379 5.71546,-9.17132 8.37382,-11.96259 15.28553,-18.87431 9.83591,-10.63341 13.15885,-13.42469 13.5576,-12.22843 8.63965,-7.44339 9.0384,-7.04463 9.96883,-6.64589 4.65212,-2.2596 0.93042,0.39876 4.65212,-1.99377 4.78504,-1.19626 4.25336,0.26584 -1.32917,-3.58878 -0.13292,-4.5192 1.99376,-4.91796 2.25961,-3.32294 3.0571,-3.72169 3.05711,-3.85462 1.59501,-1.32917 0.66459,-4.12045 2.92419,-3.45586 4.25336,-3.58878 5.44963,-3.0571 4.91795,-1.99377 4.65212,-1.06334 0.93042,-8.10798 -0.39875,-8.37381 -0.39875,-9.17132 -0.93042,-7.84215 -1.4621,-7.5763 -0.13292,-2.92419 -12.09551,-15.0197 -3.98753,-5.18379 -3.72169,-4.78504 -3.58878,-6.11421 -2.52543,-4.65212 -4.05307,-8.60514 -1.97594,-4.44586 -1.29671,-3.64314 -0.30874,-2.40818z",
            transform: `scale(138%)`,
        },
        sam: {
            eng: {
                name: "Sam",
                title: "",
            },
            ru: {
                name: "Сэм",
                title: "",
            },
            contourD: "m 25.491525,250.16949 5.01695,-3.25424 -0.20339,-0.88135 -4.474576,-2.50848 2.847457,-3.11864 -2.915254,-3.79661 6.305085,-6.50847 -2.644068,-3.86441 0.0678,-9.9661 0.881356,-6.84746 0.745763,-5.62712 2.711865,-10.30508c 0,0 2.169491,-3.86441 2.237288,-4.20339 0.0678,-0.33899 2.372881,-4.1356 2.644067,-4.81356 0.271187,-0.67797 1.694916,-3.32204 1.694916,-3.32204l 5.694915,-8.20339c 0,0 3.186441,-2.10169 3.457627,-2.44068 0.271187,-0.33898 1.627119,-3.18644 1.627119,-3.18644l 1.423729,-5.69491 1.084745,-5.9661 2.644068,-2.57627 3.254237,-1.76272 2.915255,-1.8305 1.898305,-8.54238L 64,135.79661l -0.881356,-2.57627 1.152543,-7.79661 1.355932,-3.11865 2.576271,-1.8983 2.576271,-0.27119 2.576271,0.27119 1.220339,0.40678 2.576271,0.40678 1.762712,0.27119 3.118644,-0.94916 2.847458,-0.94915c 0,0 2.169492,-1.49152 2.711864,-1.8983 0.542373,-0.40678 2.576272,-2.44068 2.576272,-2.44068l 1.355932,-2.71187 0.677966,-1.8983 -4.378331,-5.75257 -7.095037,-7.478552 -1.72582,-6.711522 -3.45164,-5.369218 -2.684609,-5.369217 0.191758,-2.301094 0.575273,-3.835155 0.767031,-3.45164 1.150547,-3.643398 -0.575273,-5.752733 -1.150547,-4.026913 -1.534062,-3.259882 -0.224883,-0.539634 -9.355932,3.796611 5.830508,-17.220339v -1.01695l -2.508475,-0.135593 0.135594,-2.644068c 0,0 -0.40678,-1.966101 -0.338983,-2.305084 0.0678,-0.338983 0.406779,-3.050848 0.474576,-3.457627 0.0678,-0.40678 0.542373,-1.966102 0.542373,-1.966102l 1.226551,-3.179001 1.246425,-2.396972 1.534063,-2.301093 1.917577,-2.109336 1.438184,-2.109335 1.72582,-1.72582 2.013456,-1.821699 2.492851,-1.534062c 0,0 3.068124,-1.4381834 3.45164,-1.6299412 0.383516,-0.1917578 3.068124,-0.86291 3.547519,-1.0546677 0.479394,-0.1917578 5.17746,-1.5340622 5.17746,-1.5340622l 2.109335,-0.3835156 2.780488,-0.1917577 2.780483,-0.4793945 3.35577,-0.2876366 3.73927,-0.095879 3.73928,-0.095879h 3.06812l 2.68461,0.095879 2.68461,0.4793944 3.164,0.5752733 3.73928,1.5340622c 0,0 2.30109,0.7670311 2.68461,0.86291 0.38351,0.095879 2.49285,1.2464256 2.49285,1.2464256 0,0 2.58873,1.534062 2.97225,1.629941 0.38351,0.09588 2.10933,0.958789 2.10933,0.958789l 2.20522,1.342304 1.53406,1.342305 1.62994,1.534062 1.62994,2.684609c 0,0 0.57527,1.534062 0.86291,2.013456 0.28764,0.479395 0.86291,2.876367 0.86291,2.876367 0,0 0.19176,1.917578 0.19176,2.396972 0,0.479394 0.19176,2.58873 0.19176,2.58873l 0.0959,1.917578 -0.19175,1.917577 -0.67116,1.72582 -0.57527,1.629941 1.91758,15.820017 1.3423,2.396972 0.95879,0.671152 0.86291,0.86291 0.95879,1.917578 0.57527,1.438183 0.19176,1.821699 0.28764,2.396972 0.0959,2.492851 -0.0959,2.301093 -0.4794,2.109336 -0.38351,1.917577c 0,0 -0.0959,2.013457 -0.19176,2.396972 -0.0959,0.383516 -0.19176,2.301094 -0.19176,2.301094l 4.02692,0.191757 8.1497,-0.287636 3.83516,-0.191758 -8.14971,-12.656013 2.39697,-0.479394 14.95711,3.355761 2.10934,0.09588 1.15054,-0.86291 7.2868,-33.749368 -1.15055,-1.342305 0.86291,-3.931034 11.02607,0.479395 -0.28763,4.026913 -2.78049,0.958789 -6.90328,33.941125 2.68461,0.958789 -0.4794,3.835155 -3.93103,1.534063 -2.01346,9.012615 -0.28763,0.383515 9.20437,0.575274 1.3423,0.767031 0.4794,1.534062 -0.38352,0.86291 -0.47939,0.671152 -0.67116,0.958789 -0.76703,1.054668 -0.76703,0.86291 -0.86291,1.438183 3.25988,3.068124 2.10934,2.876367 1.15055,2.013457 1.53406,2.588724 1.62994,2.10934 0.95879,2.30109 1.05467,2.3011 1.15054,1.91757 1.05467,2.87637c 0,0 0.86291,2.49285 1.05467,2.97225 0.19176,0.47939 0.47939,1.3423 0.67115,1.72582 0.19176,0.38351 0.67115,1.72582 0.67115,1.72582l -0.19175,1.82169c 0,0 -0.4794,1.34231 -0.67116,1.72582 -0.19175,0.38352 -1.05466,2.10934 -1.05466,2.10934l -0.57528,1.8217 -0.47939,2.68461 0.57527,2.58873 4.31455,5.94449 2.01346,3.25988 2.39697,3.83516 1.8217,4.12279c 0,0 1.62994,3.6434 1.8217,4.02691 0.19176,0.38352 1.8217,3.93104 2.01345,4.31455 0.19176,0.38352 1.05467,3.35576 1.34231,3.93104 0.28764,0.57527 1.3423,3.25988 1.43818,3.64339 0.0959,0.38352 1.24643,2.3011 1.62994,2.87637 0.38352,0.57527 1.34231,2.97225 1.53406,3.35576 0.19176,0.38352 5.08159,14.47771 5.08159,14.47771l 1.15054,3.54752 0.4794,2.68461 0.95879,3.73928c 0,0 0.67115,3.25988 0.76703,3.93103 0.0959,0.67115 0.38351,3.83516 0.38351,3.83516l 0.19176,3.83515 2.78049,6.71152 0.57527,15.4365 -0.47939,3.16401 -0.4794,3.164 -0.0959,3.83516 -0.47939,3.83515 -0.28764,4.02692 0.19176,2.01345 -51.7746,0.86291h -28.09251l -37.10513,-0.28763z",
            transform: `scale(315%)`,
        },
    },

    // Stats
    stat: {
        support: {
            meta: {
                name: "support",
                eng: {
                    text: "Support"
                },
                ru: {
                    text: "Власть"
                },
            },
            democratic: {
                name: "democratic",
                eng: {
                    text: "Democratic"
                },
                ru: {
                    text: "Демократическая"
                },
            },
            elitarian: {
                name: "elitarian",
                eng: {
                    text: "Elitarian"
                },
                ru: {
                    text: "Элитарная"
                },
            },
            aesthetic: {
                name: "aesthetic",
                eng: {
                    text: "Aesthetic"
                },
                ru: {
                    text: "Эстетическая"
                },
            },
            patriotic: {
                name: "patriotic",
                eng: {
                    text: "Patriotic"
                },
                ru: {
                    text: "Патриотическая"
                },
            },
        },
        capital: {
            meta: {
                name: "capital",
                eng: {
                    text: "Capital"
                },
                ru: {
                    text: "Капитал"
                },
            },
            treasury: {
                name: "treasury",
                eng: {
                    text: "Treasury"
                },
                ru: {
                    text: "Казна"
                },
            },
            tax: {
                name: "tax",
                eng: {
                    text: "Taxrate/y"
                },
                ru: {
                    text: "Налог/г"
                },
            },
            gdp: {
                name: "gdp",
                eng: {
                    text: "GDP"
                },
                ru: {
                    text: "ВВП"
                },
            },
            growth: {
                name: "growth",
                eng: {
                    text: "Growth/y"
                },
                ru: {
                    text: "Рост/г"
                },
            },
        },
        military: {
            meta: {
                name: "military",
                eng: {
                    text: "Military"
                },
                ru: {
                    text: "Армия"
                },
            },
            manpower: {
                name: "manpower",
                eng: {
                    text: "Manpower"
                },
                ru: {
                    text: "Мобресурс"
                },
            },
            manpowerChange: {
                name: "manpowerChange",
                eng: {
                    text: "Manpower/q"
                },
                ru: {
                    text: "Мобресурс/к"
                },
            },
            supplies: {
                name: "supplies",
                eng: {
                    text: "Supplies"
                },
                ru: {
                    text: "Снабжение"
                },
            },
            suppliesChange: {
                name: "suppliesChange",
                eng: {
                    text: "Supplies/q"
                },
                ru: {
                    text: "Снабжение/к"
                },
            },
        },
        extra: {
            meta: {
                name: "extra",
                eng: {
                    text: "Info"
                },
                ru: {
                    text: "Инфа"
                },
            },
            relations: {
                name: "relations",
                eng: {
                    text: "Foreign Relations"
                },
                ru: {
                    text: "Иностранные дела"
                },
            },
            score: {
                name: "score",
                eng: {
                    text: "Years in power"
                },
                ru: {
                    text: "Годы у власти"
                },
            },
            election: {
                name: "election",
                eng: {
                    text: "Election in"
                },
                ru: {
                    text: "До выборов"
                },
            },
            language: {
                name: "language",
                eng: {
                    text: "Exit to menu"
                },
                ru: {
                    text: "Выход в меню"
                },
            },
        },
    },

    // Relations
    relation: {
        west: {
            meta: {
                name: "west",
                eng: {
                    text: "The West",
                    textNoCap: "the West"
                },
                ru: {
                    text: "Запад"
                },
            },
            warWest: {
                name: "warWest",
                eng: {
                    text: "Relations"
                },
                ru: {
                    text: "Отношения"
                },
            },
            provocationsWest: {
                name: "provocationsWest",
                eng: {
                    text: "Provocations"
                },
                ru: {
                    text: "Провокации"
                },
            },
            diplomaticWest: {
                name: "diplomaticWest",
                eng: {
                    text: "Influence"
                },
                ru: {
                    text: "Влияние"
                },
            },
            growthWest: {
                name: "growthWest",
                eng: {
                    text: "Nat. GDP"
                },
                ru: {
                    text: "Нац. ВВП"
                },
            },
        },
        pandea: {
            meta: {
                name: "pandea",
                eng: {
                    text: "Pandea"
                },
                ru: {
                    text: "Пандея"
                },
            },
            warPandea: {
                name: "warPandea",
                eng: {
                    text: "Relations"
                },
                ru: {
                    text: "Отношения"
                },
            },
            provocationsPandea: {
                name: "provocationsPandea",
                eng: {
                    text: "Provocations"
                },
                ru: {
                    text: "Провокации"
                },
            },
            diplomaticPandea: {
                name: "diplomaticPandea",
                eng: {
                    text: "Influence"
                },
                ru: {
                    text: "Влияние"
                },
            },
            growthPandea: {
                name: "growthPandea",
                eng: {
                    text: "Nat. GDP"
                },
                ru: {
                    text: "Нац. ВВП"
                },
            },
        },
        honti: {
            meta: {
                name: "honti",
                eng: {
                    text: "Khonti"
                },
                ru: {
                    text: "Хонти"
                },
            },
            warHonti: {
                name: "warHonti",
                eng: {
                    text: "Relations"
                },
                ru: {
                    text: "Отношения"
                },
            },
            provocationsHonti: {
                name: "provocationsHonti",
                eng: {
                    text: "Provocations"
                },
                ru: {
                    text: "Провокации"
                },
            },
            diplomaticHonti: {
                name: "diplomaticHonti",
                eng: {
                    text: "Influence"
                },
                ru: {
                    text: "Влияние"
                },
            },
            growthHonti: {
                name: "growthHonti",
                eng: {
                    text: "Nat. GDP"
                },
                ru: {
                    text: "Нац. ВВП"
                },
            },
        },
        island: {
            meta: {
                name: "island",
                eng: {
                    text: "Leisk Empire"
                },
                ru: {
                    text: "Империя Лейск"
                },
            },
            warIsland: {
                name: "warIsland",
                eng: {
                    text: "Relations"
                },
                ru: {
                    text: "Отношения"
                },
            },
            provocationsIsland: {
                name: "provocationsIsland",
                eng: {
                    text: "Provocations"
                },
                ru: {
                    text: "Провокации"
                },
            },
            diplomaticIsland: {
                name: "diplomaticIsland",
                eng: {
                    text: "Influence"
                },
                ru: {
                    text: "Влияние"
                },
            },
            growthIsland: {
                name: "growthIsland",
                eng: {
                    text: "Nat. GDP"
                },
                ru: {
                    text: "Нац. ВВП"
                },
            },
        },
    },

    //Relation history
    relationHistory: {
        west: {
            eng: `long-running success in war and diplomacy gave this country superpower #1 status. Unsurprisingly, it is the West who brought democracy to the YSF. Area: `,
            ru: `многочисленные военные и дипломатические победы обеспечили этой стране статус мировой сверхдержавы #1. ФЖС ему обязана своей демократией. Площадь: `,
        },
        pandea: {
            eng: `old seafaring capital of the Kingdom, famous for its many ports and prosperous trade industry. After obtaining independance, she developped representative democracy. Area: `,
            ru: `бывшая морская столица Королевства и важный хаб морской торговли. Получив независимость, она развила представительную демократию. Площадь: `,
        },
        honti: {
            eng: `a large but mostly empty former member of the Kingdom, long renowned for her agricultural industry and natural resources. Upon gaining independence, she fell under the srict rule of a socially-oriented president. Area: `,
            ru: `большой, но пустой бывший член Королевства. Издавна прославлялась своей сельскохозяйственной индустрией и природными ресурсами. Получив независимость, она попала под жёсткое правление социально-ориентированного президента. Площадь: `,
        },
        island: {
            eng: `a historically militaristic land, who had little contact with the Kingdom because of cultural and genetic differences. Leisk has experienced an industrial boom over the past decade. Area: `,
            ru: `исторически воинственная страна, которая из-за культурной и генетической разницы холодно относилась к северным странам. Лейск силён в промышленности. Площадь: `,
        },
        country: {
            nameDisplay: {
                eng: `Yellow Sector Federation (YSF)`,
                ru: `Федерация Жёлтый Сектор (ФЖС)`,
            },
            eng: `The largest country on the Domain island, the United Domain Kingdom's (UDK) successor. After the Kingdom's dissolution, its first democratically elected president took power. Area: `,
            ru: `крупнейшая страна на доменском острове, наследница Доменского Союзного Королевства (ДСК). После его распада, она получила своего первого демократически избранного президента. Площадь: `
        },
        disaster: {
            nameDisplay: {
                eng: `"Heaven Stairway" DMZ`,
                ru: `ДМЗ «Небесная Лестница»`,
            },
            eng: `exclusion zone formed in 2021 as a result of an incident involving the failed launch of a low-orbit irrigation system. It has been declared demilitarized, as troops cannot in principle survive the zone.`,
            ru: `зона отчуждения, образованная в 2021 после крупномасштабного происшествия - неудачного запуска низкоорбитальной системы орошения. Зона объявлена демилитаризованной, т.к. войска в принципе не могут в ней выжить.`
        },
        default: {
            nameDisplay: {
                eng: `Foreign affairs`,
                ru: `Иностранные дела`,
            },
            eng: `Mouse over or tap territories to see information!`,
            ru: `Пожалуйста, пощупай территории, чтоб увидить о них информацию!`,
        },
    },

    // вц. Interface Elements
    elementsInterface: {
        play: {
            continue: {
                eng: {
                    text: "Continue Game",    
                },
                ru: {
                    text: "Продолжить Игру",
                },
            },
            start: {
                eng: {
                    text: "Start Game",    
                },
                ru: {
                    text: "Начать Игру",
                },
            },
        },
        reset: {
            continue: {
                eng: {
                    text: "Reset Data",    
                },
                ru: {
                    text: "Стереть Данные",
                },
            },
            start: {
                eng: {
                    text: "Reset Data",    
                },
                ru: {
                    text: "Стереть Данные",
                },
            },
        },
        returnFromRelation: {
            eng: {
                text: "Leave (Shortcut: 'I')",    
            },
            ru: {
                text: "Покинуть (Нажми: 'I')",
            },
        },
    },
};

// ================================
// Caching char imgs + map.png
// ================================

// Cached images object
let imageCache = {};

// Up image
function upImage(src) {
    var img = new Image();
        img.src = src;
        imageCache[src] = img;
        return img;
};
// Down image
function downImage(src) {
    if (imageCache[src]) {
        // If cached, get
        return imageCache[src];
    } else {
        // Or upload, if not cached
        upImage(src);
    };
};

// Up images to cache
if (page === `game`) {
    const charArray = Object.keys(loc.character);
    for (let i = 0; i < charArray.length; i++) {
    upImage(`./graphical-assets/characters/${charArray[i]}.png`);
    };
} else if (page === `relation`) {
    upImage(`./graphical-assets/${`map`}.png`);
};

// ================================
// Initialization of localStorage() variables
// ================================

let initializeFromDefaultLocalStorage = function() {
    //gameStarted
    u(`gameStarted`, `1`);
    
    // stat
    // support
    u(`democratic`, `50`);
    u(`elitarian`, `50`);
    u(`aesthetic`, `50`);
    u(`patriotic`, `50`);
    // capital
    u(`treasury`, `20`);
    u(`tax`, `5`);
    u(`gdp`, `100`);
    u(`growth`, `0`);
    // military
    u(`manpower`, `0.5`);
    u(`manpowerChange`, `0.01`);
    u(`supplies`, `50`);
    u(`suppliesChange`, `0`);
    // extra
    u(`score`, `0`);
    u(`election`, `6`);

    //relation
    //west
    u(`warWest`, `Peace`)
    u(`provocationsWest`, `0`)
    u(`diplomaticWest`, `20`)
    u(`growthWest`, `300`)
    u(`milWest`, `1`)
    //pandea
    u(`warPandea`, `Peace`)
    u(`provocationsPandea`, `0`)
    u(`diplomaticPandea`, `20`)
    u(`growthPandea`, `70`)
    u(`milPandea`, `0.4`)
    //honti
    u(`warHonti`, `Peace`)
    u(`provocationsHonti`, `0`)
    u(`diplomaticHonti`, `20`)
    u(`growthHonti`, `50`)
    u(`milHonti`, `0.2`)
    //island
    u(`warIsland`, `Peace`)
    u(`provocationsIsland`, `0`)
    u(`diplomaticIsland`, `20`)
    u(`growthIsland`, `200`)
    u(`milIsland`, `0.6`)

    //areas
    u(`areaWest`, `1000`)
    u(`areaPandea`, `200`)
    u(`areaHonti`, `250`)
    u(`areaIsland`, `600`)
    u(`areaCountry`, `400`)

    //currentQuestion
    u(`currentQuestion`, `welcome`)

    //currentCharacter
    u(`currentCharacter`, `${loc.question[d(`currentQuestion`)].characters[0]}`)

    //nextQuestion
    u(`nextQuestion`, ``)

    //lastAnswer
    u(`lastAnswer`, ``)

    //Payment - Выплата
    u(`payment`, `0`)

    //decks in action
    uArray(`decks`, [`example`, `sample`]);
};

// ================================
// Stat update from localStorage() variables
// ================================

// Determine what needs translate / upd, stat or relation based on page
let statTypeINeed = `stat`; // Either `stat` or `relation`, default stat
if (page === `relation`) {
    statTypeINeed = `relation`;
} else if (page === `game`) {
    statTypeINeed = `stat`;
} else {
    statTypeINeed = `stat`; // Defaulting...
};

const updateStats = function () {
    // Break loc.stat into statArray for working
    const statArray = Object.keys(loc[statTypeINeed]); // stat
    // Iterate over all yellow p's
    for (let i = 0; i < statArray.length && i < 4; i++) {
        let yellowP = loc[statTypeINeed][statArray[i]]; // stat
        let yellowPQS = document.querySelector(`#`+loc[statTypeINeed][statArray[i]].meta.name); //stat
        // Break yellowP into yellowPArray for working
        const yellowPArray = Object.keys(yellowP);
        //Now, iterate over black th's in each p (stats)
        for (let i = 1; i < yellowPArray.length; i++) {
            // Name blackTH
            let blackTHname = yellowPArray[i];
            // Get blackTH actual
            let blackTH = yellowP[blackTHname];
            //Create selector
            let blackTHQS = document.querySelector(`#`+blackTH.name);
            //Selector obtained, updating sibling
            if (blackTH.name != `language` && blackTH.name != `relations`) {
                if (blackTH.name == `score` || blackTH.name == `election`) {
                    blackTHQS.nextElementSibling.nextElementSibling.textContent = d(blackTH.name); 
                } else {
                    const nummy = dnum(blackTH.name);
                    const nameOfStat = blackTH.name;
                    // Setting the limits
                    if (nameOfStat == `democratic` || nameOfStat == `elitarian` || nameOfStat == `aesthetic` || nameOfStat == `patriotic`) {
                        if (nummy > 100) {
                            u(blackTH.name, `${100}`)
                        };
                        if (nummy < 0) {
                            u(blackTH.name, `${0}`)
                        };
                    } else if (nameOfStat == `gdp`) {
                        if (nummy < 0) {
                            u(blackTH.name, `${0}`)
                        };
                    } else if (nameOfStat == `tax`) {
                        if (nummy > 100) {
                            u(blackTH.name, `${100}`)
                        };
                    } else if (nameOfStat == `supplies`) {
                        if (nummy > 100) {
                            u(blackTH.name, `${100}`)
                        };
                        if (nummy < 0) {
                            u(blackTH.name, `${0}`)
                        };
                    } else if (nameOfStat == `manpower`) {
                        if (nummy < 0) {
                            u(blackTH.name, `${0}`)
                        };
                    } else if (nameOfStat == `diplomaticWest` || nameOfStat == `diplomaticPandea` || nameOfStat == `diplomaticHonti` || nameOfStat == `diplomaticIsland` || nameOfStat == `provocationsWest` || nameOfStat == `provocationsPandea` || nameOfStat == `provocationsHonti` || nameOfStat == `provocationsIsland`) {
                        if (nummy < 0) {
                            u(blackTH.name, `${0}`)
                        };
                    };
                // Upload
                blackTHQS.nextElementSibling.textContent = d(blackTH.name); 
                };
            };
        };
    };
    // Future TODO: Animation that plays when stats update
    // For that, we will request +/- value from reactToAnswer()
    // Then, we will display change instead of number value,
    // flashing for 2 seconds
    // Yellow w/shadow will mean +, red w/shadow -
};
if (page === `game` || page === `relation`) {
    if (dnum(`gameStarted`) == 0) {
        // initializeFromDefaultLocalStorage();
    };
    updateStats();
};

// ================================
// drawChar - Display image, anim, name, on game.html
// also inits localStorage.currentChar
// ================================

const drawChar = function (currentChar) {
    // Find char on Loc branch
    const charBranchOnLoc = loc.character[currentChar];
    // Select #gameHtmlImg
    const characterTagSelected = document.getElementById(`gameHtmlImg`);
    // Change #gameHtmlImg to have new src
    characterTagSelected.src = downImage(`./graphical-assets/characters/${currentChar}.png`).src;
    // Select contours
    const contoursSelected = document.querySelectorAll(`path.scalablePath`);
    // Change contour based on content of currentChar
    for (let i = 0; i < contoursSelected.length; i++) {
        contoursSelected[i].setAttribute(`d`, `${charBranchOnLoc.contourD}`);
    };
    const characterDescSelected = document.querySelector(`#characterDesc`);
    characterDescSelected.textContent = `― ${charBranchOnLoc[lang].name}${charBranchOnLoc[lang].title}`;
};

// Update scale of up to 4 scalable paths
function updateScale() {
    //Find img.character
    const imgCharacter = document.querySelector(`img.character`);
    //Get width imgCharacter
    const widthImgCharacter = imgCharacter.clientWidth;
    //Set scale to equation w/ width of imgCharacter
    const newPathScale = widthImgCharacter * 0.00125;
    const scalablePaths = document.querySelectorAll('.scalablePath');
    //Break scalablePaths into array
    const scalablePathsArray = Object.keys(scalablePaths);
    for (var i = 0; i < scalablePathsArray.length; i++) {
        let toTransform = `default`;
        if (i === 0) {            
            toTransform = scalablePaths[i].classList[0];
        } else if (i === 1 && scalablePaths[i].classList[1]) {
            toTransform = scalablePaths[i].classList[1];
        } else if (i === 2 && scalablePaths[i].classList[2]) {
            toTransform = scalablePaths[i].classList[2];
        } else if (i === 3 && scalablePaths[i].classList[3]) {
            toTransform = scalablePaths[i].classList[3];
        };
        // First apply translation
        const character = d(`currentCharacter`);
        const transformation = loc.character[character].transform;
        // Now resize
        if (transformation) {
            document.querySelector(`.${toTransform}`).style.transform = `${transformation} scale(${newPathScale})`;
        } else {
            document.querySelector(`.${toTransform}`).style.transform = `scale(${newPathScale})`;
        };
        document.querySelector(`.${toTransform}`).style.display = `none`;
        document.querySelector(`.${toTransform}`).style.display = ``;
    };
};

// updateMapScale()
function updateMapScale() {
    //Find img.character
    const imgCharacter = document.querySelector(`img.character`);
    //Get width imgCharacter
    const widthImgCharacter = imgCharacter.clientWidth;
    //Set scale to equation w/ width of imgCharacter
    const newPathScale = widthImgCharacter * 0.00125;
    const scalablePaths = document.querySelectorAll('.scalablePath');
    //Break scalablePaths into array
    const scalablePathsArray = Object.keys(scalablePaths);
    for (var i = 0; i < scalablePathsArray.length; i++) {
        let toTransform = `default`;
            document.getElementById(`map${i}`).style.transform = `scale(${newPathScale})`;
    };
};

// Event listeners
if (page === `relation`) {
    updateMapScale();
    window.addEventListener('resize', updateMapScale);
};
if (page === `game`) {
    window.addEventListener('load', updateScale);
    window.addEventListener('resize', updateScale);
};
// Reload stylesheet - DOESN't WORK TO FIX FONT ON CONNECTION CHANGE BUG
// const reloadStyle = function () {
//     var linkStyleSheet = document.querySelector(`link`);
//     linkStyleSheet.href = `style.css`;
// };
// window.addEventListener('load', reloadStyle);

// ================================
// Change stat / relation text to reflect lang
// ================================

const statTranslate = function () {
    // Break loc.stat into statArray for working
    const statArray = Object.keys(loc[statTypeINeed]); // stat
    // Iterate over all yellow p's
    for (let i = 0; i < statArray.length && i < 4; i++) {
        let yellowP = loc[statTypeINeed][statArray[i]]; // stat
        let yellowPQS = document.querySelector(`#`+loc[statTypeINeed][statArray[i]].meta.name); //stat
        // Selector obtained, setting...
        yellowPQS.textContent = yellowP.meta[lang].text;

        // Break yellowP into yellowPArray for working
        const yellowPArray = Object.keys(yellowP);

        //Now, iterate over black th's in each p (stats)
        for (let i = 1; i < yellowPArray.length; i++) {
            // Name blackTH
            let blackTHname = yellowPArray[i];
            // Get blackTH actual
            let blackTH = yellowP[blackTHname];
            //Create selector        
            let blackTHQS = document.querySelector(`#`+blackTH.name);
            //Selector obtained, setting...
            blackTHQS.textContent = blackTH[lang].text;
        };

    };
};
// Activate statStranslate, if needed
if (page === `game` || page === `relation`) {
    statTranslate();
};

// ================================
// Translate вц elements
// ================================

const translateElementsInterface = function (lang) {
    // Function to change look of play + reset + returnFromRealation
    function changePlayLang(lang) {
        const gameStarted = dnum(`gameStarted`);
        const resetSelected = document.querySelector(`#reset`);
        if (gameStarted === 1) {
            document.querySelector(`#play`).textContent = loc.elementsInterface.play.continue[lang].text;
            resetSelected.textContent = loc.elementsInterface.reset.continue[lang].text;
            resetSelected.classList.remove(`greyed`);
        } else {
            document.querySelector(`#play`).textContent = loc.elementsInterface.play.start[lang].text;
            resetSelected.textContent = loc.elementsInterface.reset.continue[lang].text;
            resetSelected.classList.add(`greyed`);
        };
    };
    if (page === `index`) {
        changePlayLang(lang);
    };
    function changeReturnRelationLang(lang) {
        const returnFromRelationSelected = document.querySelector(`#returnFromRelation`);
        returnFromRelationSelected.textContent = loc.elementsInterface.returnFromRelation[lang].text;
    };
    if (page === `relation`) {
        changeReturnRelationLang(lang);
    };
};
translateElementsInterface(lang);

// ================================
// Change question/answer text to reflect lang
// ================================

const textTranslate = function () {
    // Break loc.question into questionArray for working
    const questionArray = Object.keys(loc.question);
}

// ================================
// Event Listeners for links
// ================================

// redirectToURL function
function redirectToURL(link) {
    window.location.href = link;
}

// Play + Reset links
const resetGame = function () {
    localStorage.clear();
    u(`lang`, `${lang}`)
    u(`gameStarted`, `0`);
    translateElementsInterface(lang);
}
document.addEventListener(`mousedown`, function(e) {
    if (e.target.id === `play`) {
        redirectToURL(`./game.html`);
        if (!dnum(`gameStarted`)) {
            initializeFromDefaultLocalStorage();
        }
    };
    if (e.target.id === `reset`) {
        resetGame();
    };
});

// Relations link + i key (open/close)
document.addEventListener(`mousedown`, function(e) {
    if (e.target.id === `relations`) redirectToURL(`./relations.html`); 
});
document.addEventListener(`keydown`, function(e) {
    if (e.key === `i`) {
        if (page === `relation`) {
            redirectToURL(`./game.html`);
        } else if (page === `game`) {
            redirectToURL(`./relations.html`);
        };
    };
});

// Exit to main link
document.addEventListener(`mousedown`, function(e) {
    if (e.target.id === `language`) {
        redirectToURL(`./index.html`);  
    };
});

// Exit from relation
document.addEventListener(`mousedown`, function(e) {
    if (e.target.id === `returnFromRelation`) {
        document.getElementById(`returnFromRelation`).classList.add('activeUnder');
        redirectToURL(`./game.html`)
    };
});

if (page === `relation`) {
    // Other for relation
    const returnFromRelationSelected = document.getElementById(`returnFromRelation`);
    // Active if touched
    returnFromRelationSelected.addEventListener('touchstart', function() {
        returnFromRelationSelected.classList.add('activeUnder');
    });
    // Not active if mousend
    returnFromRelationSelected.addEventListener('touchend', function() {
        returnFromRelationSelected.classList.remove('activeUnder');
    });
    // Active if mouseover
    returnFromRelationSelected.addEventListener('mouseover', function() {
        returnFromRelationSelected.classList.add('activeUnder');
    });
    // Not active if mouseout
    returnFromRelationSelected.addEventListener('mouseout', function() {
        returnFromRelationSelected.classList.remove('activeUnder');
    });
}

// Lang Link to change lang + statTranslate()
// Function which toggles language
function toggleLang(lang) {
    switch (lang) {
        case `eng`:
            lang = `ru`;
            return lang;
            break;
        case `ru`:
            lang = `eng`;
            return lang;
            break;
        default:
            lang = `eng`;
            return lang;
            break;
    };
};
// Listener actual
document.addEventListener(`mousedown`, function(e) {
    if (e.target.id === `setLanguage`) {
        lang = toggleLang(lang);
        localStorage.lang = lang;
        setVisualLang(lang);
        translateElementsInterface(lang);
    };
});

// ================================
// eventListeners relation map, mouseover
// ================================

let historyOnLoadDefault = function () {
    const stringRaw = `${loc.relationHistory.default.nameDisplay[lang]} - ${loc.relationHistory.default[lang]}`;
    const n = loc.relationHistory.default.nameDisplay[lang].length;
    document.getElementById(`history`).innerHTML = "<span class='highlightNormalCountry'>" + stringRaw.substring(0, n) + "</span>" + stringRaw.substring(n);
};

const addEventListenerMap = function (mapSelected) {
    mapSelected.addEventListener("mouseenter", function() {
        const name = mapSelected.classList[0].slice(6);
        const nameNoCap = name.toLowerCase();
        if (name === `Disaster` || name === `Country`) {
            const nameDisplay = loc.relationHistory[nameNoCap].nameDisplay[lang];
            const stringRaw = `${nameDisplay} - ${loc.relationHistory[nameNoCap][lang]}`;
            const n = nameDisplay.length;
            const highLightType = `highlight${name}`;
            let area = ``;
            if (name === `Country`) {
                area = `${dnum(`area${name}`)}k km^2`;
            };
            document.getElementById(`history`).innerHTML = `<span class='${highLightType}'>` + stringRaw.substring(0, n) + "</span>" + stringRaw.substring(n) + area;
        } else {
            const nameDisplay = loc.relation[nameNoCap].meta[lang].text;
            const stringRaw = `${nameDisplay} - ${loc.relationHistory[nameNoCap][lang]}${dnum(`area${name}`)}k km^2`;            
            const n = nameDisplay.length;
            document.getElementById(`history`).innerHTML = "<span class='highlightNormalCountry'>" + stringRaw.substring(0, n) + "</span>" + stringRaw.substring(n);
        };
        mapSelected.addEventListener("mouseleave", function() {historyOnLoadDefault()});
    });
};

let mapSelected = 0;
if (page == `relation`) {
    historyOnLoadDefault();
    const mapboxChildrenSelected = document.querySelector(`div.mapbox`).children;
    for (let i = 0; i < 6; i++) {
        mapSelected = mapboxChildrenSelected[i];
        addEventListenerMap(mapSelected);
    };
};

// ================================
// Question rotation
// ================================

// Set identified question
let setQuestion = function (questionName, neededCharacter) {
    const questionOnLoc = loc.question[questionName];
    // Draw char
    drawChar(neededCharacter);
    updateScale();
    // Class as status or war if needed
    const divCharacterSelected = document.querySelector(`div.character`);
    divCharacterSelected.classList.remove(`status`);
    divCharacterSelected.classList.remove(`war`);
    if (loc.question[questionName].status) {
        if (loc.question[questionName].status == 1) {
            divCharacterSelected.classList.add(`status`);
        };
    };
    if (loc.question[questionName].war) {
        if (loc.question[questionName].war == 1) {
            divCharacterSelected.classList.add(`war`);
        };
    };
    // TODO: apply textExclusion
    if (loc.character[neededCharacter].textExclusion) {
        // apply to property left and padding
        let textExclusion = JSON.parse(loc.character[neededCharacter].textExclusion);
        document.getElementById(`charTextAll`).style.left = `${textExclusion - 4}vmin`;
        document.querySelector(`div.buttonsContainer.mobileOnly`).style.right = `${textExclusion-4.5}vmin`;
        console.log(document.querySelector(`div.buttonsContainer.mobileOnly`).style.right);
    } else {
        document.getElementById(`charTextAll`).style.left = `-4vmin`;
        document.querySelector(`div.buttonsContainer.mobileOnly`).style.right = `-4.5vmin`;
        // document.querySelector(`div.buttonsContainer.mobileOnly`).style.paddingLeft = `2vmin`;
        console.log(document.querySelector(`div.buttonsContainer.mobileOnly`).style.right);
    };
    // Set prompt
    const promptSelected = document.getElementById(`prompt`);
    const textForPrompt = questionOnLoc[lang].text;
    // Finally set prompt
    promptSelected.innerHTML = textForPrompt;
    // Set Answers
    const answersSelected = document.querySelectorAll(`button.character`);
    const answersSelectedArray = Object.keys(answersSelected);
    // Get id, set text according to questionOnLoc[lang].text.answers
    for (let i = 0; i < answersSelectedArray.length; i++) {
        let greyed = 0;
        const answerSelectedID = answersSelected[i].id;
        if (questionOnLoc[lang].answers[answerSelectedID]) {
            // Set text initial
            answersSelected[i].innerHTML = `(${answerSelectedID}) ${questionOnLoc[lang].answers[answerSelectedID]}`;
            const answersSelectedI = answersSelected[i];
            // Set color gray for lacking diplomacy, mp, supplies
            const decksDowned = dArray(`decks`);
            const effectsArray = questionOnLoc[answersSelected[i].id];
            answersSelectedI.classList.remove(`greyed`);
            if (effectsArray.manpower < 0 || effectsArray.supplies < 0 || effectsArray.diplomaticHonti < 0 || effectsArray.diplomaticWest < 0 || effectsArray.diplomaticIsland < 0 || effectsArray.diplomaticPandea < 0) {
                console.log(dnum(`manpower`));
                // If not enough manpower
                if (-effectsArray.manpower > dnum(`manpower`)) {
                    if (lang == `ru`) {
                        answersSelectedI.innerHTML = answersSelectedI.innerHTML + ` [Нехватка мобресурса]`;
                    } else {
                        answersSelectedI.innerHTML = answersSelectedI.innerHTML + ` [Not enough manpower]`;
                    };
                    answersSelectedI.classList.add(`greyed`);
                    greyed = 1;
                };
                // Not enough supplies
                if (-effectsArray.supplies > dnum(`supplies`)) {
                    if (lang == `ru`) {
                        answersSelectedI.innerHTML = answersSelectedI.innerHTML + ` [Нехватка снабжения]`;
                    } else {
                        answersSelectedI.innerHTML = answersSelectedI.innerHTML + ` [Not enough supplies]`;
                    };
                    answersSelectedI.classList.add(`greyed`);
                    greyed = 1;
                };
                // TODO: Not enough treasury, tax
                if (-effectsArray.treasury > dnum(`treasury`)) {
                    if (lang == `ru`) {
                        answersSelectedI.innerHTML = answersSelectedI.innerHTML + ` [Нехватка капитала]`;
                    } else {
                        answersSelectedI.innerHTML = answersSelectedI.innerHTML + ` [Not enough capital]`;
                    };
                    answersSelectedI.classList.add(`greyed`);
                    greyed = 1;
                };
                if (-effectsArray.tax > dnum(`tax`)) {
                    if (lang == `ru`) {
                        answersSelectedI.innerHTML = answersSelectedI.innerHTML + ` [Налог слишком низок]`;
                    } else {
                        answersSelectedI.innerHTML = answersSelectedI.innerHTML + ` [Taxrate already too low]`;
                    };
                    answersSelectedI.classList.add(`greyed`);
                    greyed = 1;
                };
                // Not enough diplomacy
                if (decksDowned.includes(`diplomaticWestNeg`)) {
                    answersSelectedI.classList.add(`greyed`);
                    greyed = 1;
                };
                if (decksDowned.includes(`diplomaticPandeaNeg`)) {
                    answersSelectedI.classList.add(`greyed`);
                    greyed = 1;
                };
                if (decksDowned.includes(`diplomaticHontiNeg`)) {
                    answersSelectedI.classList.add(`greyed`);
                    greyed = 1;
                };
                if (decksDowned.includes(`diplomaticIslandNeg`)) {
                    answersSelectedI.classList.add(`greyed`);
                    greyed = 1;
                };
            };
            if (!greyed) {
                // Set color for [ square bracket
                const answerSelectedArray = Object.keys(answersSelected);
                const textForAnswerArray = answersSelected[i].innerHTML.split('');
                for (let i = 0; i < textForAnswerArray.length; i++) {
                    if (textForAnswerArray[i] == `[`) {
                        const textInit = answersSelectedI.innerHTML.substring(0, i);
                        const bigI = answersSelectedI.id;
                        if (textForAnswerArray.includes(`-`)) {
                            answersSelectedI.innerHTML = textInit + `<span class='${answerSelectedArray[bigI]} answerHiglightMinus'>` + answersSelectedI.innerHTML.substring(i) + "</span>";  
                        } else {
                            answersSelectedI.innerHTML = textInit + `<span class='${answerSelectedArray[bigI]} answerHiglightPlus'>` + answersSelectedI.innerHTML.substring(i) + "</span>";  
                        };
                    };
                };
            };
            // Unhide
            answersSelected[i].classList.remove(`hidden`);
            // Not active by default
            answersSelected[i].classList.remove(`active`);
            // Active if touched
            answersSelected[i].addEventListener('touchstart', function() {
                answersSelected[i].classList.add('active');
            });
            // Not active if mousend
            answersSelected[i].addEventListener('touchend', function() {
                answersSelected[i].classList.remove('active');
            });
            // Active if mouseover
            answersSelected[i].addEventListener('mouseover', function() {
                answersSelected[i].classList.add('active');
            });
            // Not active if mouseout
            answersSelected[i].addEventListener('mouseout', function() {
                answersSelected[i].classList.remove('active');
            });
            // On click of 1-4
            document.addEventListener(`keydown`, function(e) {
                var keyCode = event.keyCode;
                if (keyCode >= 49 && keyCode <= 52) {
                    const trueNumber = keyCode - 48;
                    document.getElementById(trueNumber).classList.add('active');
                }
            });
            // On keyup of 1-4
            document.addEventListener(`keyup`, function(e) {
                var keyCode = event.keyCode;
                if (keyCode >= 49 && keyCode <= 52) {
                    const trueNumber = keyCode - 48;
                    document.getElementById(trueNumber).classList.remove('active');
                }
            });
        } else {
            answersSelected[i].innerHTML = ``;
            answersSelected[i].classList.add(`hidden`);
        };
    };
};

// Init question on load (start game)
if (page === `game`) {
    let currentQuestion = d(`currentQuestion`);
    // let neededCharacter = loc.question[currentQuestion].characters[0];
    let neededCharacter = d(`currentCharacter`);
    setQuestion(currentQuestion, neededCharacter);
};

// Roll for new question
const rollForNewQuestion = function () {
    // Collect array with all questions
    const arrayAllQuestions = Object.keys(loc.question);
    // Iterate all questions
    for (let i = 0; i < 999999; i++) {
        // Roll random to choose one
        let randomIndex = Math.floor(Math.random() * arrayAllQuestions.length)
        let randomQuestion = arrayAllQuestions[randomIndex];
        const randomQuestionDecksNeedArray = loc.question[randomQuestion].decksNeed;
        const randomQuestionDecksPlusArray = loc.question[randomQuestion].decksPlusChnc;
        // Check if question has prerequisite decks
        const filteredDecksNeed = loc.question[randomQuestion].decksNeed.filter(function(item) {
            return typeof item !== "number";
        });
        let checkMarks = 0;
        const decks = dArray(`decks`);
        for (let i = 0; i < filteredDecksNeed.length; i++) {
            for (let iS = 0; iS < decks.length; iS++) {
                if (filteredDecksNeed[i] === decks[iS]) {
                    checkMarks = checkMarks + 1;
                };
            };
        };
        // Chance calculation
        // First, get base chance, then add chance from decksPlusChance
        let chance = loc.question[randomQuestion].baseChnc[0];
        const filteredDecksChnc = loc.question[randomQuestion].decksPlusChnc.filter(function(item) {
            return typeof item !== "number";
        });
        for (let i = 0; i < filteredDecksChnc.length; i++) {
            for (let iS = 0; iS < decks.length; iS++) {
                if (filteredDecksChnc[i] === decks[iS]) {
                    const indexOfNum = i * 2 + 1;
                    if (typeof loc.question[randomQuestion].decksPlusChnc[indexOfNum] == `number`) {
                        chance = chance + loc.question[randomQuestion].decksPlusChnc[indexOfNum];
                    };
                };
            };
        };
        // Does is pass?
        let chanceCheckPassed = 0;
        if (Math.random()*10000 <= chance) {
            chanceCheckPassed = 1;  
        };
        // Has question been selected? Needed decks and chanceCheckPassed
        if (checkMarks >= filteredDecksNeed.length && chanceCheckPassed) {
            const charactersOk = loc.question[randomQuestion].characters;
            const randomCharIndex = Math.floor(Math.random() * charactersOk.length);
            // Check that question isn't repeating
            if (randomQuestion !== d(`currentQuestion`)) {
                // loc.question[randomQuestion].decksRemove take off localStorage
                const decksToRemoveArray = loc.question[randomQuestion].decksRemove;
                const iterateAndRemoveDecks = function (decksToRemoveArray) {
                    if (decksToRemoveArray) {
                        for (let deckToRemoveI = 0; deckToRemoveI < decksToRemoveArray.length; deckToRemoveI++) {
                            const deckToRemove = decksToRemoveArray[deckToRemoveI];
                            for (let deckI = 0; deckI < decks.length; deckI++) {
                                if (deckToRemove == decks[deckI]) {
                                    const deckWithRemoved = decks.filter(function(item) {
                                        return item !== deckToRemove;
                                    });
                                    uArray(`decks`, deckWithRemoved);
                                };
                            };
                        };
                    };
                };
                iterateAndRemoveDecks(decksToRemoveArray);
                // loc.question[randomQuestion].decksAdd implementation
                const decksToAddArray = loc.question[randomQuestion].decksAdd
                if (decksToAddArray) {
                    let decksNew = dArray(`decks`);
                    for (let i = 0; i < decksToAddArray.length; i++) {
                        if (decksNew.includes(decksToAddArray[i])) {
                        } else {
                            if (decksToAddArray[i]) {
                                decksNew.push(decksToAddArray[i]);
                            }
                        };
                    };
                    uArray(`decks`, decksNew)
                };
            // Finally! return chosen question + its char
            return [randomQuestion, charactersOk[randomCharIndex]];
            };
        } else {
        };
    };
};

const decksAddRemoveOnClick = function (questionDotClicked) {
    // First, decksAdd
    if (questionDotClicked.hasOwnProperty(`decksAdd`)) {
        const addArray = questionDotClicked[`decksAdd`];
        let decksNow = dArray(`decks`);
        for (let i = 0; i < addArray.length; i++) {
            if (decksNow.includes(addArray[i])) {
            } else {
                decksNow.push(addArray[i]);
            };
        };
        uArray(`decks`, decksNow);
    };
    // Second, decksRemove
    if (questionDotClicked.hasOwnProperty(`decksRemove`)) {
        const removeArray = questionDotClicked[`decksRemove`];
        let decksNow = dArray(`decks`);
        for (let i = 0; i < removeArray.length; i++) {
            if (decksNow.includes(removeArray[i])) {
                for (let iS = 0; iS < decksNow.length; iS++) {
                    if (decksNow[iS] === (removeArray[i])) {
                        decksNow.splice(iS, 1);
                    };
                };
            };
        };
        uArray(`decks`, decksNow);
    };
};

// Remove / add decks based on stat
const decksAddRemoveOnStat = function () {
    // Get stats
    const manpower = dnum(`manpower`);
    const supplies = dnum(`supplies`);
    const diplomaticHonti = dnum(`diplomaticHonti`);
    const diplomaticWest = dnum(`diplomaticWest`);
    const diplomaticPandea = dnum(`diplomaticPandea`);
    const diplomaticIsland = dnum(`diplomaticIsland`);
    const provocationsHonti = dnum(`provocationsHonti`);
    const provocationsWest = dnum(`provocationsWest`);
    const provocationsPandea = dnum(`provocationsPandea`);
    const provocationsIsland = dnum(`provocationsIsland`);
    // Get array from decks
    let decksArray = dArray(`decks`);
    // Method to remove ALL of decks of type is needed
    const removeAll = function (entry) {
        function countOccurrences (arr, target) {
            var count = 0;
            for (var i = 0; i < arr.length; i++) {
              if (arr[i] === target) {
                count++;
              }
            }
            return count;
        };
        for (let i = 0; i < countOccurrences(decksArray, entry); i++) {
            decksArray = decksArray.filter(function(item) {
                return item !== entry;
            });
        };
    };
    // Method to only add one deck of type
    const pushIfNotExtists = function (theDeck) {
        if (!decksArray.includes(theDeck)) {
            decksArray.push(theDeck);
        };
    }
    // theDeck
    let theDeck = ``;
    // The Negs
    theDeck = `manpowerNeg`;
    if (manpower <= 0) {
        pushIfNotExtists(theDeck);
    } else {
        removeAll(theDeck);
    };
    theDeck = `suppliesNeg`;
    if (supplies <= 0) {
        pushIfNotExtists(theDeck);
    } else {
        removeAll(theDeck);
    };
    theDeck = `diplomaticHontiNeg`;
    if (diplomaticHonti <= 0) {
        pushIfNotExtists(theDeck);
    } else {
        removeAll(theDeck);
    };
    theDeck = `diplomaticWestNeg`;
    if (diplomaticWest <= 0) {
        pushIfNotExtists(theDeck);
    } else {
        removeAll(theDeck);
    };
    theDeck = `diplomaticPandeaNeg`;
    if (diplomaticPandea <= 0) {
        pushIfNotExtists(theDeck);
    } else {
        removeAll(theDeck);
    };
    theDeck = `diplomaticIslandNeg`;
    if (diplomaticIsland <= 0) {
        pushIfNotExtists(theDeck);
    } else {
        removeAll(theDeck);
    };
    // If provocations >= 3
    theDeck = `provocationsHonti3`;
    if (provocationsHonti >= 3) {
        pushIfNotExtists(theDeck);
    } else {
        removeAll(theDeck);
    };
    theDeck = `provocationsWest3`;
    if (provocationsWest >= 3) {
        pushIfNotExtists(theDeck);
    } else {
        removeAll(theDeck);
    };
    theDeck = `provocationsPandea3`;
    if (provocationsPandea >= 3) {
        pushIfNotExtists(theDeck);
    } else {
        removeAll(theDeck);
    };
    theDeck = `provocationsIsland3`;
    if (provocationsIsland >= 3) {
        pushIfNotExtists(theDeck);
    } else {
        removeAll(theDeck);
    };
    // Finally upload decks
    uArray(`decks`, decksArray);
};

// React to click 
if (page === `game`) {
    // Function reactToAnswer
    const reactToAnswer = function (target) {
        const targetedOption = target;
        const currentQuestion = d(`currentQuestion`);
        let nextQuestion;
        // Check if option even exists
        if (loc.question[currentQuestion][targetedOption]) {
            // Based on questionDotClicked, add and remove decks
            const questionDotClicked = loc.question[currentQuestion][targetedOption];
            decksAddRemoveOnClick(questionDotClicked);
            // Apply changes to stats
            const effectsKeys = Object.keys(questionDotClicked);
            for (let i = 0; i < effectsKeys.length; i++) {
                const item = effectsKeys[i];
                if (typeof questionDotClicked[item] == `number`) {
                    const currentValue = parseFloat(d(`${item}`));
                    const newValue = currentValue + questionDotClicked[item];
                    u(`${item}`, newValue);
                } else if (questionDotClicked[item] == `War` || questionDotClicked[item] == `Peace`) {
                    // Else if War/Peace, simply replace string
                    const newValue = questionDotClicked[item];
                    u(`${item}`, newValue);
                } else if (effectsKeys[i] == `nextQuestion`) {
                    nextQuestion = questionDotClicked[item];
                };
            };
            // Passive changes
            if (loc.question[currentQuestion].quartersPassed) {
                const questionOnLoc = loc.question[currentQuestion];
                const rlTimePassed = (questionOnLoc.quartersPassed / 4);
                // Updated score
                const currentScore = parseFloat(d(`score`));
                const newScore = currentScore + rlTimePassed;
                u(`score`, `${newScore}`);
                // Update election
                const currentElection = parseFloat(d(`election`));
                const newElection = currentElection - rlTimePassed;
                u(`election`, `${newElection}`);
                // Growth + taxes every "payment"
                const currentPayment = parseFloat(d(`payment`)) + (questionOnLoc.quartersPassed);
                let newPayment = currentPayment;
                for (let i = 0; newPayment >= 4; newPayment = currentPayment - 4) {
                    u(`gdp`, `${parseFloat(d(`gdp`))+parseFloat(d(`growth`))}`);
                    if (!(dnum(`gdp`) < 0)) {
                        u(`treasury`, `${parseFloat(d(`treasury`))+Math.round(parseFloat(d(`gdp`))*parseFloat(d(`tax`))/100)}`);
                    };
                };
                u(`payment`, `${newPayment}`);
                // Manpower, supplies each questionOnLoc.quartersPassed
                for (let i = 0; i < questionOnLoc.quartersPassed; i++) {
                    // man
                    const manpowerChange = Math.round(parseFloat(d(`manpowerChange`)*100))/100;
                    const manpower = parseFloat(d(`manpower`));
                    const manpowerUp100 = (manpower + manpowerChange)*100;
                    u(`manpower`, `${Math.round(manpowerUp100)/100}`);
                    // supplies
                    const suppliesChange = Math.round(parseFloat(d(`suppliesChange`)*10))/10;
                    const supplies = parseFloat(d(`supplies`));
                    const suppliesUp10 = (supplies + suppliesChange)*10;
                    u(`supplies`, `${Math.round(suppliesUp10)/10}`);
                    // Change in mil for countries (growth * 0.0001)
                    const milArray = [`milWest`, `milPandea`, `milHonti`, `milIsland`];
                    const growthArray = [`growthWest`, `growthPandea`, `growthHonti`, `growthIsland`];
                    for (let i = 0; i < milArray.length; i++) {
                        const currentMil = dnum(milArray[i]);
                        const currentGrowth = dnum(growthArray[i]);
                        const newMil = Math.round((currentMil + (currentGrowth * 0.0001))*100)/100;
                        u(`${milArray[i]}`, `${newMil}`)
                    };
                };
            };
            // Update
            updateStats();
            //Adding / removing decks based on stats
            decksAddRemoveOnStat();
            // Remember lastAnswer
            u(`lastAnswer`, `${target}`);
            if (nextQuestion) {
                // Get char and set
                if (!loc.question[nextQuestion]) {
                    console.log(`ERROR: Failed to get nextQuestion.`)  
                };
                const charactersOk = loc.question[nextQuestion].characters;
                const randomCharIndex = Math.floor(Math.random() * charactersOk.length);
                const character = charactersOk[randomCharIndex];
                // Change char in localStorage
                u(`currentCharacter`, `${character}`);
                // Change q in localStorage
                u(`currentQuestion`, `${nextQuestion}`);
                setQuestion(nextQuestion, character);
            } else {
                // Roll new q
                const itogArray = rollForNewQuestion();
                // Change char in localStorage
                u(`currentCharacter`, `${itogArray[1]}`);
                // Change q in localStorage
                u(`currentQuestion`, `${itogArray[0]}`);
                // Set new q
                setQuestion(itogArray[0], itogArray[1]);
            };
        };
    };
    // Event listeners for manual press
    document.addEventListener(`mousedown`, function(e) {
        const arrayClassList = Object.values(e.target.classList);
        if (!arrayClassList.includes(`greyed`)) {
            if (e.target.id === `1` || e.target.id === `2` || e.target.id === `3` || e.target.id === `4` || e.target.classList.contains(`1`) || e.target.classList.contains(`2`) || e.target.classList.contains(`3`) || e.target.classList.contains(`4`)) {
                reactToAnswer([e.target.id][0]);
            };
            // if (e.target.classList[0] === `1` || e.target.classList[0] === `2` || e.target.classList[0] === `3` || e.target.classList[0] === `4`) {
            //     reactToAnswer([e.target.classList][0][0]);
            // };
        };
    });
    // Event listener for 1-4 keys
    document.addEventListener(`keydown`, function(e) {
        const arrayClassList = Object.values(e.target.classList);
        if (!arrayClassList.includes(`greyed`)) {
            var keyCode = event.keyCode;
            if (keyCode >= 49 && keyCode <= 52) {
                const trueNumber = keyCode - 48;
                console.log(`reacted ${trueNumber}`)
                reactToAnswer(trueNumber);
            };
        };
    });
};